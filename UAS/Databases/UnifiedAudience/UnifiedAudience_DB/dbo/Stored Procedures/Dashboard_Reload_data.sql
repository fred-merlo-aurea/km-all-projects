CREATE PROCEDURE dbo.Dashboard_Reload_data
as
Begin

	SET NOCOUNT ON
	SET ANSI_WARNINGS OFF

	print 'Start : ' + ' / ' + CONVERT(varchar(200), getdate(), 109)

	DECLARE @TBLEXCLUDEPUBS TABLE (PUBCODE VARCHAR(100) PRIMARY KEY)
	DECLARE @TBLEXCLUDEPUBID TABLE (PUBID int PRIMARY KEY)
	DECLARE @TBLEXCLUDESUBSCRIPTIONID TABLE (SUBSCRIPTIONid int PRIMARY KEY)
	
	if (DB_Name() like '%PENNWELLMASTERDB%')
	BEGIN
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('APEXCTSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('APEXEGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('APEXPROMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('APEXSUBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('APEXSVYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('APEXWCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('APEXWPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('ATDBKO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('ATDCD3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('ATDCTSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('ATDEGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('ATDPROMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('ATDSUBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('ATDSVYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('ATDWCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('ATDWPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('BOW3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('BOWCTSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('BOWEGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('BOWIMGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('BOWMEDO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('BOWPHOO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('BOWPHOTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('BOWPRODO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('BOWPROMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('BOWSCIO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('BOWSUBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('BOWSVYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('BOWWCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('BOWWPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('BTR3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('BTRBGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('BTRBNO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('BTRCTSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('BTRDRO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('BTREGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('BTRLATNO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('BTRPROMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('BTRSUBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('BTRSVYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('BTRVIDO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('BTRWCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('BTRWKLYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('BTRWPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('CGEO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('CGFTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('CGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('CIM3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('CIMBGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('CIMCONTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('CIMCTSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('CIMDATAO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('CIMEGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('CIMNEWSO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('CIMPRODO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('CIMPROMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('CIMSUBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('CIMSVYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('CIMWCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('CIMWPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DE3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DEAlign3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DEBRCLINO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DECEN3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DECENBGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DECENCTSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DECENEGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DECENO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DECENPROMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DECENSUBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DECENSVYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DECENWCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DECENWPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DECTSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DEDADO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DEEGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DENDIQPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DENINCEO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DENSRRO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DENTALEGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DENTALSUBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DENTALSVYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DENTALWCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DENTALWPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DENTCTSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DENTPROMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DENUORO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DEPROMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DESSVYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DESUBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DETIPSO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DEVIDO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DEWCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DEWPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DOTAFTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DOTFTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DOTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DTAFFTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DTAFO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DTBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DTECH3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DTFTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DTIO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DWOFTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('DWOO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('EBNWSO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('EEIAWO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('EHCOALO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('EHGENO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('EHMPPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('EHTRANO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('EHUBCTSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('EHUBEGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('EHUBPROMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('EHUBSUBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('EHUBSVYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('EHUBWPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('EHWCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('ELP3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('ELPBGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('ELPCTSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('ELPEGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('ELPEO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('ELPEXECO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('ELPPGRDO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('ELPPROMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('ELPSHOWO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('ELPSUBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('ELPSVYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('ELPWCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('ELPWPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('EMSFTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('EMSO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('EMSTODAY3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FACTSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FAEGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FAPP3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FAPPNWSO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FAPPPRDO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FAPPRIGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FAPPVIDO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FAPROMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FASUBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FASVYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FAWCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FAWPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FDIC3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FDICENLO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FDICFTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FDICO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FDICWCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FE3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FEBGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FECTSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FEDAYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FEDYNO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FEEGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FEEMSO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FEEXTZO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FEFDICHTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FEFDICO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FEPRODO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FEPROMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FESUBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FESURVO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FESVYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FETZONEO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FEWCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FEWPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FFN3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FFNBGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FFNBNO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FFNBRNO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FFNCTSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FFNEGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FFNFEMSBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FFNJOBSO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FFNNOWO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FFNPRODO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FFNPROMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FFNSPECO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FFNSUBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FFNSVYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FFNWCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FFNWPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FIREBKO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FIRECD3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FIRECTSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FIREEGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FIREPROMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FIRESTNNWSO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FIRESUBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FIRESVYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FIREUSEDO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FIREUSFO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FIREWCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('FIREWPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('GFO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('HR3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('HRBGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('HRCTSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('HREGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('HRPROMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('HRSUBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('HRSVYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('HRW3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('HRWCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('HRWCTSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('HRWPROMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('HRWSUBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('HRWSVYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('HRWWBGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('HRWWCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('HRWWPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('HVBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('HVI3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('HVIFTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('HVINDO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('HVIO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('HVRO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('HWOEGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('HYDROPRMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('HYDROVIDO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('HYDROWKO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('IA3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('IACTSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('IAEGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('IAFARNO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('IANEWSO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('IAO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('IAPARISO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('IAPRODO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('IAPROMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('IASUBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('IASVYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('IAWCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('IAWPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('ILS3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('ILSADDO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('ILSBGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('ILSCTSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('ILSEGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('ILSILNPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('ILSLASERSO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('ILSLASSYSO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('ILSPROMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('ILSSUBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('ILSSVYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('ILSWCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('ILSWPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('IWW3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('IWWCTSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('IWWEGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('IWWENLO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('IWWPROMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('IWWSUBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('IWWSVYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('IWWWCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('IWWWPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('JEMPRODO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('JEMS3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('JEMSBGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('JEMSBNO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('JEMSBRNO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('JEMSCTSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('JEMSEGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('JEMSEMSO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('JEMSJOBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('JEMSNOWO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('JEMSPROMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('JEMSSUBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('JEMSSVYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('JEMSWCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('JEMSWPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LEDCTSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LEDEGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LEDFTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LEDJO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LEDLUXO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LEDNEWSO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LEDO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LEDPRODO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LEDPROMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LEDS3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LEDSBGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LEDSHOWO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LEDSUBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LEDSVIDO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LEDSVYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LEDVIDO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LEDWCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LEDWPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LFEPROMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LFW3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LFWBGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LFWBIOO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LFWCTSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LFWDETO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LFWEGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LFWFIBERO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LFWLSRSO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LFWOPTICO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LFWPHNWPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LFWSUBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LFWSVYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LFWTESTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LFWWCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LFWWPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LOISO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LPMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LSLFTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LUXFTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LW3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LWBGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LWBTRWKO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LWCTSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LWDATAO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LWEGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LWFRI5O')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LWPRODO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LWPROMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LWSPECO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LWSPROO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LWSUBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LWSVYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LWTECHO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LWVIDO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LWWCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('LWWPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('MAE3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('MAEBGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('MAECOMPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('MAECTSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('MAECYBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('MAEDEFO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('MAEEGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('MAENEWSO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('MAEPRODO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('MAEPROMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('MAESUBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('MAESVYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('MAEUVEHO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('MAEVIDO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('MAEWARO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('MAEWCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('MAEWEEKO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('MAEWPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('NHAFTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('NHAO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('NPEO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('NPIFTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('NPIO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OGFJ3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OGFJADO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OGFJCTSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OGFJEGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OGFJMIDO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OGFJNAPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OGFJPROMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OGFJREGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OGFJSHAO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OGFJSUBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OGFJSVYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OGFJWCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OGFJWKO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OGFJWPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OGJ3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OGJCTSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OGJDAYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OGJDRILO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OGJEDO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OGJEGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OGJPIPEO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OGJPMPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OGJPROMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OGJREFO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OGJSUBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OGJSVYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OGJWCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OGJWPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OGJWPPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OGPE3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OGPEBGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OGPECTSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OGPEEGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OGPENLO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OGPEPROMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OGPESUBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OGPESVYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OGPEWCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OGPEWPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OGPFTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OGPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OS3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OSAO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OSASIAO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OSBNEWO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OSCTSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OSDAYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OSDRILO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OSEGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OSGEOO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OSHOO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OSMEO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OSMIDEO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OSNSEAO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OSPROMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OSSHOWO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OSSUBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OSSUBSO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OSSVYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OSWCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OSWESTAO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OSWPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OWAFTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('OWAO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PEI3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PEIBGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PEICTSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PEIDIGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PEIEGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PEINTLO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PEIPOTEO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PEIPOTSO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PEIPROMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PEISHOWO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PEISUBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PEISVYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PEIWCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PEIWPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PEJBEGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PEJBPROMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PEJBSUBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PEJBSVYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PEJBWPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PENAO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PENGEGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PENGPODO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PENGPOPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PENGPROMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PENGPTDO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PENGPTPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PENGSUBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PENGSVYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PENGTSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PENGUPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PENGWCCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PENGWPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PESHOWO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PETRO3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PETROBKO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PETROCTSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PETROEGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PETROPROMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PETROSUBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PETROSVYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PETROWCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PETROWPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PEVIDO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PGAFFFTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PGAFFTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PGAFO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PGAFTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PGAO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PGBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PGE3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PGEFTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PGFTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PGI3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PGICAO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PGIO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PGMEFTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PGMEO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PGNGFTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PGNGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PGRID3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PGRIDBGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PGRIDCTSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PGRIDEGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PGRIDPROMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PGRIDSUBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PGRIDWCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PGRIDWPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PNECFTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PNECO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PNJBCTSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PNJBJOBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('POE3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('POECTSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('POEEGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('POEPROMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('POESUBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('POESVYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('POEWCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('POEWPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('POWER3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PRFAPXO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PRGIDSVYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PWDENTAL3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PWIO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PWRBKO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PWRCTSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PWREGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PWRPROMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PWRSUBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PWRSVYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PWRWCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PWRWPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('PWWATER3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('RDH3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('RDHCTSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('RDHEGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('RDHENLO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('RDHFOCSO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('RDHFTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('RDHGRADO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('RDHO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('RDHPROMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('RDHSUBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('RDHUORO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('RDHVIDO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('RDHWCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('RDHWPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('RENCD3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('RENCDCTSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('RENCDEGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('RENCDPROMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('RENCDSUBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('RENCDSVYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('RENCDWCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('RENCDWPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('REW3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('REWAFTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('REWAO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('REWBGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('REWBIOO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('REWCTSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('REWEFTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('REWEGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('REWENLO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('REWEO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('REWGEOO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('REWIO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('REWNAFTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('REWNAO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('REWPROMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('REWSOLBOSO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('REWSOLRO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('REWSTORO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('REWSUBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('REWSVYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('REWWCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('REWWINDO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('REWWPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('RPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('SHOO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('SIBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('SIL3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('SILCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('SILEFTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('SILEO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('SILFTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('SILO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('SSTFTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('SSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('TFEO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('TFWO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('TOPSFTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('TOPSIDES3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('TOPSO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('UPBGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('UPEGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('UPENLO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('UPEQUSO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('UPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('UPT3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('UPWPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('UTPCTSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('UTPPROMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('UTPSUBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('UTPSVYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('UTPWCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('VSD3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('VSDBGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('VSDBOARDSO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('VSDCAMERAO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('VSDCTSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('VSDEGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('VSDPROMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('VSDSUBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('VSDSVYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('VSDVSNPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('VSDWCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('VSDWPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('WTRBKO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('WTRCTSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('WTREGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('WTRPROMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('WTRSUBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('WTRSVYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('WTRWCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('WTRWPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('WW3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('WWBGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('WWBUYGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('WWCTSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('WWEGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('WWENLO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('WWI3POO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('WWICTSTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('WWIDESO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('WWIEGO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('WWIENLO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('WWIPROMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('WWISUBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('WWISVYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('WWIVIDO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('WWIWCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('WWIWPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('WWMEO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('WWPROMO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('WWPUMPO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('WWSUBO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('WWSVYO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('WWUMGTO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('WWURBNO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('WWVIDO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('WWWCO')
		INSERT INTO @TBLEXCLUDEPUBS VALUES ('WWWPO')

		print 'INSERT INTO @TBLEXCLUDEPUBS : ' + ' / ' + CONVERT(varchar(200), getdate(), 109)

		INSERT INTO @TBLEXCLUDEPUBid
		SELECT P.PubID FROM @TBLEXCLUDEPUBS T JOIN PUBS P ON T.PUBCODE = P.PUBCODE

		print 'INSERT INTO @TBLEXCLUDEPUBid : ' + convert(varchar(100), @@ROWCOUNT) + ' / ' + CONVERT(varchar(200), getdate(), 109)
		
		INSERT INTO @TBLEXCLUDESUBSCRIPTIONID
		SELECT distinct PS.SUBSCRIPTIONID from PubSubscriptions ps with (NOLOCK)
		where 
				ps.PubID in (select pubID from @TBLEXCLUDEPUBid)
				and SubscriptionID not in 
				(
					SELECT distinct PS.SUBSCRIPTIONID from PubSubscriptions ps with (NOLOCK)
					where ps.PubID not in (select pubID from @TBLEXCLUDEPUBid)		
				)
		
		print 'INSERT INTO @TBLEXCLUDESUBSCRIPTIONID : ' + convert(varchar(100), @@ROWCOUNT) + ' / ' + CONVERT(varchar(200), getdate(), 109)
	END

	declare @startdate date,
			@enddate date,
			@currentdt date = getdate(),
			@currentdtMonth int = month(getdate()),
			@currentdtYear  int = year(getdate())

	declare @monthLastDate table (dt date , dtNumber int)
		
	SET @enddate = DATEADD(day, -1, DateAdd(Month, 2, DATEADD(DAY, -1 * (DAY(GETDATE()) - 1), GETDATE())))

	delete from dbo.[Summary_Data]
	dbcc checkident (Summary_Data,'RESEED',1)
	delete from dbo.[Summary_BrandDimension_Data]
	dbcc checkident (Summary_BrandDimension_Data,'RESEED',1)
	delete from dbo.Summary_ProductTypeDimension_Data
	dbcc checkident (Summary_ProductTypeDimension_Data,'RESEED',1)
	delete from Summary_PubTypeBrandDimension_Data
	dbcc checkident (Summary_PubTypeBrandDimension_Data,'RESEED',1)

	/* OriginatedPubID update in Subscriptions */
	
	update pubsubscriptions set datecreated = Qualificationdate where datecreated is null

	update S
	Set OriginatedPubID = x.PubID  
	from Subscriptions s join
	(
	select ps.subscriptionID, ps.pubID, ROW_NUMBER() over (partition by ps.subscriptionID order by ps.datecreated asc) rown
	from PubSubscriptions ps with (NOLOCK) join Subscriptions s on ps.subscriptionID = s.subscriptionID
	where isnull(s.OriginatedPubID,0) = 0
	) x on s.subscriptionID = x.subscriptionID
	where x.rown = 1

	print 'OriginatedPubID update in Subscriptions : ' + convert(varchar(100), @@ROWCOUNT) + ' / ' + CONVERT(varchar(200), getdate(), 109)

	insert into dbo.[Summary_Data] (entityName,[Type],PubID,DomainTrackingID,Date,DateMonth,DateYear,[Counts])
	select 'subscriptions', 'New', OriginatedPubID PubID, null, CONVERT(date,datecreated) as DateCreated , MONTH(CONVERT(date,datecreated)), YEAR(CONVERT(date,datecreated)), count(subscriptionID)
	from 
			Subscriptions with (NOLOCK)
	where 
			DateCreated is not null and
			OriginatedPubID Not in (select t.PUBID from @TBLEXCLUDEPUBid t) and
			SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)
	group by OriginatedPubID, CONVERT(date, datecreated)

	PRINT  'SUBSCRIPTIONS-NEW by OriginatedPubID: ' + ' / ' + convert(varchar(100), @@ROWCOUNT) + ' / ' + CONVERT(varchar(200), getdate(), 109)

	insert into dbo.[Summary_Data] (entityName,[Type],PubID,DomainTrackingID,Date,DateMonth,DateYear,[Counts])
	select 'PubSubscriptions', 'New', PubID, null, CONVERT(date, datecreated), MONTH(CONVERT(date,datecreated)), YEAR(CONVERT(date,datecreated))  , count(subscriptionID)
	from	
			PubSubscriptions with (NOLOCK)
	where 
			DateCreated is not null  and
			PubID Not in (select t.PUBID from @TBLEXCLUDEPUBid t) and
			SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)
	group by PubID, CONVERT(date, datecreated)

	PRINT  'PUBSUBSCRIPTIONS-NEW : ' + ' / ' + convert(varchar(100), @@ROWCOUNT) + ' / ' + CONVERT(varchar(200), getdate(), 109)

	/*******************************************************************************/	
	/*******************************   SubscriberOpenActivity *******************************/
	/*******************************************************************************/	
	
	insert into dbo.[Summary_Data] (entityName,[Type],PubID,DomainTrackingID,Date,DateMonth,DateYear,[Counts])
	select 'SubscriberOpenActivity', 'New', ps.PubID, null, CONVERT(date, ActivityDate), MONTH(CONVERT(date, ActivityDate)), YEAR(CONVERT(date, ActivityDate))  , count(OpenActivityID)
	from 
			SubscriberOpenActivity soa with (NOLOCK) left outer join 
			PubSubscriptions ps with (NOLOCK) on soa.pubsubscriptionID = ps.pubSubscriptionID 
	where 
			ps.PubID Not in (select t.PUBID from @TBLEXCLUDEPUBid t) and
			ps.SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)

	group by PubID, CONVERT(date, ActivityDate)

	PRINT  'SUBSCRIBEROPENACTIVITY-NEW : ' + ' / ' + convert(varchar(100), @@ROWCOUNT) + ' / ' + CONVERT(varchar(200), getdate(), 109)

	--insert into dbo.[Summary_Data] (entityName,[Type],brandID,DomainTrackingID,Date,DateMonth,DateYear,[Counts])
	--select 'SubscriberOpenActivity', 'New', bd.BrandID, null, CONVERT(date, ActivityDate), MONTH(CONVERT(date, ActivityDate)), YEAR(CONVERT(date, ActivityDate))  , count(OpenActivityID)
	--from 
	--		SubscriberOpenActivity soa with (NOLOCK) join 
	--		PubSubscriptions ps with (NOLOCK) on soa.pubsubscriptionID = ps.pubSubscriptionID join
	--		BrandDetails bd with (NOLOCK) on ps.pubID = bd.PubID
	--group by bd.BrandID, CONVERT(date, ActivityDate)
	
	
	insert into dbo.[Summary_Data] (entityName,[Type],brandID,DomainTrackingID,Date,DateMonth,DateYear,[Counts])
	Select 
	'SubscriberOpenActivity', 'New', BrandID, null, CONVERT(date, ActivityDate), MONTH(CONVERT(date, ActivityDate)), YEAR(CONVERT(date, ActivityDate))  , count(BrandID)
	from
	(
	select bd.BrandID,  CONVERT(date, ActivityDate) as ActivityDate
	from 
			SubscriberOpenActivity soa with (NOLOCK) join 
			PubSubscriptions ps with (NOLOCK) on soa.pubsubscriptionID = ps.pubSubscriptionID join
			BrandDetails bd with (NOLOCK) on ps.pubID = bd.PubID
	where 
		ps.PubID Not in (select t.PUBID from @TBLEXCLUDEPUBid t) and
		ps.SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)

	) t
	group by t.BrandID, t.ActivityDate
	
	
	PRINT  'SUBSCRIBEROPENACTIVITY-NEW BRAND: ' + ' / ' + convert(varchar(100), @@ROWCOUNT) + ' / ' + CONVERT(varchar(200), getdate(), 109)

	select @startdate = MIN(ActivityDate) from SubscriberOpenActivity  with (NOLOCK)
	set @startdate  = DateAdd(Month, 1, DATEADD(DAY, -1 * (DAY(@startdate) - 1), @startdate))
		
	while (@StartDate <= @enddate)
	begin
		insert into @monthLastDate values (dateadd(DAY, -1, @startdate), master.dbo.fn_GetDateDaysFromDate(dateadd(DAY, -1, @startdate)))
		set @StartDate = DATEADD(month, 1, @StartDate)
	end
	
	insert into dbo.[Summary_Data] (entityName,[Type],PubID,Date,DateMonth,DateYear, CountsType, Counts)
	select  
		'SubscriberOpenActivity', 'Net', null, t.dt, MONTH(CONVERT(date, dt)), YEAR(CONVERT(date, dt)),'Cumulative' , 	sum(sd.counts)
	from 
		[Summary_Data] sd with (NOLOCK) join
		@monthLastDate t on sd.[Date] <= t.dt 
	where 
			entityname = 'SubscriberOpenActivity' and [type] = 'New' and isnull(brandID,0) = 0
	group by t.dt order by t.dt	

	PRINT  'SUBSCRIBEROPENACTIVITY-NET : ' + ' / ' + convert(varchar(100), @@ROWCOUNT) + ' / ' + CONVERT(varchar(200), getdate(), 109)

	insert into dbo.[Summary_Data] (entityName,[Type],BrandID,Date,DateMonth,DateYear, CountsType, Counts)
	select  
		'SubscriberOpenActivity', 'Net', sd.brandID, t.dt, MONTH(CONVERT(date, dt)), YEAR(CONVERT(date, dt)),'Cumulative' , sum(sd.counts)
	from 
		[Summary_Data] sd with (NOLOCK) join
		@monthLastDate t on sd.[Date] <= t.dt 
	where 
		entityname = 'SubscriberOpenActivity' and [type] = 'New' and isnull(sd.brandID,0) > 0
	group by sd.brandID, t.dt order by sd.brandID, t.dt	

	PRINT  'SUBSCRIBEROPENACTIVITY-NET BRAND: ' + ' / ' + convert(varchar(100), @@ROWCOUNT) + ' / ' + CONVERT(varchar(200), getdate(), 109)
		
	--insert into dbo.[Summary_Data] (entityName,[Type],PubID,Date,DateMonth,DateYear, CountsType, Counts)
	--select  
	--	'SubscriberOpenActivity', 'UniqueSubscriber', null, t.dt, MONTH(CONVERT(date, dt)), YEAR(CONVERT(date, dt)),'Cumulative' , count(distinct SubscriptionID)
	--from 
	--	SubscriberOpenActivity sca with (NOLOCK) join
	--	@monthLastDate t on sca.DateNumber <= t.dtNumber 
	--group by t.dt order by t.dt	
	
	;with CTE (subscriptionID, DateNumber)
	as
	(
		   select subscriptionID, min(DateNumber)
		   from SubscriberOpenActivity sca with (NOLOCK) 
		   	where 
			SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)
		   group by subscriptionID
	)
	insert into dbo.[Summary_Data] (entityName,[Type],PubID,Date,DateMonth,DateYear, CountsType, Counts)
	select  
		   'SubscriberOpenActivity', 'UniqueSubscriber', null, t.dt, MONTH(CONVERT(date, dt)), YEAR(CONVERT(date, dt)),'Cumulative' , count(SubscriptionID)
	from 
		   CTE with (NOLOCK) join
		   @monthLastDate t on CTE.DateNumber <= t.dtNumber 
	group by t.dt order by t.dt  ;	
	
	
	
	PRINT  'SUBSCRIBEROPENACTIVITY-UNIQUESUBSCRIBER : ' + ' / ' + convert(varchar(100), @@ROWCOUNT) + ' / ' + CONVERT(varchar(200), getdate(), 109)

	--insert into dbo.[Summary_Data] (entityName,[Type],brandID,Date,DateMonth,DateYear, CountsType, Counts)
	--select  
	--	'SubscriberOpenActivity', 'UniqueSubscriber', bd.brandID, t.dt, MONTH(CONVERT(date, dt)), YEAR(CONVERT(date, dt)),'Cumulative' , count(distinct ps.SubscriptionID)
	--from 
	--	SubscriberOpenActivity sca with (NOLOCK)  join 
	--	PubSubscriptions ps with (NOLOCK) on sca.pubsubscriptionID = ps.pubSubscriptionID join
	--	BrandDetails bd with (NOLOCK) on ps.pubID = bd.PubID join
	--	@monthLastDate t on sca.DateNumber <= t.dtNumber 
	--group by bd.brandID, t.dt order by t.dt	

	;with CTE (BrandID, subscriptionID, DateNumber)
	as
	(
		   select brandID, ps.SubscriptionID, min(DateNumber)
			from 
				SubscriberOpenActivity sca with (NOLOCK)  join 
				PubSubscriptions ps with (NOLOCK) on sca.pubsubscriptionID = ps.pubSubscriptionID join
				BrandDetails bd with (NOLOCK) on ps.pubID = bd.PubID
			where 
				ps.PubID Not in (select t.PUBID from @TBLEXCLUDEPUBid t) and
				ps.SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)


		   group by bd.BrandID, ps.SubscriptionID
	)
	insert into dbo.[Summary_Data] (entityName,[Type],brandID,Date,DateMonth,DateYear, CountsType, Counts)
	select  
			'SubscriberOpenActivity', 'UniqueSubscriber', brandID, t.dt, MONTH(CONVERT(date, dt)), YEAR(CONVERT(date, dt)),'Cumulative' , count(SubscriptionID)
	from 
		   CTE with (NOLOCK) join
		   @monthLastDate t on CTE.DateNumber <= t.dtNumber 
	group by brandID, t.dt order by brandID, t.dt	
	;
 
	
	PRINT  'SUBSCRIBEROPENACTIVITY-UNIQUESUBSCRIBER BRAND : '+ ' / ' + convert(varchar(100), @@ROWCOUNT) + ' / ' + CONVERT(varchar(200), getdate(), 109)

	/*******************************************************************************/	
	/*******************************   SubscriberClickActivity *******************************/
	/*******************************************************************************/	

	insert into dbo.[Summary_Data] (entityName,[Type],PubID,DomainTrackingID,Date,DateMonth,DateYear,[Counts])
	select 'SubscriberClickActivity', 'New', ps.PubID, null, CONVERT(date, ActivityDate), MONTH(CONVERT(date, ActivityDate)), YEAR(CONVERT(date, ActivityDate))  , count(ClickActivityID)
	from 
			SubscriberClickActivity sca with (NOLOCK) left outer join 
			PubSubscriptions ps with (NOLOCK) on sca.pubsubscriptionID = ps.pubSubscriptionID 
	where 
		ps.PubID Not in (select t.PUBID from @TBLEXCLUDEPUBid t) and
		ps.SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)
	group by PubID, CONVERT(date, ActivityDate)

	PRINT  'SUBSCRIBERCLICKACTIVITY-NEW : ' + ' / ' + convert(varchar(100), @@ROWCOUNT) + ' / ' + CONVERT(varchar(200), getdate(), 109)

	insert into dbo.[Summary_Data] (entityName,[Type],brandID,DomainTrackingID,Date,DateMonth,DateYear,[Counts])
	select 'SubscriberClickActivity', 'New', bd.BrandID, null, CONVERT(date, ActivityDate), MONTH(CONVERT(date, ActivityDate)), YEAR(CONVERT(date, ActivityDate))  , count(ClickActivityID)
	from 
			SubscriberClickActivity sca with (NOLOCK) join 
			PubSubscriptions ps with (NOLOCK) on sca.pubsubscriptionID = ps.pubSubscriptionID  join
			BrandDetails bd with (NOLOCK) on ps.pubID = bd.PubID
	where 
		ps.PubID Not in (select t.PUBID from @TBLEXCLUDEPUBid t) and
		ps.SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)
	group by bd.BrandID, CONVERT(date, ActivityDate)
	
	PRINT  'SUBSCRIBERCLICKACTIVITY-NEW BRAND : ' + ' / ' + convert(varchar(100), @@ROWCOUNT) + ' / ' + CONVERT(varchar(200), getdate(), 109)

	delete from @monthLastDate

	select @startdate = MIN(ActivityDate) from SubscriberClickActivity  with (NOLOCK)
	set @startdate  = DateAdd(Month, 1, DATEADD(DAY, -1 * (DAY(@startdate) - 1), @startdate))
		
	while (@StartDate <= @enddate)
	begin
		insert into @monthLastDate values (dateadd(DAY, -1, @startdate), master.dbo.fn_GetDateDaysFromDate(dateadd(DAY, -1, @startdate)))
		set @StartDate = DATEADD(month, 1, @StartDate)
	end
	
	insert into dbo.[Summary_Data] (entityName,[Type],PubID,Date,DateMonth,DateYear, CountsType, Counts)
	select  
		'SubscriberClickActivity', 'Net', null, t.dt, MONTH(CONVERT(date, dt)), YEAR(CONVERT(date, dt)),'Cumulative' , 	sum(sd.counts)
	from 
		[Summary_Data] sd with (NOLOCK) join
		@monthLastDate t on sd.[Date] <= t.dt 
	where 
			entityname = 'SubscriberClickActivity' and [type] = 'New' and isnull(brandID,0) = 0
	group by t.dt order by t.dt	

	PRINT  'SUBSCRIBERCLICKACTIVITY-NET : ' + ' / ' + convert(varchar(100), @@ROWCOUNT) + ' / ' + CONVERT(varchar(200), getdate(), 109)

	insert into dbo.[Summary_Data] (entityName,[Type],BrandID,Date,DateMonth,DateYear, CountsType, Counts)
	select   'SubscriberClickActivity', 'Net', sd.brandID, t.dt, MONTH(CONVERT(date, dt)), YEAR(CONVERT(date, dt)),'Cumulative' , sum(sd.counts)
	from 
		[Summary_Data] sd with (NOLOCK) join
		@monthLastDate t on sd.[Date] <= t.dt 
	where 
		entityname = 'SubscriberClickActivity' and [type] = 'New' and isnull(sd.brandID,0) > 0
	group by sd.brandID, t.dt order by sd.brandID, t.dt	

	PRINT  'SUBSCRIBERCLICKACTIVITY-NET BRAND: ' + ' / ' + convert(varchar(100), @@ROWCOUNT) + ' / ' + CONVERT(varchar(200), getdate(), 109)
		
	--insert into dbo.[Summary_Data] (entityName,[Type],PubID,Date,DateMonth,DateYear, CountsType, Counts)
	--select  
	--	'SubscriberClickActivity', 'UniqueSubscriber', null, t.dt, MONTH(CONVERT(date, dt)), YEAR(CONVERT(date, dt)),'Cumulative' , count(distinct SubscriptionID)
	--from 
	--	SubscriberClickActivity sca with (NOLOCK) join
	--	@monthLastDate t on sca.DateNumber <= t.dtNumber
	--group by t.dt order by t.dt	

	;with CTE (subscriptionID, DateNumber)
	as
	(
		   select sca.SubscriptionID, min(DateNumber)
			from 
			SubscriberClickActivity sca with (NOLOCK)
			where 
			SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)
		   group by sca.SubscriptionID
	)
	insert into dbo.[Summary_Data] (entityName,[Type],PubID,Date,DateMonth,DateYear, CountsType, Counts)
	select  
			'SubscriberClickActivity', 'UniqueSubscriber', null, t.dt, MONTH(CONVERT(date, dt)), YEAR(CONVERT(date, dt)),'Cumulative' , count(SubscriptionID)
	from 
		   CTE with (NOLOCK) join
		   @monthLastDate t on CTE.DateNumber <= t.dtNumber 
	group by t.dt order by t.dt	
	;
	PRINT  'SUBSCRIBERCLICKACTIVITY-UNIQUESUBSCRIBER : ' + ' / ' + convert(varchar(100), @@ROWCOUNT) + ' / ' + CONVERT(varchar(200), getdate(), 109)

	--insert into dbo.[Summary_Data] (entityName,[Type],brandID,Date,DateMonth,DateYear, CountsType, Counts)
	--select  
	--	'SubscriberClickActivity', 'UniqueSubscriber', bd.BrandID, t.dt, MONTH(CONVERT(date, dt)), YEAR(CONVERT(date, dt)),'Cumulative' , count(distinct sca.SubscriptionID)
	--from 
	--	SubscriberClickActivity sca with (NOLOCK) join 
	--	PubSubscriptions ps with (NOLOCK) on sca.pubsubscriptionID = ps.pubSubscriptionID  join
	--	BrandDetails bd with (NOLOCK) on ps.pubID = bd.PubID join
	--	@monthLastDate t on sca.DateNumber <= t.dtNumber
	--group by bd.BrandID,t.dt order by bd.BrandID,t.dt	

	;with CTE (BrandID, subscriptionID, DateNumber)
	as
	(
		select brandID, ps.SubscriptionID, min(DateNumber)
		from 
			SubscriberClickActivity sca with (NOLOCK) join 
			PubSubscriptions ps with (NOLOCK) on sca.pubsubscriptionID = ps.pubSubscriptionID  join
			BrandDetails bd with (NOLOCK) on ps.pubID = bd.PubID
		where 
			ps.PubID Not in (select t.PUBID from @TBLEXCLUDEPUBid t) and
			ps.SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)
		group by bd.BrandID, ps.SubscriptionID
	)
	insert into dbo.[Summary_Data] (entityName,[Type],BrandID,Date,DateMonth,DateYear, CountsType, Counts)
	select  
			'SubscriberClickActivity', 'UniqueSubscriber', BrandID, t.dt, MONTH(CONVERT(date, dt)), YEAR(CONVERT(date, dt)),'Cumulative' , count(SubscriptionID)
	from 
		   CTE with (NOLOCK) join
		   @monthLastDate t on CTE.DateNumber <= t.dtNumber 
	group by brandID, t.dt order by brandID, t.dt	
	;
	PRINT  'SUBSCRIBERCLICKACTIVITY-UNIQUESUBSCRIBER BRAND: ' + ' / ' + convert(varchar(100), @@ROWCOUNT) + ' / ' + CONVERT(varchar(200), getdate(), 109)
	
	/*******************************************************************************/	
	/*******************************   SubscriberVisitActivity *******************************/
	/*******************************************************************************/	

	insert into dbo.[Summary_Data] (entityName,[Type],PubID,DomainTrackingID,Date,DateMonth,DateYear,[Counts])
	select 'SubscriberVisitActivity', 'New', null, domaintrackingID, CONVERT(date, ActivityDate), MONTH(CONVERT(date, ActivityDate)), YEAR(CONVERT(date, ActivityDate))  , count(VisitActivityID)
	from 
			SubscriberVisitActivity sva with (NOLOCK)
	where 
		SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)
	group by domaintrackingID, CONVERT(date, ActivityDate)
	order by 1,2,3,4;

	PRINT  'SUBSCRIBERVISITACTIVITY-NEW : ' + ' / ' + convert(varchar(100), @@ROWCOUNT) + ' / ' + CONVERT(varchar(200), getdate(), 109)

	--insert into dbo.[Summary_Data] (entityName,[Type],BrandID, DomainTrackingID,Date,DateMonth,DateYear,[Counts])
	--select 'SubscriberVisitActivity', 'New', brandID, domaintrackingID, CONVERT(date, ActivityDate), MONTH(CONVERT(date, ActivityDate)), YEAR(CONVERT(date, ActivityDate))  , count(distinct VisitActivityID)
	--from 
	--	SubscriberVisitActivity sva with (NOLOCK) join
	--	PubSubscriptions ps with (NOLOCK) on sva.SubscriptionID = ps.subscriptionID join
	--	BrandDetails bd on ps.pubID = bd.pubID 
	--group by domaintrackingID, brandID, CONVERT(date, ActivityDate)
	--order by 1,2,3,4;

	CREATE TABLE #TempVisitNew (BrandID int, DomainTrackingID int, ActivityDate DateTime, TotalVisit int)

	INSERT INTO #TempVisitNew
		SELECT bd.BrandID, sva.DomainTrackingID, CONVERT(DATE,sva.ActivityDate), COUNT(distinct sva.VisitActivityID)
		from 
			SubscriberVisitActivity sva with (NOLOCK) join
			PubSubscriptions ps with (NOLOCK) on sva.SubscriptionID = ps.subscriptionID join
			BrandDetails bd on ps.pubID = bd.pubID 
		where 
			ps.PubID Not in (select t.PUBID from @TBLEXCLUDEPUBid t) and
			ps.SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)
		group by domaintrackingID, brandID, CONVERT(date, ActivityDate)

	CREATE INDEX idx_t on #TempVisitNew(BrandID, DomainTrackingID)


	insert into dbo.[Summary_Data] (entityName,[Type],brandID,DomainTrackingID,Date,DateMonth,DateYear,[Counts])
		select 'SubscriberVisitActivity', 'New', brandID, domaintrackingID, CONVERT(date, ActivityDate), MONTH(CONVERT(date, ActivityDate)), YEAR(CONVERT(date, ActivityDate)), TotalVisit
		from #TempVisitNew
		order by 1,2,3,4,5;
		
	DROP TABLE #TempVisitNew

	PRINT  'SUBSCRIBERVISITACTIVITY-NEW BRAND: ' + ' / ' + convert(varchar(100), @@ROWCOUNT) + ' / ' + CONVERT(varchar(200), getdate(), 109)

	delete from @monthLastDate

	select @startdate = MIN(ActivityDate) from SubscriberVisitActivity  with (NOLOCK)
	set @startdate  = DateAdd(Month, 1, DATEADD(DAY, -1 * (DAY(@startdate) - 1), @startdate))
		
	while (@StartDate <= @enddate)
	begin
		insert into @monthLastDate values (dateadd(DAY, -1, @startdate), master.dbo.fn_GetDateDaysFromDate(dateadd(DAY, -1, @startdate)))
		set @StartDate = DATEADD(month, 1, @StartDate)
	end

	insert into dbo.[Summary_Data] (entityName,[Type],PubID,Date,DateMonth,DateYear, CountsType, Counts)
	select  
		'SubscriberVisitActivity', 'Net', null, t.dt, MONTH(CONVERT(date, dt)), YEAR(CONVERT(date, dt)),'Cumulative' , 	sum(sd.counts)
	from 
		[Summary_Data] sd with (NOLOCK) join
		@monthLastDate t on sd.[Date] <= t.dt 
	where
		sd.EntityName = 'SubscriberVisitActivity' and
		sd.type = 'New' and
		isnull(brandID, 0) = 0
	group by t.dt order by t.dt	

	PRINT  'SUBSCRIBERVISITACTIVITY-NET : ' + ' / ' + convert(varchar(100), @@ROWCOUNT) + ' / ' + CONVERT(varchar(200), getdate(), 109)

	insert into dbo.[Summary_Data] (entityName,[Type],BrandID,Date,DateMonth,DateYear, CountsType, Counts)
	select  
		'SubscriberVisitActivity', 'Net', sd.BrandID, t.dt, MONTH(CONVERT(date, dt)), YEAR(CONVERT(date, dt)),'Cumulative' , 	sum(sd.counts)
	from 
		[Summary_Data] sd with (NOLOCK) join
		@monthLastDate t on sd.[Date] <= t.dt 
	where
		sd.EntityName = 'SubscriberVisitActivity' and
		sd.type = 'New' and
		isnull(brandID, 0) > 0
	group by sd.BrandID, t.dt order by sd.BrandID, t.dt
	
	PRINT  'SUBSCRIBERVISITACTIVITY-NET BRAND: ' + ' / ' + convert(varchar(100), @@ROWCOUNT) + ' / ' + CONVERT(varchar(200), getdate(), 109)
			
	--insert into dbo.[Summary_Data] (entityName,[Type],PubID,Date,DateMonth,DateYear, CountsType, Counts)
	--select  
	--	'SubscriberVisitActivity', 'UniqueSubscriber', null, t.dt, MONTH(CONVERT(date, dt)), YEAR(CONVERT(date, dt)),'Cumulative' , count(distinct SubscriptionID)
	--from 
	--	SubscriberVisitActivity sva with (NOLOCK) join
	--	@monthLastDate t on sva.DateNumber <= t.dtNumber
	--group by t.dt order by t.dt	
	
	;with CTE (subscriptionID, DateNumber)
	as
	(
		   select sva.SubscriptionID, min(DateNumber)
			from 
				SubscriberVisitActivity sva with (NOLOCK)
			where 
				SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)
		   group by sva.SubscriptionID
	)
	insert into dbo.[Summary_Data] (entityName,[Type],PubID,Date,DateMonth,DateYear, CountsType, Counts)
	select  
			'SubscriberVisitActivity', 'UniqueSubscriber', null, t.dt, MONTH(CONVERT(date, dt)), YEAR(CONVERT(date, dt)),'Cumulative' , count(SubscriptionID)
	from 
		   CTE with (NOLOCK) join
		   @monthLastDate t on CTE.DateNumber <= t.dtNumber 
	group by t.dt order by t.dt	
	;
 
	PRINT  'SUBSCRIBERVISITACTIVITY-UNIQUESUBSCRIBER : ' + ' / ' + convert(varchar(100), @@ROWCOUNT) + ' / ' + CONVERT(varchar(200), getdate(), 109)

	--insert into dbo.[Summary_Data] (entityName,[Type], BrandID,Date,DateMonth,DateYear, CountsType, Counts)
	--select  
	--	'SubscriberVisitActivity', 'UniqueSubscriber', bd.BrandID, t.dt, MONTH(CONVERT(date, dt)), YEAR(CONVERT(date, dt)),'Cumulative' , count(distinct sva.SubscriptionID)
	--from 
	--	SubscriberVisitActivity sva with (NOLOCK) join
	--	PubSubscriptions ps with (NOLOCK) on sva.SubscriptionID = ps.subscriptionID join
	--	BrandDetails bd on ps.pubID = bd.pubID  join
	--	@monthLastDate t on sva.DateNumber <= t.dtNumber
	--group by bd.BrandID,t.dt order by t.dt	
	
	
	;with CTE (BrandID, subscriptionID, DateNumber)
	as
	(
		select brandID, ps.SubscriptionID, min(DateNumber)
		from 
			SubscriberVisitActivity sva with (NOLOCK) join
			PubSubscriptions ps with (NOLOCK) on sva.SubscriptionID = ps.subscriptionID join
			BrandDetails bd on ps.pubID = bd.pubID
		where 
			ps.PubID Not in (select t.PUBID from @TBLEXCLUDEPUBid t) and
			ps.SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)
		group by bd.BrandID, ps.SubscriptionID
	)
	insert into dbo.[Summary_Data] (entityName,[Type],PubID,Date,DateMonth,DateYear, CountsType, Counts)
	select  
			'SubscriberVisitActivity', 'UniqueSubscriber', BrandID, t.dt, MONTH(CONVERT(date, dt)), YEAR(CONVERT(date, dt)),'Cumulative' , count(SubscriptionID)
	from 
		   CTE with (NOLOCK) join
		   @monthLastDate t on CTE.DateNumber <= t.dtNumber 
	group by brandID, t.dt order by brandID, t.dt	
	;	
	
	
	PRINT  'SUBSCRIBERVISITACTIVITY-UNIQUESUBSCRIBER BRAND: ' + ' / ' + convert(varchar(100), @@ROWCOUNT) + ' / ' + CONVERT(varchar(200), getdate(), 109)

	/*******************************************************************************/	
	/*******************************   PubSubscriptions *******************************/
	/*******************************************************************************/	

	delete from @monthLastDate

	select @startdate = MIN(DateCreated) from PubSubscriptions  with (NOLOCK)
	set @startdate  = DateAdd(Month, 1, DATEADD(DAY, -1 * (DAY(@startdate) - 1), @startdate))
		
	while (@StartDate <= @enddate)
	begin
		insert into @monthLastDate values (dateadd(DAY, -1, @startdate), master.dbo.fn_GetDateDaysFromDate(dateadd(DAY, -1, @startdate)))
		set @StartDate = DATEADD(month, 1, @StartDate)
	end

	insert into dbo.[Summary_Data] (entityName,[Type],PubID,Date,DateMonth,DateYear, CountsType, Counts)
	select  
		'PubSubscriptions', 'Net', null, t.dt, MONTH(CONVERT(date, dt)), YEAR(CONVERT(date, dt)), 'Cumulative' , sum(counts)
	from 
		[Summary_Data] sd with (NOLOCK) join
		@monthLastDate t on sd.[Date] <= t.dt
	where
		sd.entityname = 'PubSubscriptions' and
		[type] = 'new'
	group by t.dt order by t.dt	

	PRINT  'PUBSUBSCRIPTIONS-NET : ' + ' / ' + convert(varchar(100), @@ROWCOUNT) + ' / ' + CONVERT(varchar(200), getdate(), 109)

	insert into dbo.[Summary_Data] (entityName,[Type],BrandID,Date,DateMonth,DateYear, CountsType, Counts)
	select  
		'PubSubscriptions', 'Net', bd.brandID, t.dt, MONTH(CONVERT(date, dt)), YEAR(CONVERT(date, dt)),'Cumulative' , sum(counts)
	from 
		[Summary_Data] sd with (NOLOCK) join
		BrandDetails bd with (NOLOCK) on sd.PubID = bd.PubID join
		@monthLastDate t on sd.[Date] <= t.dt
	where
		sd.entityname = 'PubSubscriptions' and
		[type] = 'new'
	group by bd.brandID, t.dt order by t.dt	

	--PRINT  'PUBSUBSCRIPTIONS-NET BRAND: ' + ' / ' + convert(varchar(100), @@ROWCOUNT) + ' / ' + CONVERT(varchar(200), getdate(), 109)

	insert into dbo.[Summary_Data] (entityName,[Type],BrandID,Date,DateMonth,DateYear, CountsType, Counts)
	select  
		'Brand', 'Net', bd.brandID, @enddate, MONTH(CONVERT(date, @enddate)), YEAR(CONVERT(date, @enddate)),'' , count(distinct subscriptionID)
	from 
		PubSubscriptions ps with (NOLOCK) join
		BrandDetails bd with (NOLOCK) on ps.PubID = bd.PubID 
	where 
			ps.PubID Not in (select t.PUBID from @TBLEXCLUDEPUBid t) and
			ps.SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)
	group by bd.brandID  order by bd.brandID	

	PRINT  'PUBSUBSCRIPTIONS-NET BRAND: ' + ' / ' + convert(varchar(100), @@ROWCOUNT) + ' / ' + CONVERT(varchar(200), getdate(), 109)


	insert into dbo.[Summary_Data] (entityName,[Type],BrandID, PubtypeID, Date,DateMonth,DateYear, CountsType, Counts)
	select  
		'ProductType', 'Net', bd.brandID, p.PubTypeID, @enddate, MONTH(CONVERT(date, @enddate)), YEAR(CONVERT(date, @enddate)),'' , count(distinct subscriptionID)
	from 
		PubSubscriptions ps with (NOLOCK) join
		pubs p on ps.pubID = p.PubID join
		BrandDetails bd with (NOLOCK) on ps.PubID = bd.PubID 
	where 
		ps.PubID Not in (select t.PUBID from @TBLEXCLUDEPUBid t) and
		ps.SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)
	group by bd.brandID, p.PubTypeID  order by p.PubTypeID

	PRINT  'ProductType-NET BRAND: ' + ' / ' + convert(varchar(100), @@ROWCOUNT) + ' / ' + CONVERT(varchar(200), getdate(), 109)

	insert into dbo.[Summary_Data] (entityName,[Type],PubtypeID,Date,DateMonth,DateYear, CountsType, Counts)
	select  
		'ProductType', 'Net', p.PubTypeID, @enddate, MONTH(CONVERT(date, @enddate)), YEAR(CONVERT(date, @enddate)),'' , count(distinct subscriptionID)
	from 
		PubSubscriptions ps with (NOLOCK) join
		pubs p on ps.pubID = p.PubID
	where 
			ps.PubID Not in (select t.PUBID from @TBLEXCLUDEPUBid t) and
			ps.SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)
	group by p.PubTypeID  order by p.PubTypeID



	insert into dbo.[Summary_Data] (entityName,[Type],PubtypeID,Date,DateMonth,DateYear, CountsType, Counts)
	select  
		'ProductType', 'Net', p.PubTypeID, @enddate, MONTH(CONVERT(date, @enddate)), YEAR(CONVERT(date, @enddate)),'' , count(distinct subscriptionID)
	from 
		PubSubscriptions ps with (NOLOCK) join
		pubs p on ps.pubID = p.PubID
	where 
			ps.PubID Not in (select t.PUBID from @TBLEXCLUDEPUBid t) and
			ps.SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)
	group by p.PubTypeID  order by p.PubTypeID

	PRINT  'ProductType-NET: ' + ' / ' + convert(varchar(100), @@ROWCOUNT) + ' / ' + CONVERT(varchar(200), getdate(), 109)

	/*******************************************************************************/	
	/*******************************   Subscriptions *******************************/
	/*******************************************************************************/	

	delete from @monthLastDate

	select @startdate = MIN(DateCreated) from Subscriptions  with (NOLOCK)
	set @startdate  = DateAdd(Month, 1, DATEADD(DAY, -1 * (DAY(@startdate) - 1), @startdate))
		
	while (@StartDate <= @enddate)
	begin
		insert into @monthLastDate values (dateadd(DAY, -1, @startdate), master.dbo.fn_GetDateDaysFromDate(dateadd(DAY, -1, @startdate)))
		set @StartDate = DATEADD(month, 1, @StartDate)
	end

	insert into dbo.[Summary_Data] (entityName,[Type],PubID,Date,DateMonth,DateYear, CountsType, Counts)
	select  
		'Subscriptions', 'UniqueSubscriber', null, t.dt, MONTH(CONVERT(date, dt)), YEAR(CONVERT(date, dt)),'Cumulative' , COUNT(SubscriptionID)
	from 
		Subscriptions s with (NOLOCK) join
		@monthLastDate t on s.DateCreated <= t.dt 
	where
		s.SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)
	group by t.dt order by t.dt	
	
	PRINT  'SUBSCRIPTIONS-UNIQUESUBSCRIBER : ' + ' / ' + convert(varchar(100), @@ROWCOUNT) + ' / ' + CONVERT(varchar(200), getdate(), 109)

	--brand
	--insert into dbo.[Summary_Data] (entityName,[Type],BrandID,Date,DateMonth,DateYear, CountsType, Counts)
	--select  
	--	'Subscriptions', 'UniqueSubscriber', bd.brandID, t.dt, MONTH(CONVERT(date, dt)), YEAR(CONVERT(date, dt)),'Cumulative' , COUNT(distinct SubscriptionID)
	--from 
	--	PubSubscriptions ps with (NOLOCK) join
	--	BrandDetails bd on bd.pubID = ps.pubID join
	--	@monthLastDate t on ps.DateCreated <= t.dt 
	--where
	--	ps.SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)
	--group by t.dt, bd.brandID order by t.dt	

	;with CTE (BrandID, subscriptionID, DateCreated)
	as
	(
		select brandID, ps.SubscriptionID, min(ps.DateCreated)
		from 
			PubSubscriptions ps with (NOLOCK) join
			BrandDetails bd on ps.pubID = bd.pubID
		where 
			ps.PubID Not in (select t.PUBID from @TBLEXCLUDEPUBid t) and
			ps.SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)
		group by bd.BrandID, ps.SubscriptionID
	)
	insert into dbo.[Summary_Data] (entityName,[Type],brandID,Date,DateMonth,DateYear, CountsType, Counts)
	select  
			'Subscriptions', 'UniqueSubscriber', brandID, t.dt, MONTH(CONVERT(date, dt)), YEAR(CONVERT(date, dt)),'Cumulative' , COUNT(SubscriptionID)
	from 
		   CTE with (NOLOCK) join
		   @monthLastDate t on CTE.DateCreated <= t.dt 
	group by brandID, t.dt order by brandID, t.dt;	
	
	PRINT  'SUBSCRIPTIONS-UNIQUESUBSCRIBER BRAND: ' + ' / ' + convert(varchar(100), @@ROWCOUNT) + ' / ' + CONVERT(varchar(200), getdate(), 109)


	/*******************************************************************************/	
	/*******************************  Breakdown total - Consensus and Brand *******************************/
	/*******************************************************************************/	
	
	insert into dbo.[Summary_Data] (entityName,[Type], Date, DateMonth,DateYear,Counts)
	select 'Breakdown','Emailaddress', @currentdt, @currentdtMonth, @currentdtYear, COUNT(subscriptionID) as Counts from Subscriptions with (NOLOCK) 
	where	EmailExists = 1  and
			SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)
	union all 
	select 'Breakdown','CompleteAddress', @currentdt, @currentdtMonth, @currentdtYear, COUNT(subscriptionID) from Subscriptions with (NOLOCK)
	where LEN(address) > 0 and LEN(city) > 0 and LEN(state) > 0 and isnull(countryID,0) <> (0) and
			 SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)
	union all 
	select 'Breakdown','US', @currentdt, @currentdtMonth, @currentdtYear, COUNT(subscriptionID) from Subscriptions with (NOLOCK) where countryID = 1 and
			 SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)
	union all 
	select 'Breakdown','Canada', @currentdt, @currentdtMonth, @currentdtYear, COUNT(subscriptionID) from Subscriptions with (NOLOCK) where countryID = 2  and
			SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)
	union all 
	select 'Breakdown','Intl', @currentdt, @currentdtMonth, @currentdtYear, COUNT(subscriptionID) from Subscriptions with (NOLOCK) where isnull(countryID,0) not in (0,1,2)	 and
			SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)

	PRINT  'BREAKDOWN: ' + ' / ' + convert(varchar(100), @@ROWCOUNT) + ' / ' + CONVERT(varchar(200), getdate(), 109)

	insert into dbo.[Summary_Data] (entityName,[Type], BrandID, Date, DateMonth,DateYear,Counts)
	select 'Breakdown','Emailaddress', brandID, @currentdt, @currentdtMonth, @currentdtYear,COUNT(distinct s.subscriptionID) as Counts 
	from 
			Subscriptions s with (NOLOCK) join
			PubSubscriptions ps with (NOLOCK) on s.subscriptionID = ps.SubscriptionID join
			BrandDetails bd with (NOLOCK) on bd.pubID = ps.pubID
	where len(s.email) > 1 and
			ps.PubID Not in (select t.PUBID from @TBLEXCLUDEPUBid t) and
			ps.SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)
	group by brandID
	union all 
	select 'Breakdown','CompleteAddress', brandID, @currentdt, @currentdtMonth, @currentdtYear, COUNT(distinct s.subscriptionID) 
	from 
			Subscriptions s with (NOLOCK) join
			PubSubscriptions ps with (NOLOCK) on s.subscriptionID = ps.SubscriptionID join
			BrandDetails bd with (NOLOCK) on bd.pubID = ps.pubID
	where 
		LEN(s.address) > 0 and LEN(s.city) > 0 and LEN(s.state) > 0 and isnull(s.countryID,0) <> (0) and 
			ps.PubID Not in (select t.PUBID from @TBLEXCLUDEPUBid t) and
			ps.SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)
	group by brandID
	union all 
	select 'Breakdown','US', brandID, @currentdt, @currentdtMonth, @currentdtYear,COUNT(distinct s.subscriptionID) 
	from 
			Subscriptions s with (NOLOCK) join
			PubSubscriptions ps with (NOLOCK) on s.subscriptionID = ps.SubscriptionID join
			BrandDetails bd with (NOLOCK) on bd.pubID = ps.pubID
	where 
		s.countryID = 1 and 
			ps.PubID Not in (select t.PUBID from @TBLEXCLUDEPUBid t) and
			ps.SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)
	group by brandID
	union all 
	select 'Breakdown','Canada', brandID, @currentdt, @currentdtMonth, @currentdtYear,COUNT(distinct s.subscriptionID) 
	from  
			Subscriptions s with (NOLOCK) join
			PubSubscriptions ps with (NOLOCK) on s.subscriptionID = ps.SubscriptionID join
			BrandDetails bd with (NOLOCK) on bd.pubID = ps.pubID
	where 
		s.countryID = 2	and 
			ps.PubID Not in (select t.PUBID from @TBLEXCLUDEPUBid t) and
			ps.SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)
	group by brandID
	union all 
	select 'Breakdown','Intl', brandID, @currentdt, @currentdtMonth, @currentdtYear,COUNT(distinct s.subscriptionID) 
			from  
			Subscriptions s with (NOLOCK) join
			PubSubscriptions ps with (NOLOCK) on s.subscriptionID = ps.SubscriptionID join
			BrandDetails bd with (NOLOCK) on bd.pubID = ps.pubID
	where 
		isnull(s.countryID,0) not in (0,1,2) and 
			ps.PubID Not in (select t.PUBID from @TBLEXCLUDEPUBid t) and
			ps.SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)
	group by brandID

	PRINT  'BREAKDOWN BRAND: ' + ' / ' + convert(varchar(100), @@ROWCOUNT) + ' / ' + CONVERT(varchar(200), getdate(), 109)

/*******************************************************************************/	
	/*******************************  Breakdown total - Consensus and Brand *******************************/
	/*******************************************************************************/	
	
	insert into dbo.[Summary_Data] (entityName,[Type], Date, DateMonth,DateYear,Counts)
	select 'Gross','Emailaddress', @currentdt, @currentdtMonth, @currentdtYear, COUNT(subscriptionID) as Counts from PubSubscriptions with (NOLOCK) where  len(email) > 1 and 
			PubID Not in (select t.PUBID from @TBLEXCLUDEPUBid t) and
			SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)
	union all 
	select 'Gross','CompleteAddress', @currentdt, @currentdtMonth, @currentdtYear, COUNT(subscriptionID) from PubSubscriptions with (NOLOCK)
	where LEN(address1) > 0 and LEN(city) > 0 and LEN(regioncode) > 0 and isnull(countryID,0) <> (0) and 
			 PubID Not in (select t.PUBID from @TBLEXCLUDEPUBid t) and
			 SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)
	union all 
	select 'Gross','US', @currentdt, @currentdtMonth, @currentdtYear, COUNT(subscriptionID) from PubSubscriptions with (NOLOCK) where countryID = 1	and 
			 PubID Not in (select t.PUBID from @TBLEXCLUDEPUBid t) and
			 SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)
	union all 
	select 'Gross','Canada', @currentdt, @currentdtMonth, @currentdtYear, COUNT(subscriptionID) from PubSubscriptions with (NOLOCK) where countryID = 2 and
			 PubID Not in (select t.PUBID from @TBLEXCLUDEPUBid t) and
			 SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)
	union all 
	select 'Gross','Intl', @currentdt, @currentdtMonth, @currentdtYear, COUNT(subscriptionID) from PubSubscriptions with (NOLOCK) where isnull(countryID,0) not in (0,1,2) and 
			 PubID Not in (select t.PUBID from @TBLEXCLUDEPUBid t) and
			 SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)

	PRINT  'Gross BREAKDOWN: ' + ' / ' + convert(varchar(100), @@ROWCOUNT) + ' / ' + CONVERT(varchar(200), getdate(), 109)

	insert into dbo.[Summary_Data] (entityName,[Type], BrandID, Date, DateMonth,DateYear,Counts)
	select 'Gross','Emailaddress', brandID, @currentdt, @currentdtMonth, @currentdtYear,COUNT(pubsubscriptionID) as Counts 
	from 
			PubSubscriptions ps with (NOLOCK) join
			BrandDetails bd with (NOLOCK) on bd.pubID = ps.pubID
	where len(email) > 1 and 
			ps.PubID Not in (select t.PUBID from @TBLEXCLUDEPUBid t) and
			ps.SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)
	group by brandID
	union all 
	select 'Gross','CompleteAddress', brandID, @currentdt, @currentdtMonth, @currentdtYear, COUNT(pubsubscriptionID) 
	from 
			PubSubscriptions ps with (NOLOCK) join
			BrandDetails bd with (NOLOCK) on bd.pubID = ps.pubID
	where 
		LEN(address1) > 0 and LEN(city) > 0 and LEN(regioncode) > 0 and isnull(countryID,0) <> (0) and
			ps.PubID Not in (select t.PUBID from @TBLEXCLUDEPUBid t) and
			ps.SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)
	group by brandID
	union all 
	select 'Gross','US', brandID, @currentdt, @currentdtMonth, @currentdtYear,COUNT(pubsubscriptionID) 
	from 
			PubSubscriptions ps with (NOLOCK) join
			BrandDetails bd with (NOLOCK) on bd.pubID = ps.pubID
	where 
		countryID = 1 and
			ps.PubID Not in (select t.PUBID from @TBLEXCLUDEPUBid t) and
			ps.SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)
	group by brandID
	union all 
	select 'Gross','Canada', brandID, @currentdt, @currentdtMonth, @currentdtYear,COUNT(pubsubscriptionID) 
	from  
			PubSubscriptions ps with (NOLOCK) join
			BrandDetails bd with (NOLOCK) on bd.pubID = ps.pubID
	where 
		countryID = 2 and 
			ps.PubID Not in (select t.PUBID from @TBLEXCLUDEPUBid t) and
			ps.SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)
	group by brandID
	union all 
	select 'Gross','Intl', brandID, @currentdt, @currentdtMonth, @currentdtYear,COUNT(pubsubscriptionID) 
			from  
			PubSubscriptions ps with (NOLOCK) join
			BrandDetails bd with (NOLOCK) on bd.pubID = ps.pubID
	where 
		isnull(countryID,0) not in (0,1,2) and 
			ps.PubID Not in (select t.PUBID from @TBLEXCLUDEPUBid t) and
			ps.SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)
	group by brandID

	PRINT  'Gross BREAKDOWN BRAND: ' + ' / ' + convert(varchar(100), @@ROWCOUNT) + ' / ' + CONVERT(varchar(200), getdate(), 109)

	/*******************************************************************************/	
	/*******************************   Summary_BrandDimension_Data *******************************/
	/*******************************************************************************/	


	insert into Summary_BrandDimension_Data (BrandID,MasterGroupID,MasterID,MasterValue,MasterDesc,Counts)
	SELECT bd.BrandID, m.Mastergroupid, m.MasterID, m.MasterValue, m.MasterDesc, count(distinct ps.SubscriptionID)
	FROM    
			dbo.PubSubscriptions AS ps WITH (NOLOCK) INNER JOIN
			dbo.PubSubscriptionDetail AS psd ON psd.PubSubscriptionID = ps.PubSubscriptionID INNER JOIN
			dbo.CodeSheet AS cs WITH (NOLOCK) ON cs.CodeSheetID = psd.CodesheetID INNER JOIN
			dbo.CodeSheet_Mastercodesheet_Bridge AS cb WITH (NOLOCK) ON cb.CodeSheetID = cs.CodeSheetID INNER JOIN
			dbo.Mastercodesheet AS m WITH (NOLOCK) ON m.MasterID = cb.MasterID INNER JOIN
			dbo.ResponseGroups AS rg WITH (NOLOCK) ON rg.ResponseGroupID = cs.ResponseGroupID INNER JOIN
			dbo.BrandDetails AS bd WITH (NOLOCK) ON rg.PubID = bd.PubID JOIN
			dbo.Brand b ON b.brandID = bd.brandID
	WHERE     b.Isdeleted = 0  and
			 bd.PubID Not in (select pubID from @TBLEXCLUDEPUBid) and
			 ps.SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)
	group by bd.BrandID, m.Mastergroupid, m.MasterID, m.MasterValue, m.MasterDesc	
	
	PRINT  '[SUMMARY_BRANDDIMENSION_DATA : ' + ' / ' + convert(varchar(100), @@ROWCOUNT) + ' / ' + CONVERT(varchar(200), getdate(), 109)	

	/*******************************************************************************/	
	/*******************************   Summary_PubTypeBrandDimension_Data *******************************/
	/*******************************************************************************/	

	insert into Summary_PubTypeBrandDimension_Data (PubTypeID,BrandID,MasterGroupID,MasterID,MasterValue,MasterDesc,Counts)
	SELECT pt.pubtypeID, bd.BrandID, m.Mastergroupid, m.MasterID, m.MasterValue, m.MasterDesc, count(distinct ps.SubscriptionID)
	FROM    
			dbo.PubSubscriptions AS ps WITH (NOLOCK) INNER JOIN
			dbo.BrandDetails AS bd WITH (NOLOCK) ON ps.PubID = bd.PubID JOIN
			dbo.Brand b ON b.brandID = bd.brandID join
			dbo.pubs p with (NOLOCK) on p.pubID = bd.pubID  join
			dbo.PubTypes pt with (NOLOCK) on pt.PubTypeID = p.PubTypeID  join
			dbo.PubSubscriptionDetail AS psd ON psd.SubscriptionID = ps.SubscriptionID INNER JOIN
			dbo.CodeSheet AS cs WITH (NOLOCK) ON cs.CodeSheetID = psd.CodesheetID INNER JOIN
			dbo.CodeSheet_Mastercodesheet_Bridge AS cb WITH (NOLOCK) ON cb.CodeSheetID = cs.CodeSheetID INNER JOIN
			dbo.Mastercodesheet AS m WITH (NOLOCK) ON m.MasterID = cb.MasterID INNER JOIN
			dbo.ResponseGroups AS rg WITH (NOLOCK) ON rg.ResponseGroupID = cs.ResponseGroupID INNER JOIN
			dbo.pubs p1 with (NOLOCK) on p1.pubID =rg.pubID inner join
			dbo.branddetails bd1 with (NOLOCK) on bd1.pubID = p1.PubID and bd1.brandID = b.brandID
	where 
		ps.PubID Not in (select t.PUBID from @TBLEXCLUDEPUBid t) and
		ps.SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)
	group by pt.pubtypeID, bd.BrandID, m.Mastergroupid, m.MasterID, m.MasterValue, m.MasterDesc	

	--SELECT pt.pubtypeID, bd.BrandID, m.Mastergroupid, m.MasterID, m.MasterValue, m.MasterDesc, count(distinct ps.SubscriptionID)
	--FROM    

	--		dbo.PubSubscriptions AS ps WITH (NOLOCK) INNER JOIN
	--		dbo.PubSubscriptionDetail AS psd ON psd.SubscriptionID = ps.SubscriptionID INNER JOIN
	--		dbo.BrandDetails AS bd WITH (NOLOCK) ON ps.PubID = bd.PubID JOIN
	--		dbo.pubs p with (NOLOCK) on p.pubID = bd.pubID  join
	--		dbo.PubTypes pt with (NOLOCK) on pt.PubTypeID = p.PubTypeID  INNER JOIN
	--		vw_BrandConsensus bc on bc.SubscriptionID = psd.SubscriptionID and bd.brandID = bc.brandID INNER JOIN
	--		dbo.Mastercodesheet AS m WITH (NOLOCK) ON m.MasterID = bc.MasterID
	--WHERE  
	--		bd.PubID Not in (select pubID from @TBLEXCLUDEPUBid) and
	--        ps.SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)
	--group by pt.pubtypeID, bd.BrandID, m.Mastergroupid, m.MasterID, m.MasterValue, m.MasterDesc	
	--order by brandID, mastergroupID, mastervalue
	
	/* brand & pubtype consensus - changed to brand consensus above */
	--SELECT pt.pubtypeID, bd.BrandID, m.Mastergroupid, m.MasterID, m.MasterValue, m.MasterDesc, count(distinct ps.SubscriptionID)
	--FROM    

	--		dbo.PubSubscriptions AS ps WITH (NOLOCK) INNER JOIN
	--		dbo.PubSubscriptionDetail AS psd ON psd.PubSubscriptionID = ps.PubSubscriptionID INNER JOIN
	--		dbo.CodeSheet AS cs WITH (NOLOCK) ON cs.CodeSheetID = psd.CodesheetID INNER JOIN
	--		dbo.CodeSheet_Mastercodesheet_Bridge AS cb WITH (NOLOCK) ON cb.CodeSheetID = cs.CodeSheetID INNER JOIN
	--		dbo.Mastercodesheet AS m WITH (NOLOCK) ON m.MasterID = cb.MasterID INNER JOIN
	--		dbo.ResponseGroups AS rg WITH (NOLOCK) ON rg.ResponseGroupID = cs.ResponseGroupID INNER JOIN
	--		dbo.BrandDetails AS bd WITH (NOLOCK) ON ps.PubID = bd.PubID JOIN
	--		dbo.Brand b ON b.brandID = bd.brandID join
	--		dbo.pubs p with (NOLOCK) on p.pubID = bd.pubID  join
	--		dbo.PubTypes pt with (NOLOCK) on pt.PubTypeID = p.PubTypeID
			
	--WHERE     b.Isdeleted = 0    and
	--		 bd.PubID Not in (select pubID from @TBLEXCLUDEPUBid) and
	--		 ps.SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)
	--group by pt.pubtypeID, bd.BrandID, m.Mastergroupid, m.MasterID, m.MasterValue, m.MasterDesc	


	PRINT  'SUMMARY_PUBTYPEBRANDDIMENSION_DATA : ' + ' / ' + convert(varchar(100), @@ROWCOUNT) + ' / ' + CONVERT(varchar(200), getdate(), 109)


	/*******************************************************************************/	
	/*******************************   Summary_ProductTypeDimension_Data *******************************/
	/*******************************************************************************/	

	insert into Summary_ProductTypeDimension_Data (PubTypeID,MasterGroupID,MasterID,MasterValue,MasterDesc,Counts)
	SELECT pt.PubTypeID , m.Mastergroupid, m.MasterID, m.MasterValue, m.MasterDesc, count(distinct ps.SubscriptionID)
	FROM    
			dbo.PubSubscriptions AS ps WITH (NOLOCK) INNER JOIN
			dbo.PubSubscriptionDetail AS psd ON psd.PubSubscriptionID = ps.PubSubscriptionID INNER JOIN
			dbo.CodeSheet AS cs WITH (NOLOCK) ON cs.CodeSheetID = psd.CodesheetID INNER JOIN
			dbo.CodeSheet_Mastercodesheet_Bridge AS cb WITH (NOLOCK) ON cb.CodeSheetID = cs.CodeSheetID INNER JOIN
			dbo.Mastercodesheet AS m WITH (NOLOCK) ON m.MasterID = cb.MasterID INNER JOIN
			dbo.ResponseGroups AS rg WITH (NOLOCK) ON rg.ResponseGroupID = cs.ResponseGroupID INNER JOIN
			dbo.Pubs AS p WITH (NOLOCK) ON rg.PubID = p.PubID join
			dbo.PubTypes pt with (NOLOCK) on pt.PubTypeID = p.PubTypeID
	where
			p.PubID Not in (select pubID from @TBLEXCLUDEPUBid)  and
			ps.SubscriptionID Not in (select t.SubscriptionID from @TBLEXCLUDESUBSCRIPTIONID t)
	group by pt.PubTypeID , m.Mastergroupid, m.MasterID, m.MasterValue, m.MasterDesc
	order by 1,2 
	
	PRINT  'SUMMARY_PRODUCTTYPEDIMENSION_DATA : ' + ' / ' + convert(varchar(100), @@ROWCOUNT) + ' / ' + CONVERT(varchar(200), getdate(), 109)

	
End