<Application x:Class="AMS_Desktop.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:c="clr-namespace:Core_AMS.Utilities;assembly=Core_AMS.Utilities"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
             xmlns:telerikChromes="clr-namespace:Telerik.Windows.Controls.Chromes;assembly=Telerik.Windows.Controls"
             DispatcherUnhandledException="Application_DispatcherUnhandledException"
             StartupUri="/Windows/Login.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>

                <!-- Telerik.Windows.Controls is used by all assemblies -->
                <ResourceDictionary Source="/Themes/System.Windows.xaml"/>
                <ResourceDictionary Source="/Themes/Telerik.Windows.Controls.xaml"/>
                <ResourceDictionary Source="/Themes/Telerik.Windows.Controls.Input.xaml"/>
                <ResourceDictionary Source="/Themes/Telerik.Windows.Controls.Navigation.xaml"/>
                <ResourceDictionary Source="/Themes/Telerik.ReportViewer.Wpf.xaml"/>

                <!-- Requires: Telerik.Windows.Controls.Input -->
                <ResourceDictionary Source="Themes/Telerik.Windows.Controls.GridView.xaml" />
                <ResourceDictionary Source="Themes/Telerik.Windows.Controls.ImageEditor.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!-- Universal -->
            <!--<LinearGradientBrush x:Key="KMOrangeGradient" EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FFB2611F" Offset="0.987"/>
                <GradientStop Color="#FFF47E1F" Offset="0.74"/>
                <GradientStop Color="#FFF47E1F" Offset="0.553"/>
                <GradientStop Color="#FFF47E1F" Offset="0.306"/>
                <GradientStop Color="#FFF7A35F" Offset="0.017"/>
            </LinearGradientBrush>-->
            <SolidColorBrush x:Key="KMOrangeGradient" Color="#FFF47E1F" />
            <!--<LinearGradientBrush x:Key="KMBlueGradient" EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FF0D3B60" Offset="1"/>                
                <GradientStop Color="#FF045DA4" Offset="0.715"/>
                <GradientStop Color="#FF045DA4" Offset="0.477"/>
                <GradientStop Color="#FF045DA4" Offset="0.221"/>
                <GradientStop Color="#FF60AEEB" Offset="0.004"/>
            </LinearGradientBrush>-->
            <SolidColorBrush x:Key="KMBlueGradient" Color="#FF045DA4" />
            <!--<LinearGradientBrush x:Key="KMLightBlueGradient" EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FF1D5D95" Offset="0.983"/>
                <GradientStop Color="#FF4B87BC" Offset="0.528"/>
                <GradientStop Color="#FF4B87BC" Offset="0.579"/>
                <GradientStop Color="#FF4B87BC" Offset="0.204"/>
                <GradientStop Color="#FF80B8E9" Offset="0.004"/>
            </LinearGradientBrush>-->
            <SolidColorBrush x:Key="KMLightBlueGradient" Color="#FF4B87BC" />
            <!--<LinearGradientBrush x:Key="KMWhiteGradient" EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="WhiteSmoke" Offset="0.004"/>
                <GradientStop Color="#FFA5A5A5" Offset="1"/>
                <GradientStop Color="#FFD4D4D4" Offset="0.302"/>
                <GradientStop Color="#FFD4D4D4" Offset="0.617"/>
                <GradientStop Color="#FFD4D4D4" Offset="0.847"/>
            </LinearGradientBrush>-->
            <SolidColorBrush x:Key="KMWhiteGradient" Color="#FFC7CACC" />
            <!--<LinearGradientBrush x:Key="KMGrayGradient" EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FF747474" Offset="0.502"/>
                <GradientStop Color="#FF747474" Offset="0.264"/>
                <GradientStop Color="#FF747474" Offset="0.715"/>
                <GradientStop Color="#FF505050" Offset="1"/>
                <GradientStop Color="#FFABABAB"/>
            </LinearGradientBrush>-->
            <SolidColorBrush x:Key="KMGrayGradient" Color="#FF747474" />
            <Color x:Key="background1">#FFFFFFFF</Color>


            <Style x:Key="KMHeader" TargetType="{x:Type telerik:GridViewHeaderRow}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type telerik:GridViewHeaderRow}">
                            <telerik:SelectiveScrollingGrid>
                                <telerik:SelectiveScrollingGrid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </telerik:SelectiveScrollingGrid.ColumnDefinitions>
                                <telerik:SelectiveScrollingGrid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </telerik:SelectiveScrollingGrid.RowDefinitions>
                                <telerik:CommonHeaderPresenter x:Name="PART_CommonHeaderPresenter" Grid.Column="3" IsTabStop="False" Background="#F58020">
                                    <telerik:StyleManager.Theme>
                                        <telerik:TransparentTheme/>
                                    </telerik:StyleManager.Theme>
                                </telerik:CommonHeaderPresenter>
                                <Border Background="{StaticResource KMOrangeGradient}" Grid.ColumnSpan="2" telerik:SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"/>
                                <Border x:Name="CommonHeaderIndent" BorderBrush="#F58020" BorderThickness="0,0,1,1" Background="{StaticResource KMOrangeGradient}" Grid.ColumnSpan="2" Margin="-1,0,0,0" telerik:SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding Visibility, ElementName=PART_CommonHeaderPresenter}"/>
                                <Grid x:Name="PART_OuterGrid" Grid.ColumnSpan="4" Grid.Row="1" Background="{StaticResource KMOrangeGradient}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Border x:Name="PART_GridViewHeaderRowBorder" BorderBrush="#F58020" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <Border BorderBrush="#F58020" BorderThickness="1" Background="{TemplateBinding Background}"/>
                                    </Border>
                                    <Border x:Name="PART_FieldFilterPlaceholder" BorderBrush="#F58020" BorderThickness="0,0,1,1" Background="{StaticResource KMOrangeGradient}" Grid.Row="1" Visibility="{TemplateBinding FieldFilterPlaceholderVisibility}"/>
                                </Grid>
                                <telerik:DataCellsPresenter x:Name="PART_DataCellsPresenter" Grid.Column="3" IsTabStop="False" Grid.Row="1" Background="{StaticResource KMOrangeGradient}">
                                    <telerik:StyleManager.Theme>
                                        <telerik:TransparentTheme/>
                                    </telerik:StyleManager.Theme>
                                </telerik:DataCellsPresenter>
                                <Border x:Name="PART_IndicatorPresenter" BorderThickness="0,0,1,1" Grid.Row="1" telerik:SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{TemplateBinding RowIndicatorVisibility}" Width="25" Background="{StaticResource KMOrangeGradient}">
                                    <Border BorderBrush="#F58020" BorderThickness="1" Background="{StaticResource KMOrangeGradient}">
                                    </Border>
                                </Border>
                                <telerik:IndentPresenter x:Name="PART_IndentPresenter" Grid.Column="1" IsTabStop="False" IndentLevel="{TemplateBinding IndentLevel}" MinHeight="{TemplateBinding MinHeight}" Grid.Row="1" telerik:SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Background="{StaticResource KMOrangeGradient}">
                                    <telerik:IndentPresenter.ItemTemplate>
                                        <DataTemplate>
                                            <telerik:GridViewHeaderIndentCell IsTabStop="False">
                                                <telerik:StyleManager.Theme>
                                                    <telerik:TransparentTheme/>
                                                </telerik:StyleManager.Theme>
                                            </telerik:GridViewHeaderIndentCell>
                                        </DataTemplate>
                                    </telerik:IndentPresenter.ItemTemplate>
                                    <telerik:StyleManager.Theme>
                                        <telerik:TransparentTheme/>
                                    </telerik:StyleManager.Theme>
                                </telerik:IndentPresenter>
                                <Border x:Name="PART_CommonHeaderHierarchyIndentPresenterAllLevels" BorderThickness="0,0,1,1" Background="{StaticResource KMOrangeGradient}" Grid.Column="2" Grid.Row="0" Grid.RowSpan="10" telerik:SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Width="25">
                                    <Border.Visibility>
                                        <Binding Path="HasHierarchy" RelativeSource="{RelativeSource TemplatedParent}">
                                            <Binding.Converter>
                                                <telerik:BooleanToVisibilityConverter/>
                                            </Binding.Converter>
                                        </Binding>
                                    </Border.Visibility>
                                </Border>
                                <Border x:Name="PART_CommonHeaderHierarchyIndentPresenterFirstLevel" BorderThickness="0,0,1,1" Background="{StaticResource KMOrangeGradient}" Grid.Column="2" Margin="0,-1,0,0" Grid.Row="0" Grid.RowSpan="1" telerik:SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Width="25">
                                    <Border.Visibility>
                                        <Binding Path="HasHierarchy" RelativeSource="{RelativeSource TemplatedParent}">
                                            <Binding.Converter>
                                                <telerik:BooleanToVisibilityConverter/>
                                            </Binding.Converter>
                                        </Binding>
                                    </Border.Visibility>
                                </Border>
                                <Border x:Name="PART_HierarchyIndentPresenter" BorderThickness="0,0,1,1" Grid.Column="2" Grid.Row="1" telerik:SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Width="25" Background="{StaticResource KMOrangeGradient}">
                                    <Border.Visibility>
                                        <Binding Path="HasHierarchy" RelativeSource="{RelativeSource TemplatedParent}">
                                            <Binding.Converter>
                                                <telerik:BooleanToVisibilityConverter/>
                                            </Binding.Converter>
                                        </Binding>
                                    </Border.Visibility>
                                    <Border BorderBrush="#F58020" BorderThickness="1" Background="{StaticResource KMOrangeGradient}">
                                    </Border>
                                </Border>
                            </telerik:SelectiveScrollingGrid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background" Value="{StaticResource KMOrangeGradient}">
                </Setter>
                <Setter Property="MinHeight" Value="27"/>
                <Setter Property="BorderBrush" Value="#F58020"/>
                <Setter Property="BorderThickness" Value="1,0,0,1"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
            </Style>
            <Style x:Key="KMGridView" TargetType="{x:Type telerik:RadGridView}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type telerik:RadGridView}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition x:Name="ScrollBarColumn" MinWidth="0" Width="0"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition x:Name="PART_AttachedBehaviorRow" Height="Auto"/>
                                    <RowDefinition/>
                                    <RowDefinition x:Name="ScrollBarRow" Height="0" MinHeight="0"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="GridViewActivity">
                                        <VisualState x:Name="Idle">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_GridViewLoadingIndicator">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Collapsed</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Busy">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_GridViewLoadingIndicator">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="ColumnHeadersVisibility">
                                        <VisualState x:Name="ColumnHeadersVisible">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_HeaderRow">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="ColumnHeadersCollapsed">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_HeaderRow">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Collapsed</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="ColumnFootersVisibility">
                                        <VisualState x:Name="ColumnFootersVisible">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_FooterRow">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="ColumnFootersCollapsed">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_FooterRow">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Collapsed</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="GroupPanelVisibility">
                                        <VisualState x:Name="GroupPanelVisible">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_GroupPanel">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="GroupPanelCollapsed">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_GroupPanel">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Collapsed</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="InsertRowVisibility">
                                        <VisualState x:Name="InsertRowVisible">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_AddNewRow">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="InsertRowCollapsed">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_AddNewRow">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Collapsed</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="DisabledStates">
                                        <VisualState x:Name="Enabled"/>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Background_Disabled">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <telerik:GridViewGroupPanel x:Name="PART_GroupPanel" BorderBrush="#FFEBEBEB" Background="{TemplateBinding GroupPanelBackground}" Grid.ColumnSpan="3" Foreground="{TemplateBinding GroupPanelForeground}" IsTabStop="False">
                                    <telerik:StyleManager.Theme>
                                        <telerik:TransparentTheme/>
                                    </telerik:StyleManager.Theme>
                                </telerik:GridViewGroupPanel>
                                <ItemsControl x:Name="PART_ControlPanelItemsControl" Grid.Column="2" HorizontalAlignment="Right" IsTabStop="False">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel IsItemsHost="True" Orientation="Horizontal"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <telerik:ControlPanelItemControl>
                                                <telerik:StyleManager.Theme>
                                                    <telerik:TransparentTheme/>
                                                </telerik:StyleManager.Theme>
                                            </telerik:ControlPanelItemControl>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                                <Border x:Name="PART_MasterGridContainer" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="3" Margin="0,-1,0,0" Padding="{TemplateBinding Padding}" Grid.Row="2" Grid.RowSpan="2"/>
                                <telerik:GridViewScrollViewer x:Name="PART_ItemsScrollViewer" Background="Transparent" CanContentScroll="True" Grid.ColumnSpan="3" Margin="1,0,1,1" Grid.Row="2" Grid.RowSpan="2">
                                    <telerik:GridViewScrollViewer.FooterRow>
                                        <telerik:GridViewFooterRow x:Name="PART_FooterRow" IsTabStop="False" IndentLevel="{TemplateBinding GroupCount}">
                                            <telerik:StyleManager.Theme>
                                                <telerik:TransparentTheme/>
                                            </telerik:StyleManager.Theme>
                                        </telerik:GridViewFooterRow>
                                    </telerik:GridViewScrollViewer.FooterRow>
                                    <telerik:GridViewScrollViewer.HeaderRow>
                                        <telerik:GridViewHeaderRow x:Name="PART_HeaderRow" IsTabStop="False" IndentLevel="{TemplateBinding GroupCount}">
                                            <telerik:StyleManager.Theme>
                                                <telerik:TransparentTheme/>
                                            </telerik:StyleManager.Theme>
                                        </telerik:GridViewHeaderRow>
                                    </telerik:GridViewScrollViewer.HeaderRow>
                                    <telerik:GridViewScrollViewer.NewRow>
                                        <telerik:GridViewNewRow x:Name="PART_AddNewRow" IsTabStop="False" IndentLevel="{TemplateBinding GroupCount}" Visibility="Collapsed">
                                            <telerik:StyleManager.Theme>
                                                <telerik:TransparentTheme/>
                                            </telerik:StyleManager.Theme>
                                        </telerik:GridViewNewRow>
                                    </telerik:GridViewScrollViewer.NewRow>
                                    <telerik:StyleManager.Theme>
                                        <telerik:TransparentTheme/>
                                    </telerik:StyleManager.Theme>
                                    <telerik:GridViewVirtualizingPanel x:Name="PART_GridViewVirtualizingPanel" CanHorizontallyScroll="True" CanVerticallyScroll="True"/>
                                </telerik:GridViewScrollViewer>
                                <telerik:ScrollPositionIndicator x:Name="PART_ScrollPositionIndicator" Grid.ColumnSpan="2" ContentTemplate="{TemplateBinding ScrollPositionIndicatorTemplate}" HorizontalAlignment="Right" IsHitTestVisible="False" IsTabStop="False" Margin="0,0,28,0" Grid.Row="2">
                                    <telerik:StyleManager.Theme>
                                        <telerik:TransparentTheme/>
                                    </telerik:StyleManager.Theme>
                                    <telerik:ScrollPositionIndicator.Visibility>
                                        <Binding Mode="TwoWay" Path="IsScrolling" RelativeSource="{RelativeSource TemplatedParent}">
                                            <Binding.Converter>
                                                <telerik:BooleanToVisibilityConverter/>
                                            </Binding.Converter>
                                        </Binding>
                                    </telerik:ScrollPositionIndicator.Visibility>
                                </telerik:ScrollPositionIndicator>
                                <Border x:Name="PART_FrozenColumnsPreview" Background="#FFD8E9F7" HorizontalAlignment="Left" Grid.Row="1" Grid.RowSpan="4" Visibility="Collapsed" VerticalAlignment="Stretch" Width="6"/>
                                <telerik:GridViewLoadingIndicator x:Name="PART_GridViewLoadingIndicator" Grid.ColumnSpan="3" IsTabStop="False" IsBusy="{Binding IsBusy, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.RowSpan="4" Visibility="Collapsed">
                                    <telerik:StyleManager.Theme>
                                        <telerik:TransparentTheme/>
                                    </telerik:StyleManager.Theme>
                                </telerik:GridViewLoadingIndicator>
                                <Rectangle x:Name="Background_Disabled" Grid.ColumnSpan="3" Fill="#66FFFFFF" IsHitTestVisible="False" Grid.RowSpan="5" Visibility="Collapsed"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="#FF747474"/>
                <Setter Property="Foreground" Value="#FF605F5F"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="AlternateRowBackground" Value="#BFF2F2F2"/>
                <Setter Property="VerticalGridLinesBrush" Value="#33000000"/>
                <Setter Property="HorizontalGridLinesBrush" Value="#33000000"/>
                <Setter Property="GroupPanelBackground">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#B2FFFFFF" Offset="1"/>
                            <GradientStop Color="#66B1B1B1"/>
                            <GradientStop Color="#7FFFFFFF" Offset="0.5"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="GroupPanelForeground" Value="#FF494848"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="Tag" Value="Transparent"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
            </Style>
            <Style x:Key="KMGridRow" TargetType="{x:Type telerik:GridViewRow}">
                <Style.Triggers>
                    <Trigger Property="IsSelected"  Value="True">
                        <Setter Property="Background" Value="#4B87BD"/>
                        <Setter Property="Foreground" Value="White"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#4B87BD"/>
                        <Setter Property="Foreground" Value="White"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <system:Double x:Key="background extra">0</system:Double>

            <Style x:Key="VerticalRadioButtonList" TargetType="{x:Type ListBox}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel Background="Transparent" Orientation="Vertical"/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type ListBoxItem}" >
                            <Setter Property="Margin" Value="5" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <Border BorderThickness="0" Background="Transparent">
                                            <RadioButton Focusable="False"
					            IsHitTestVisible="False"
					            IsChecked="{TemplateBinding IsSelected}">
                                                <ContentPresenter />
                                            </RadioButton>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBox}">
                            <Border BorderThickness="0" Padding="0" BorderBrush="Transparent" Background="Transparent" Name="Bd" SnapsToDevicePixels="True">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="HorizontalRadioButtonList" TargetType="{x:Type ListBox}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel Background="Transparent" Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type ListBoxItem}" >
                            <Setter Property="Margin" Value="5" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <Border BorderThickness="0" Background="Transparent">
                                            <RadioButton Focusable="False"
					            IsHitTestVisible="False"
					            IsChecked="{TemplateBinding IsSelected}">
                                                <ContentPresenter />
                                            </RadioButton>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBox}">
                            <Border BorderThickness="0" Padding="0" BorderBrush="Transparent" Background="Transparent" Name="Bd" SnapsToDevicePixels="True">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="LinkButton" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <TextBlock TextDecorations="Underline">
                                <ContentPresenter />
                            </TextBlock>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground" Value="Blue" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Foreground" Value="Red" />
                        <Setter Property="Cursor" Value="Hand" />
                    </Trigger>
                </Style.Triggers>
            </Style>


            <Style x:Key="RadButtonRound" TargetType="{x:Type telerik:RadButton}">
                <Setter Property="FontFamily" Value="Calibri"/>
                <Setter Property="Foreground" Value="#FFFFFFFF"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type telerik:RadButton}">
                            <Border x:Name="Border" CornerRadius="8" BorderThickness="1" 
							Background="{StaticResource KMOrangeGradient}">
                                <ContentPresenter  Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsDefaulted" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource KMLightBlueGradient}" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource KMBlueGradient}" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="RoundedRadListBoxItem" TargetType="telerik:RadListBoxItem">
                <Setter Property="Padding" Value="3"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Top"/>
                <Setter Property="Foreground" Value="#FF747474" />
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Black"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Margin" Value="0,0,0,10" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="telerik:RadListBoxItem">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="MouseOverVisual" Storyboard.TargetProperty="Opacity" To="1"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Opacity" To="0.5"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="SelectionStates">
                                        <VisualState x:Name="Unselected"/>
                                        <VisualState x:Name="Selected">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="SelectedVisual" Storyboard.TargetProperty="Opacity" To="1"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unfocused"/>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Border
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="10"
                                SnapsToDevicePixels="True"/>
                                <Border x:Name="MouseOverVisual"
                                Opacity="0"
                                BorderThickness="{TemplateBinding BorderThickness}"                                
                                CornerRadius="11"
                                BorderBrush="{StaticResource ControlOuterBorder_Highlighted}"
                                SnapsToDevicePixels="True">
                                    <Border                                    
                                    BorderBrush="{StaticResource ControlInnerBorder_Highlighted}"
                                    BorderThickness="1"
                                    CornerRadius="10"
                                    SnapsToDevicePixels="True"/>
                                </Border>
                                <Border x:Name="SelectedVisual"
                                Opacity="0"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="11"
                                BorderBrush="{StaticResource ControlSubItem_OuterBorder_Selected}"
                                SnapsToDevicePixels="True">
                                    <Border
                                    BorderBrush="{StaticResource ControlSubItem_InnerBorder_Selected}"
                                    BorderThickness="1"
                                    CornerRadius="9"
                                    SnapsToDevicePixels="True"/>
                                </Border>
                                <ContentPresenter x:Name="contentPresenter"                                
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Border x:Name="FocusVisual"
                                Opacity="0"
                                BorderThickness="1"
                                CornerRadius="9"
                                BorderBrush="{StaticResource ControlOuterBorder_Focused}"
                                SnapsToDevicePixels="True"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="vannilaListBoxItem" TargetType="telerik:RadListBoxItem">
                <Setter Property="Padding" Value="3"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Top"/>
                <Setter Property="Foreground" Value="#FF747474" />
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Black"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Margin" Value="0,0,0,10" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="telerik:RadListBoxItem">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Opacity" To="0.5"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unfocused"/>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Border
                                BorderThickness="0"
                                Background="Transparent"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="0"
                                SnapsToDevicePixels="True"/>
                                <Border x:Name="MouseOverVisual"
                                Opacity="0"
                                BorderThickness="0"                                
                                CornerRadius="0"
                                BorderBrush="{StaticResource ControlOuterBorder_Highlighted}"
                                SnapsToDevicePixels="True">
                                    <Border                                    
                                    BorderBrush="{StaticResource ControlInnerBorder_Highlighted}"
                                    BorderThickness="0"
                                    CornerRadius="0"
                                    SnapsToDevicePixels="True"/>
                                </Border>
                                <Border x:Name="SelectedVisual"
                                Opacity="0"
                                BorderThickness="0"
                                CornerRadius="0"
                                BorderBrush="{StaticResource ControlSubItem_OuterBorder_Selected}"
                                SnapsToDevicePixels="True">
                                    <Border
                                    BorderBrush="{StaticResource ControlSubItem_InnerBorder_Selected}"
                                    BorderThickness="0"
                                    CornerRadius="0"
                                    SnapsToDevicePixels="True"/>
                                </Border>
                                <ContentPresenter x:Name="contentPresenter"                                
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Border x:Name="FocusVisual"
                                Opacity="0"
                                BorderThickness="0"
                                CornerRadius="0"
                                BorderBrush="{StaticResource ControlOuterBorder_Focused}"
                                SnapsToDevicePixels="True"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="comboBoxDefaultValueTxt" TargetType="TextBlock">
                <Style.Setters>
                    <Setter Property="Visibility" Value="Hidden" />
                </Style.Setters>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding ElementName=mybox,Path=SelectedItem}" Value="{x:Null}">
                        <Setter Property="Visibility" Value="Visible"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="CircQualListBoxItem" TargetType="telerik:RadListBoxItem">
                <Setter Property="Padding" Value="3"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Top"/>
                <Setter Property="Foreground" Value="#FF747474" />
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="telerik:RadListBoxItem">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="MouseOverVisual" Storyboard.TargetProperty="Opacity" To="1"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Opacity" To="0.5"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="SelectionStates">
                                        <VisualState x:Name="Unselected"/>
                                        <VisualState x:Name="Selected">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="SelectedVisual" Storyboard.TargetProperty="Opacity" To="1"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unfocused"/>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Border
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="{StaticResource ControlOuterBorder_CornerRadius}"
                                SnapsToDevicePixels="True"/>
                                <Border x:Name="MouseOverVisual"
                                Opacity="0"
                                BorderThickness="{TemplateBinding BorderThickness}"                                
                                CornerRadius="{StaticResource ControlOuterBorder_CornerRadius}"
                                BorderBrush="{StaticResource ControlOuterBorder_Highlighted}"
                                SnapsToDevicePixels="True">
                                    <Border                                    
                                    Background="{StaticResource ControlBackground_Highlighted}"
                                    BorderBrush="{StaticResource ControlInnerBorder_Highlighted}"
                                    BorderThickness="1"
                                    CornerRadius="{StaticResource ControlInnerBorder_CornerRadius}"
                                    SnapsToDevicePixels="True"/>
                                </Border>
                                <Border x:Name="SelectedVisual"
                                Opacity="0"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{StaticResource ControlOuterBorder_CornerRadius}"
                                BorderBrush="{StaticResource ControlSubItem_OuterBorder_Selected}"
                                SnapsToDevicePixels="True">
                                    <Border
                                    Background="{StaticResource ControlSubItem_Background_Selected}"
                                    BorderBrush="{StaticResource ControlSubItem_InnerBorder_Selected}"
                                    BorderThickness="1"
                                    CornerRadius="{StaticResource ControlInnerBorder_CornerRadius}"
                                    SnapsToDevicePixels="True"/>
                                </Border>
                                <ContentPresenter x:Name="contentPresenter"                                
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Border x:Name="FocusVisual"
                                Opacity="0"
                                BorderThickness="1"
                                CornerRadius="{StaticResource ControlOuterBorder_CornerRadius}"
                                BorderBrush="{StaticResource ControlOuterBorder_Focused}"
                                SnapsToDevicePixels="True"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="White"/>
                                    <Setter Property="Background" Value="#FF4B87BC" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="#FF747474"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Start -->
            <!-- Telerik -->
            <Style TargetType="{x:Type telerik:RadWindow}" x:Key="OKCancelRad">
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="MinWidth" Value="275" />
                <Setter Property="MaxWidth" Value="500" />
                <Setter Property="telerik:StyleManager.Theme" Value="Expression_Dark" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="telerik:RadConfirm">
                            <Grid x:Name="LayoutRoot">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <Image x:Name="Icon" Width="48" Height="48" VerticalAlignment="Top" Margin="16 8 8 8"/>

                                <ScrollViewer Grid.Row="0" Grid.Column="1" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Margin="0 0 0 8">
                                    <ContentPresenter x:Name="ConfirmText" Margin="8 8 8 0" />
                                </ScrollViewer>
                                <Border x:Name="HorizontalRule" Grid.Row="1" Grid.ColumnSpan="2" BorderThickness="0 0 0 1" Height="2" VerticalAlignment="Top" />
                                <StackPanel x:Name="DialogButtons" Grid.Row="2" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Right">
                                    <telerik:RadButton x:Name="Ok" MinWidth="70" Content="Ok" Click="saveDialog" Margin="0 10 8 8" />
                                    <telerik:RadButton x:Name="Cancel" MinWidth="70" Content="Cancel" Click="saveDialog" Margin="0 10 8 8" />
                                </StackPanel>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type telerik:RadWindow}" x:Key="RadPopUp">
                <Setter Property="telerik:StyleManager.Theme" Value="Expression_Dark" />
            </Style>
            <Style TargetType="{x:Type telerik:RadRibbonRadioButton}">
                <Setter Property="telerik:StyleManager.Theme" Value="Office_Black" />
            </Style>
            <Style TargetType="{x:Type telerik:RadRibbonComboBox}">
                <Setter Property="telerik:StyleManager.Theme" Value="Expression_Dark" />
            </Style>
            <Style TargetType="{x:Type telerik:RadRibbonButton}">
                <Setter Property="telerik:StyleManager.Theme" Value="Office_Black" />
            </Style>
            <Style TargetType="{x:Type telerik:Label}">
                <Setter Property="telerik:StyleManager.Theme" Value="Office_Black" />
            </Style>
            <Style TargetType="{x:Type telerik:RadComboBox}">
                <Setter Property="FontFamily" Value="Calibri"></Setter>
                <Setter Property="Background" Value="White"></Setter>
                <Setter Property="MaxDropDownHeight" Value="293"></Setter>
                <Setter Property="BorderThickness" Value="1"></Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#FF4B87BC" />
                        <Setter Property="BorderBrush" Value="#FFC7CACC" />
                        <Setter Property="TextBlock.Foreground" Value="White"/>
                    </Trigger>
                    <Trigger Property="IsFocused" Value="True">
                        <Setter Property="Background" Value="#FF4B87BC" />
                        <Setter Property="BorderBrush" Value="#FFC7CACC" />
                        <Setter Property="TextBlock.Foreground" Value="White"/>
                    </Trigger>
                    <Trigger Property="IsKeyboardFocused" Value="True">
                        <Setter Property="Background" Value="#FF4B87BC" />
                        <Setter Property="BorderBrush" Value="#FF4B87BC" />
                        <Setter Property="TextBlock.Foreground" Value="White"/>
                    </Trigger>
                    <Trigger Property="IsDropDownOpen"  Value="True">
                        <Setter Property="Background" Value="White" />
                        <Setter Property="BorderBrush" Value="#FFC7CACC" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="MaskedInputPlain" TargetType="{x:Type telerik:RadMaskedTextInput}">
                <Setter Property="Height" Value="23" />
                <Setter Property="Background" Value="#FFFFFFFF" />
                <Setter Property="BorderBrush" Value="#FFC7CACC" />
                <!--<Setter Property="SelectionBrush" Value="#FF4B87BC" />-->
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="FontFamily" Value="Calibri" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Foreground" Value="#FF747474" />
                <Setter Property="FontWeight" Value="Light" />
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.5"></Setter>
                        <Setter Property="Foreground" Value="#FF747474" />
                        <Setter Property="Background" Value="White" />
                    </Trigger>
                    <Trigger Property="IsReadOnly" Value="True">
                        <Setter Property="Opacity" Value="0.5"></Setter>
                        <Setter Property="Foreground" Value="#FF747474" />
                        <Setter Property="Background" Value="White" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <CornerRadius x:Key="SplitButton_SpanCornerRadius">10</CornerRadius>
            <Style x:Key="roundedComboBoxes" TargetType="telerik:RadComboBox" BasedOn="{StaticResource RadComboBoxStyle}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#FF4B87BC" />
                        <Setter Property="BorderBrush" Value="#FFC7CACC" />
                        <Setter Property="TextBlock.Foreground" Value="White"/>
                    </Trigger>
                    <Trigger Property="IsFocused" Value="True">
                        <Setter Property="Background" Value="#FF4B87BC" />
                        <Setter Property="BorderBrush" Value="#FFC7CACC" />
                        <Setter Property="TextBlock.Foreground" Value="White"/>
                    </Trigger>
                    <Trigger Property="IsKeyboardFocused" Value="True">
                        <Setter Property="Background" Value="#FF4B87BC" />
                        <Setter Property="BorderBrush" Value="#FF4B87BC" />
                        <Setter Property="TextBlock.Foreground" Value="White"/>
                    </Trigger>
                    <Trigger Property="IsDropDownOpen"  Value="True">
                        <Setter Property="Background" Value="White" />
                    </Trigger>
                </Style.Triggers>
                <Setter Property="Background" Value="#FFFFFFFF" />
                <Setter Property="BorderBrush" Value="#FFC7CACC" />
                <Setter Property="Foreground" Value="#FF747474" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="FontFamily" Value="Calibri" />
                <Setter Property="Height" Value="23" />
                <Setter Property="MaxDropDownHeight" Value="293"/>
                <Setter Property="telerik:StyleManager.Theme" Value="Office_Silver" />
                <Setter Property="NonEditableTemplate" Value="{StaticResource NonEditableComboBox}"/>
            </Style>
            <ControlTemplate x:Key="NonEditableComboBox" TargetType="telerik:RadComboBox">
                <Grid x:Name="VisualRoot">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Disabled">
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity">
                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.5"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DropDownIcon" Storyboard.TargetProperty="Opacity">
                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.5"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownIcon" Storyboard.TargetProperty="Foreground">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconForeground_Disabled}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownIcon" Storyboard.TargetProperty="Background">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconBackground_Disabled}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonChrome" Storyboard.TargetProperty="RenderEnabled">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <system:Boolean>False</system:Boolean>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ButtonChrome" Storyboard.TargetProperty="Opacity">
                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.6"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledBorder" Storyboard.TargetProperty="Opacity">
                                        <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Normal"/>
                            <VisualState x:Name="MouseOver">
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonChrome" Storyboard.TargetProperty="RenderMouseOver">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <system:Boolean>True</system:Boolean>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownIcon" Storyboard.TargetProperty="Foreground">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconForeground_MouseOver}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownIcon" Storyboard.TargetProperty="Background">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconBackground_MouseOver}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="DropDownOpen">
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownIcon" Storyboard.TargetProperty="Foreground">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconForeground_Pressed}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownIcon" Storyboard.TargetProperty="Background">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconBackground_Pressed}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="FocusStates">
                            <VisualState x:Name="Focused"/>
                            <VisualState x:Name="Unfocused"/>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Border IsHitTestVisible="False" Background="{TemplateBinding Background}" CornerRadius="{StaticResource SplitButton_SpanCornerRadius}"/>
                    <telerik:RadToggleButton x:Name="PART_DropDownButton" Foreground="{TemplateBinding Foreground}" IsTabStop="False" Margin="0" Padding="0" ClickMode="Press">
                        <telerik:RadToggleButton.Template>
                            <ControlTemplate TargetType="telerik:RadToggleButton">
                                <ContentPresenter/>
                            </ControlTemplate>
                        </telerik:RadToggleButton.Template>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="DisabledBorder"
                            IsHitTestVisible="False"
                            BorderBrush="{StaticResource ControlOuterBorder_Disabled}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Opacity="0"
                            CornerRadius="{StaticResource SplitButton_SpanCornerRadius}"
                            Grid.ColumnSpan="2"/>
                            <telerikChromes:ButtonChrome x:Name="ButtonChrome"
                            Grid.ColumnSpan="2"
                            CornerRadius="{StaticResource SplitButton_SpanCornerRadius}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            RenderPressed="{TemplateBinding IsDropDownOpen}"
                            RenderFocused="{TemplateBinding IsFocused}"
                            RenderEnabled="{TemplateBinding IsEnabled}"
                            RenderMouseOver="{TemplateBinding IsMouseOver}"/>
                            <Border Grid.ColumnSpan="2" Background="{TemplateBinding Background}" IsHitTestVisible="False" CornerRadius="{StaticResource SplitButton_SpanCornerRadius}" Margin="1"/>
                            <ContentControl x:Name="DropDownIcon"
                            Grid.Column="1"
                            IsTabStop="False"
                            Foreground="{StaticResource ButtonIconForeground_Normal}"
                            Background="{StaticResource ButtonIconBackground_Normal}"
                            Template="{StaticResource ArrowTemplateNonEditableCombobox}"/>
                            <ContentPresenter x:Name="Content"
                            Grid.Column="0"
                            Margin="{TemplateBinding Padding}"
                            IsHitTestVisible="False"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </telerik:RadToggleButton>
                    <Popup x:Name="PART_Popup">
                        <Grid x:Name="PopupRoot">
                            <Border
                            BorderThickness="1 1 2 1"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            MinWidth="{TemplateBinding MinDropDownWidth}"
                            MaxHeight="{TemplateBinding MaxDropDownHeight}"
                            Background="{StaticResource PickerPopupBackground}"
                            CornerRadius="{StaticResource SplitButton_SpanCornerRadius}"
                            x:Name="PART_ResizeBorder">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <telerik:RadButton x:Name="PART_ClearButton"
                                    Grid.Row="0"
                                    Margin="-1 -1 -1 0"
                                    Visibility="{TemplateBinding ClearSelectionButtonVisibility}"
                                    Content="{TemplateBinding ClearSelectionButtonContent}"/>
                                    <ScrollViewer x:Name="PART_ScrollViewer"
                                    Grid.Row="1" Margin="4"
                                    Foreground="{TemplateBinding Foreground}"
                                    Padding="4"
                                    BorderThickness="0"
                                    HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                    VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                    CanContentScroll="True">
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                </Grid>
                            </Border>
                        </Grid>
                    </Popup>
                </Grid>
            </ControlTemplate>
            <!--<ControlTemplate x:Key="NonEditableComboBox" TargetType="telerik:RadComboBox">
                <Grid x:Name="VisualRoot">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Disabled">
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity">
                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.5"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DropDownIcon" Storyboard.TargetProperty="Opacity">
                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.5"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownIcon" Storyboard.TargetProperty="Foreground">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconForeground_Disabled}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownIcon" Storyboard.TargetProperty="Background">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconBackground_Disabled}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonChrome" Storyboard.TargetProperty="RenderEnabled">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <system:Boolean>False</system:Boolean>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ButtonChrome" Storyboard.TargetProperty="Opacity">
                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.6"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledBorder" Storyboard.TargetProperty="Opacity">
                                        <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Normal"/>
                            <VisualState x:Name="MouseOver">
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonChrome" Storyboard.TargetProperty="RenderMouseOver">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <system:Boolean>True</system:Boolean>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownIcon" Storyboard.TargetProperty="Foreground">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconForeground_MouseOver}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownIcon" Storyboard.TargetProperty="Background">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconBackground_MouseOver}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="DropDownOpen">
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownIcon" Storyboard.TargetProperty="Foreground">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconForeground_Pressed}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownIcon" Storyboard.TargetProperty="Background">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconBackground_Pressed}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="FocusStates">
                            <VisualState x:Name="Focused"/>
                            <VisualState x:Name="Unfocused"/>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Border IsHitTestVisible="False" Background="{TemplateBinding Background}" CornerRadius="{StaticResource SplitButton_SpanCornerRadius}"/>
                    <telerik:RadToggleButton x:Name="PART_DropDownButton" Foreground="{TemplateBinding Foreground}" IsTabStop="False" Margin="0" Padding="0" ClickMode="Press">
                        <telerik:RadToggleButton.Template>
                            <ControlTemplate TargetType="telerik:RadToggleButton">
                                <ContentPresenter />
                            </ControlTemplate>
                        </telerik:RadToggleButton.Template>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="DisabledBorder"
                            IsHitTestVisible="False"
                            BorderBrush="{StaticResource ControlOuterBorder_Disabled}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Opacity="0"
                            CornerRadius="{StaticResource SplitButton_SpanCornerRadius}"
                            Grid.ColumnSpan="2"/>
                            <telerikChromes:ButtonChrome x:Name="ButtonChrome"
                            Grid.ColumnSpan="2"
                            CornerRadius="{StaticResource SplitButton_SpanCornerRadius}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            RenderPressed="{TemplateBinding IsDropDownOpen}"
                            RenderFocused="{TemplateBinding IsFocused}"
                            RenderEnabled="{TemplateBinding IsEnabled}"
                            RenderMouseOver="{TemplateBinding IsMouseOver}"/>
                            <Border Grid.ColumnSpan="2" Background="{TemplateBinding Background}" IsHitTestVisible="False" CornerRadius="{StaticResource SplitButton_SpanCornerRadius}" Margin="1"/>
                            <Line Fill="#999966" Height="20" Stroke="#999966" StrokeThickness="1" X1="0" X2="0" Y1="0" Y2="15" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,5,0,0"/>
                            <ContentControl x:Name="DropDownIcon" Background="White" Grid.Column="1" Foreground="Black" IsTabStop="False">
                                <ContentControl.Template>
                                    <ControlTemplate TargetType="{x:Type ContentControl}">
                                        <Grid Margin="5,0">                                            
                                            <Path x:Name="BackgroundIcon" Data="M0,0L2,0 1,1z" Fill="#999966" Height="8" Margin="0,2,0,0" Stretch="Fill" Width="10"/>
                                            <Path x:Name="ForegroundIcon" Data="M0,0L2,0 1,1z" Fill="#999966" Height="8" Margin="0,1" Stretch="Fill" Width="10"/>
                                        </Grid>
                                    </ControlTemplate>
                                </ContentControl.Template>
                            </ContentControl>
                        </Grid>
                    </telerik:RadToggleButton>
                    <Popup x:Name="PART_Popup" VerticalOffset="-10">
                        <Grid x:Name="PopupRoot">
                            <Border
                            BorderThickness="1"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            MinWidth="{TemplateBinding MinDropDownWidth}"
                            MaxHeight="{TemplateBinding MaxDropDownHeight}"
                            Background="{StaticResource PickerPopupBackground}"
                            CornerRadius="10,10,0,0"
                            x:Name="PART_ResizeBorder">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <telerik:RadButton x:Name="PART_ClearButton"
                                    Grid.Row="0"
                                    Margin="-1 -1 -1 0"
                                    Visibility="{TemplateBinding ClearSelectionButtonVisibility}"
                                    Content="{TemplateBinding ClearSelectionButtonContent}"/>
                                    <ScrollViewer x:Name="PART_ScrollViewer"
                                    Grid.Row="1"
                                    Foreground="{TemplateBinding Foreground}"
                                    Padding="0 1 0 0"
                                    BorderThickness="0"
                                    HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                    VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                    CanContentScroll="True">
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                </Grid>
                            </Border>
                        </Grid>
                    </Popup>
                </Grid>
            </ControlTemplate>-->

            <Style x:Key="NicksWeakCombo" TargetType="telerik:RadComboBox" BasedOn="{StaticResource RadComboBoxStyle}">
                <Setter Property="NonEditableTemplate" Value="{StaticResource NonEditableComboBox}"/>
            </Style>

            <Style x:Key="vanillaComboBoxes" TargetType="telerik:RadComboBox" BasedOn="{StaticResource RadComboBoxStyle}">
                <Setter Property="FontFamily" Value="Calibri"></Setter>
                <Setter Property="MaxDropDownHeight" Value="293"></Setter>
                <Setter Property="BorderBrush" Value="Transparent"></Setter>
                <Setter Property="BorderThickness" Value="0"></Setter>
                <Setter Property="NonEditableTemplate" Value="{StaticResource NoBorderComboBox}"></Setter>
            </Style>
            <ControlTemplate x:Key="NoBorderComboBox" TargetType="telerik:RadComboBox">
                <Grid x:Name="VisualRoot">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Disabled">
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity">
                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.5"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DropDownIcon" Storyboard.TargetProperty="Opacity">
                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.5"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownIcon" Storyboard.TargetProperty="Foreground">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconForeground_Disabled}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownIcon" Storyboard.TargetProperty="Background">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconBackground_Disabled}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonChrome" Storyboard.TargetProperty="RenderEnabled">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <system:Boolean>False</system:Boolean>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ButtonChrome" Storyboard.TargetProperty="Opacity">
                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.6"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledBorder" Storyboard.TargetProperty="Opacity">
                                        <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Normal"/>
                            <VisualState x:Name="MouseOver">
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonChrome" Storyboard.TargetProperty="RenderMouseOver">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <system:Boolean>True</system:Boolean>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownIcon" Storyboard.TargetProperty="Foreground">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconForeground_MouseOver}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownIcon" Storyboard.TargetProperty="Background">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconBackground_MouseOver}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="DropDownOpen">
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownIcon" Storyboard.TargetProperty="Foreground">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconForeground_Pressed}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownIcon" Storyboard.TargetProperty="Background">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonIconBackground_Pressed}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="FocusStates">
                            <VisualState x:Name="Focused"/>
                            <VisualState x:Name="Unfocused"/>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Border IsHitTestVisible="False" Visibility="Hidden" Background="{TemplateBinding Background}" CornerRadius="{StaticResource SplitButton_SpanCornerRadius}"/>
                    <telerik:RadToggleButton x:Name="PART_DropDownButton" Foreground="{TemplateBinding Foreground}" IsTabStop="False" Margin="0" Padding="0" ClickMode="Press">
                        <telerik:RadToggleButton.Template>
                            <ControlTemplate TargetType="telerik:RadToggleButton">
                                <ContentPresenter/>
                            </ControlTemplate>
                        </telerik:RadToggleButton.Template>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="DisabledBorder"
                            IsHitTestVisible="False" Visibility="Hidden"
                            BorderBrush="{StaticResource ControlOuterBorder_Disabled}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Opacity="0"
                            CornerRadius="{StaticResource SplitButton_SpanCornerRadius}"
                            Grid.ColumnSpan="2"/>
                            <telerikChromes:ButtonChrome x:Name="ButtonChrome"
                            Grid.ColumnSpan="2"
                            CornerRadius="{StaticResource SplitButton_SpanCornerRadius}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            RenderPressed="{TemplateBinding IsDropDownOpen}"
                            RenderFocused="{TemplateBinding IsFocused}"
                            RenderEnabled="{TemplateBinding IsEnabled}"
                            RenderMouseOver="{TemplateBinding IsMouseOver}"/>
                            <Border Grid.ColumnSpan="2" Visibility="Hidden" Background="{TemplateBinding Background}" IsHitTestVisible="False" CornerRadius="{StaticResource SplitButton_SpanCornerRadius}" Margin="1"/>
                            <Line Fill="#999966" Height="20" Stroke="#999966" StrokeThickness="1" X1="0" X2="0" Y1="0" Y2="15" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,5,0,0"/>
                            <ContentControl x:Name="DropDownIcon" Background="White" Grid.Column="1" Foreground="Black" IsTabStop="False">
                                <ContentControl.Template>
                                    <ControlTemplate TargetType="{x:Type ContentControl}">
                                        <Grid Margin="5,0">
                                            <Path x:Name="BackgroundIcon" Data="M0,0L2,0 1,1z" Fill="#999966" Height="10" Margin="0,2,0,0" Stretch="Fill" Width="10"/>
                                            <Path x:Name="ForegroundIcon" Data="M0,0L2,0 1,1z" Fill="#999966" Height="10" Margin="0,1" Stretch="Fill" Width="10"/>
                                        </Grid>
                                    </ControlTemplate>
                                </ContentControl.Template>
                            </ContentControl>
                        </Grid>
                    </telerik:RadToggleButton>
                    <Popup x:Name="PART_Popup">
                        <Grid x:Name="PopupRoot">
                            <Border
                            BorderThickness="1"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            MinWidth="{TemplateBinding MinDropDownWidth}"
                            MaxHeight="{TemplateBinding MaxDropDownHeight}"
                            Background="{StaticResource PickerPopupBackground}"
                            CornerRadius="10,10,0,0"
                            x:Name="PART_ResizeBorder">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <telerik:RadButton x:Name="PART_ClearButton"
                                    Grid.Row="0"
                                    Margin="-1 -1 -1 0"
                                    Visibility="{TemplateBinding ClearSelectionButtonVisibility}"
                                    Content="{TemplateBinding ClearSelectionButtonContent}"/>
                                    <ScrollViewer x:Name="PART_ScrollViewer"
                                    Grid.Row="1"
                                    Foreground="{TemplateBinding Foreground}"
                                    Padding="0 1 0 0"
                                    BorderThickness="0"
                                    HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                    VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                    CanContentScroll="True">
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                </Grid>
                            </Border>
                        </Grid>
                    </Popup>
                </Grid>
            </ControlTemplate>

            <Style TargetType="{x:Type telerik:RadComboBoxItem}">
                <Setter Property="Background" Value="White"></Setter>
                <Setter Property="Foreground" Value="#FF747474"></Setter>
                <Setter Property="BorderBrush" Value="#FFC7CACC"></Setter>
                <Setter Property="BorderThickness" Value="0,0"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type telerik:RadComboBoxItem}">
                            <Border x:Name="Border" CornerRadius="2" BorderThickness="1" 
                                    Background="White" BorderBrush="Transparent">
                                <ContentPresenter x:Name="ct" Margin="0.5" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource KMBlueGradient}" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#FF045DA4" />
                                    <Setter TargetName="ct" Property="TextBlock.Foreground" Value="White" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource KMBlueGradient}" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#FF045DA4" />
                                    <Setter TargetName="ct" Property="TextBlock.Foreground" Value="White" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="SearchDetails" TargetType="{x:Type telerik:RadComboBoxItem}">
                <Setter Property="Background" Value="White"></Setter>
                <Setter Property="BorderBrush" Value="#FFC7CACC"></Setter>
                <Setter Property="BorderThickness" Value="0,0"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type telerik:RadComboBoxItem}">
                            <Border x:Name="Border" CornerRadius="2" BorderThickness="1" 
                                    Background="White" BorderBrush="Transparent">
                                <ContentPresenter x:Name="ct" Margin="0.5" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource KMBlueGradient}" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#FF045DA4" />
                                    <Setter TargetName="ct" Property="TextBlock.Foreground" Value="White" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource KMBlueGradient}" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#FF045DA4" />
                                    <Setter TargetName="ct" Property="TextBlock.Foreground" Value="White" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="noHighlight" TargetType="{x:Type telerik:RadListBoxItem}">
                <Setter Property="Background" Value="White"></Setter>
                <Setter Property="BorderBrush" Value="#FFC7CACC"></Setter>
                <Setter Property="BorderThickness" Value="0,0"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type telerik:RadListBoxItem}">
                            <Border x:Name="Border" CornerRadius="2" BorderThickness="1" 
                                    Background="White" BorderBrush="Transparent">
                                <ContentPresenter x:Name="ct" Margin="0.5" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="Transparent" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                                </Trigger>                              
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="SaveResultsButtonTelerik" TargetType="{x:Type telerik:RadButton}">
                <Setter Property="FontFamily" Value="Calibri"></Setter>
                <Setter Property="Foreground" Value="#FFFFFFFF"></Setter>
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type telerik:RadButton}">
                            <Border x:Name="Border" CornerRadius="2" BorderThickness="1" 
                                    Background="#FF4B87BC" BorderBrush="White">
                                <ContentPresenter  Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsDefaulted" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="#FF4B87BC" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="#FF4B87BC" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="DefaultButtonTelerik" TargetType="{x:Type telerik:RadButton}">
                <Setter Property="FontFamily" Value="Calibri"></Setter>
                <Setter Property="Foreground" Value="#FFF1EFEF"></Setter>
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type telerik:RadButton}">
                            <Border x:Name="Border" CornerRadius="2" BorderThickness="1" 
                                    Background="#FFF47E1F" BorderBrush="White">
                                <ContentPresenter  Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsDefaulted" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="#FF4B87BC" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="#FF4B87BC" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="DefaultButtonRound" TargetType="{x:Type Button}">
                <Setter Property="FontFamily" Value="Calibri"></Setter>
                <Setter Property="Foreground" Value="#FFF1EFEF"></Setter>
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="Border">
                                <Grid>
                                    <Ellipse x:Name="Ellipse"  Stroke="White" Fill="#FFF47E1F"
                         StrokeThickness="1">
                                    </Ellipse>
                                    <ContentPresenter HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="Ellipse" Property="Stroke" Value="White" />
                                </Trigger>
                                <Trigger Property="IsDefaulted" Value="True">
                                    <Setter TargetName="Ellipse" Property="Stroke" Value="White" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Ellipse" Property="Fill" Value="#FF4B87BC" />
                                    <Setter TargetName="Ellipse" Property="Stroke" Value="White" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Ellipse" Property="Fill" Value="#FF4B87BC" />
                                    <Setter TargetName="Ellipse" Property="Stroke" Value="White" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Ellipse" Property="Fill" Value="#EEEEEE" />
                                    <Setter TargetName="Ellipse" Property="Stroke" Value="#AAAAAA" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                    <!--<Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="Border" CornerRadius="10" BorderThickness="1" 
                                    Background="#FFF47E1F" BorderBrush="White">
                                <ContentPresenter  Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsDefaulted" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="#FF4B87BC" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="#FF4B87BC" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>-->
                </Setter>
            </Style>
            <Style x:Key="TelerikFlyOutButton" TargetType="{x:Type telerik:RadButton}">
                <Setter Property="FontFamily" Value="Calibri"></Setter>
                <Setter Property="Foreground" Value="#FFF1EFEF"></Setter>
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type telerik:RadButton}">
                            <Border x:Name="Border" CornerRadius="2" BorderThickness="1" 
                                Background="#FFF47E1F" BorderBrush="White">
                                <ContentPresenter  Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsDefaulted" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="#FF4B87BC" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="#FF4B87BC" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <EventTrigger RoutedEvent="Mouse.MouseEnter">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Width"
                                     To="100" Duration="0:0:0.4" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="Mouse.MouseLeave">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Width"
                                     To="50" Duration="0:0:0.4" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type telerik:RadToggleButton}">
                <Setter Property="FontFamily" Value="Calibri"></Setter>
                <Setter Property="Foreground" Value="#FFFFFFFF"></Setter>
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type telerik:RadToggleButton}">
                            <Border x:Name="Border" CornerRadius="2" BorderThickness="1" 
                                    Background="{DynamicResource KMOrangeGradient}">
                                <ContentPresenter  Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource KMLightBlueGradient}" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <!--Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource KMBlueGradient}" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </-->
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource KMBlueGradient}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ToggleButtonCheck" TargetType="{x:Type telerik:RadToggleButton}">
                <Setter Property="FontFamily" Value="Calibri"></Setter>
                <Setter Property="Foreground" Value="#FFFFFFFF"></Setter>
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type telerik:RadToggleButton}">
                            <Border x:Name="Border" CornerRadius="2" BorderThickness="1" 
                                    Background="{DynamicResource KMOrangeGradient}">
                                <ContentPresenter  Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource KMBlueGradient}" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource KMLightBlueGradient}" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <!--Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource KMBlueGradient}" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </-->
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ToggleButtonUnCheck" TargetType="{x:Type telerik:RadToggleButton}">
                <Setter Property="FontFamily" Value="Calibri"></Setter>
                <Setter Property="Foreground" Value="#FFFFFFFF"></Setter>
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type telerik:RadToggleButton}">
                            <Border x:Name="Border" CornerRadius="2" BorderThickness="1" 
                                    Background="#FF8BC0EF">
                                <ContentPresenter  Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource KMBlueGradient}" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource KMLightBlueGradient}" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <!--Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource KMBlueGradient}" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </-->
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!-- Windows -->
            <Style x:Key="LoginWindow" TargetType="{x:Type Window}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="Gray" Offset="1"/>
                            <GradientStop Color="White"/>
                            <GradientStop Color="White" Offset="0.323"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Window}">
                            <Border x:Name="Border" BorderBrush="Transparent" BorderThickness="1" Background="{TemplateBinding Background}">
                                <AdornerDecorator>
                                    <ContentPresenter/>
                                </AdornerDecorator>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsActive" Value="False">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="WindowStyling" TargetType="{x:Type Window}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
                <Setter Property="Background" Value="White">
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Window}">
                            <Border x:Name="Border" BorderBrush="Transparent" BorderThickness="1" Background="{TemplateBinding Background}">
                                <AdornerDecorator>
                                    <ContentPresenter/>
                                </AdornerDecorator>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsActive" Value="False">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!-- Home Menu -->
            <Style x:Key="HomeMenu" TargetType="{x:Type Menu}">
                <Setter Property="Background" Value="#045DA4"/>
                <Setter Property="FontFamily" Value="Calibri"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
                <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
                <Setter Property="Foreground" Value="#EBEBEB"/>
                <Setter Property="VerticalAlignment" Value="Top"></Setter>
                <Setter Property="Height" Value="20"></Setter>
                <Setter Property="BorderBrush" Value="#5C5D5F"></Setter>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Menu}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                    Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="SubMenuItem" TargetType="{x:Type MenuItem}">
                <Setter Property="Background" Value="#045DA4">

                </Setter>
                <Setter Property="VerticalAlignment" Value="Top"></Setter>
                <Setter Property="Height" Value="22"></Setter>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="FontFamily" Value="Calibri"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Foreground" Value="#FF559EDB"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Grid>
                                <Border Name="Border" Background="#FF045DA4">
                                    <ContentPresenter x:Name="ContentSite"
                                      VerticalAlignment="Top"
                                      HorizontalAlignment="Left"                                                     
                                      ContentSource="Header"/>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="#FF4B87BC"/>
                                    <Setter Property="Foreground" Value="White"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!-- Buttons -->
            <Style x:Key="FileMapperWindowButton" TargetType="{x:Type Button}">
                <Setter Property="FontFamily" Value="Calibri"></Setter>
                <Setter Property="Foreground" Value="#FFFFFFFF"></Setter>
                <Setter Property="Background" Value="{DynamicResource KMLightBlueGradient}"/>
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="Border" CornerRadius="2" BorderThickness="1" 
                                    Background="{DynamicResource KMLightBlueGradient}" BorderBrush="Transparent">
                                <ContentPresenter Margin="0.5" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                                </Trigger>
                                <Trigger Property="IsDefaulted" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource KMBlueGradient}" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource KMBlueGradient}" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource KMBlueGradient}" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="FileMapperLiteWindowButton" TargetType="{x:Type Button}">
                <Setter Property="FontFamily" Value="Calibri"></Setter>
                <Setter Property="Foreground" Value="#FFFFFFFF"></Setter>
                <Setter Property="Background" Value="{DynamicResource KMLightBlueGradient}"/>
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="Border" CornerRadius="2" BorderThickness="1" 
                                    Background="{DynamicResource KMLightBlueGradient}" BorderBrush="Transparent">
                                <ContentPresenter Margin="0.5" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                                </Trigger>
                                <Trigger Property="IsDefaulted" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="Transparent" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="Transparent" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="Transparent" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="WindowButton" TargetType="{x:Type Button}">
                <Setter Property="FontFamily" Value="Calibri"></Setter>
                <Setter Property="Foreground" Value="#FFFFFFFF"></Setter>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="Border" CornerRadius="2" BorderThickness="1" 
                                    Background="Transparent" BorderBrush="Transparent">
                                <ContentPresenter Margin="0.5" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                                </Trigger>
                                <Trigger Property="IsDefaulted" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="Transparent" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="Transparent" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="Transparent" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type Button}">
                <Setter Property="FontFamily" Value="Calibri"></Setter>
                <Setter Property="Foreground" Value="#FFFFFFFF"></Setter>
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="Border" CornerRadius="2" BorderThickness="1" 
                                    Background="{StaticResource KMOrangeGradient}">
                                <ContentPresenter  Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsDefaulted" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource KMLightBlueGradient}" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource KMBlueGradient}" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="DefaultButton" TargetType="{x:Type Button}">
                <Setter Property="FontFamily" Value="Calibri"></Setter>
                <Setter Property="Foreground" Value="#FFFFFFFF"></Setter>
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="Border" CornerRadius="2" BorderThickness="1" 
                                    Background="{StaticResource KMOrangeGradient}">
                                <ContentPresenter  Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsDefaulted" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource KMLightBlueGradient}" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource KMBlueGradient}" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type telerik:RadButton}">
                <Setter Property="FontFamily" Value="Calibri"></Setter>
                <Setter Property="Foreground" Value="#FFFFFFFF"></Setter>
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type telerik:RadButton}">
                            <Border x:Name="Border" CornerRadius="2" BorderThickness="1" 
                                    Background="{StaticResource KMOrangeGradient}">
                                <ContentPresenter  Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsDefaulted" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource KMLightBlueGradient}" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource KMBlueGradient}" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="SaveResultsButton" TargetType="{x:Type Button}">
                <Setter Property="FontFamily" Value="Calibri"></Setter>
                <Setter Property="Foreground" Value="#FFFFFFFF"></Setter>
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="Border" CornerRadius="2" BorderThickness="1" 
                                    Background="#FF4B87BC" BorderBrush="White">
                                <ContentPresenter  Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsDefaulted" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="#FF4B87BC" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="#FF4B87BC" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type ToggleButton}">
                <Setter Property="FontFamily" Value="Calibri"></Setter>
                <Setter Property="Foreground" Value="#FFFFFFFF"></Setter>
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border x:Name="Border" CornerRadius="2" BorderThickness="1" 
                                    Background="{StaticResource KMOrangeGradient}">
                                <ContentPresenter  Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource KMLightBlueGradient}" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource KMBlueGradient}" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource KMBlueGradient}" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!-- TabItem -->
            <Style TargetType="{x:Type TabItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Grid>
                                <Border 
                                    Name="Border"
                                    Margin="0" 
                                    Background="#FF747474"                                           
                                    BorderThickness="1,1,1,1" 
                                    CornerRadius="10,10,0,0" >
                                    <ContentPresenter x:Name="ContentSite"
                                      VerticalAlignment="Center"                                                      
                                      HorizontalAlignment="Center"
                                      ContentSource="Header"
                                      Margin="2"
                                      RecognizesAccessKey="True"/>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Panel.ZIndex" Value="100" />
                                    <Setter TargetName="Border" Property="Background" Value="#FF4D4D4D" />
                                    <Setter Property="Foreground" Value="White"></Setter>
                                    <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="#FF8F8F8F" />
                                    <!--<Setter TargetName="Border" Property="BorderBrush" Value="Black" />-->
                                    <Setter Property="Foreground" Value="White" />
                                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="HistoryTabItem" TargetType="{x:Type TabItem}">
                <Setter Property="Foreground" Value="#FF559EDB" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Grid>
                                <Border 
                                    Name="Border"
                                    Margin="0"                                     
                                    Background="#FF045DA4"                                           
                                    BorderThickness="1,1,1,1" 
                                    CornerRadius="4,4,0,0" >
                                    <ContentPresenter x:Name="ContentSite"                                                      
                                      VerticalAlignment="Center"                                                      
                                      HorizontalAlignment="Center"
                                      ContentSource="Header"
                                      Margin="2"
                                      RecognizesAccessKey="True"/>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Panel.ZIndex" Value="100" />
                                    <Setter TargetName="Border" Property="Background" Value="#FF559EDB" />
                                    <Setter Property="Foreground" Value="#FF045DA4"></Setter>
                                    <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="#FF045DA4" />
                                    <!--<Setter TargetName="Border" Property="BorderBrush" Value="Black" />-->
                                    <Setter Property="Foreground" Value="#FF559EDB" />
                                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!-- ComboBox -->
            <Style x:Key="ComboBoxItem" TargetType="{x:Type ComboBoxItem}">
                <Setter Property="Background" Value="#FFFFFFFF"></Setter>
                <Setter Property="BorderBrush" Value="#FFC7CACC"></Setter>
                <Setter Property="BorderThickness" Value="1,0"></Setter>
                <Setter Property="Foreground" Value="#FF747474" />
            </Style>
            <Style TargetType="{x:Type ComboBoxItem}">
                <Setter Property="Background" Value="#FFFFFFFF"></Setter>
                <Setter Property="BorderBrush" Value="#FFC7CACC"></Setter>
                <Setter Property="BorderThickness" Value="1,0"></Setter>
                <Setter Property="Foreground" Value="#FF747474" />
            </Style>
            <!-- TextBox -->
            <Style TargetType="{x:Type TextBox}">
                <Setter Property="Foreground" Value="#FF747474" />
                <Setter Property="Background" Value="#FFFFFFFF"></Setter>
                <Setter Property="BorderThickness" Value="1"></Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="#FFC7CACC" />
                    </Trigger>
                    <Trigger Property="IsFocused" Value="True">
                        <Setter Property="BorderThickness" Value="1"></Setter>
                        <Setter Property="BorderBrush" Value="#FFC7CACC" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.5"></Setter>
                        <Setter Property="Background" Value="#FFFFFFFF" />
                    </Trigger>
                    <Trigger Property="IsReadOnly" Value="True">
                        <Setter Property="Opacity" Value="0.5"></Setter>
                        <Setter Property="Background" Value="#FFFFFFFF" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="TextBoxFM" TargetType="{x:Type TextBox}">
                <Setter Property="Background" Value="White" />
                <Setter Property="BorderBrush" Value="#FFC7CACC" />
                <Setter Property="SelectionBrush" Value="#FF4B87BC" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="VerticalScrollBarVisibility" Value="Disabled" />
                <Setter Property="UseLayoutRounding" Value="False" />
                <Setter Property="Foreground" Value="#FF747474" />
            </Style>
            <!-- Labels -->
            <Style x:Key="Label14FM" TargetType="{x:Type Label}">
                <Setter Property="FontSize" Value="14" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="Foreground" Value="#FF747474" />
            </Style>
            <Style x:Key="Label12" TargetType="{x:Type Label}">
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="Height" Value="25" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="Foreground" Value="#FF747474" />
                <Setter Property="FontFamily" Value="Calibri" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
                <Setter Property="FontWeight" Value="Normal" />
            </Style>
            <Style x:Key="Label14" TargetType="{x:Type Label}">
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="Height" Value="25" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="Foreground" Value="#FF747474" />
                <Setter Property="FontFamily" Value="Calibri" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
                <Setter Property="FontWeight" Value="Normal" />
            </Style>
            <Style x:Key="Label15" TargetType="{x:Type Label}">
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="Height" Value="25" />
                <Setter Property="VerticalAlignment" Value="Bottom" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="FontFamily" Value="Calibri" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
                <Setter Property="FontWeight" Value="Bold" />
            </Style>
            <Style x:Key="Label18" TargetType="{x:Type Label}">
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="Height" Value="21" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="Foreground" Value="#FF747474" />
                <Setter Property="FontFamily" Value="Calibri" />
                <Setter Property="FontSize" Value="18" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
                <Setter Property="FontWeight" Value="Normal" />
            </Style>
            <Style x:Key="Label26" TargetType="{x:Type Label}">
                <Setter Property="Foreground" Value="#FF747474" />
                <Setter Property="Height" Value="26" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="FontWeight" Value="Normal" />
            </Style>
            <!-- Checkbox -->
            <Style x:Key="Checkbox26" TargetType="{x:Type CheckBox}">
                <Setter Property="Foreground" Value="#FF747474" />
                <Setter Property="FontSize" Value="13" />
                <Setter Property="FontWeight" Value="Normal" />
            </Style>
            <!-- TextBlock -->
            <Style x:Key="TextBlock18" TargetType="{x:Type TextBlock}">
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="Height" Value="21" />
                <Setter Property="TextWrapping" Value="NoWrap" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="Foreground" Value="#FF747474" />
                <Setter Property="FontFamily" Value="Calibri" />
                <Setter Property="FontSize" Value="18" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
                <Setter Property="FontWeight" Value="Normal" />
            </Style>
            <Style x:Key="TextBlock24" TargetType="{x:Type TextBlock}">
                <Setter Property="Height" Value="35" />
                <Setter Property="TextWrapping" Value="NoWrap" />
                <Setter Property="VerticalAlignment" Value="Bottom" />
                <Setter Property="Foreground" Value="#FF045DA4" />
                <Setter Property="IsEnabled" Value="False" />
                <Setter Property="FontFamily" Value="Calibri" />
                <Setter Property="FontSize" Value="24" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="HorizontalAlignment" Value="Center" />
            </Style>
            <Style x:Key="TextBlockLink" TargetType="{x:Type TextBlock}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="VerticalAlignment" Value="Bottom" />
                <Setter Property="FontFamily" Value="Calibri" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="TextDecorations" Value="Underline" />
                <Setter Property="Foreground" Value="#FF747474" />
                <Setter Property="Cursor" Value="Hand" />
            </Style>
            <Style x:Key="TextBlockLogin" TargetType="{x:Type TextBlock}">
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="FontFamily" Value="Calibri" />
                <Setter Property="FontSize" Value="18" />
                <Setter Property="Width" Value="92" />
                <Setter Property="Height" Value="22" />
                <Setter Property="Foreground" Value="#FF747474" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="FontWeight" Value="Light" />
            </Style>
            <!-- Textbox -->
            <Style x:Key="TextBoxGeneral" TargetType="{x:Type TextBox}">
                <Setter Property="Width" Value="247" />
                <Setter Property="AutoWordSelection" Value="True" />
                <Setter Property="Background" Value="#FFFFFFFF" />
                <Setter Property="BorderBrush" Value="#FFC7CACC" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="SelectionBrush" Value="#FF4B7DBC" />
                <Setter Property="Height" Value="25" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="FontFamily" Value="Calibri" />
                <Setter Property="Foreground" Value="#FF747474" />
            </Style>
            <Style x:Key="TextBox247" TargetType="{x:Type TextBox}">
                <Setter Property="Width" Value="247" />
                <Setter Property="AutoWordSelection" Value="True" />
                <Setter Property="Background" Value="#FFFFFFFF" />
                <Setter Property="BorderBrush" Value="#FFC7CACC" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="SelectionBrush" Value="#FF4B7DBC" />
                <Setter Property="Height" Value="25" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="Foreground" Value="#FF747474" />
            </Style>
            <Style x:Key="TextBox370" TargetType="{x:Type TextBox}">
                <Setter Property="Width" Value="370" />
                <Setter Property="AutoWordSelection" Value="True" />
                <Setter Property="Background" Value="#FFFFFFFF" />
                <Setter Property="BorderBrush" Value="#FFC7CACC" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="SelectionBrush" Value="#FF4B7DBC" />
                <Setter Property="Height" Value="25" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="Foreground" Value="#000" />
            </Style>
            <Style x:Key="TextBoxLogin" TargetType="{x:Type TextBox}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="TextWrapping" Value="NoWrap" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="FontFamily" Value="Calibri" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="UseLayoutRounding" Value="False" />
                <Setter Property="BorderBrush" Value="#FF747474" />
                <Setter Property="Foreground" Value="#FF747474" />
                <Setter Property="FontWeight" Value="Light" />
                <Setter Property="Width" Value="253" />
                <Setter Property="SelectionBrush" Value="#FF4B87BC" />
            </Style>
            <Style x:Key="TextBoxMapper" TargetType="{x:Type TextBox}">
                <Setter Property="Background" Value="#FFFFFFFF" />
                <Setter Property="BorderBrush" Value="#FFC7CACC" />
                <Setter Property="SelectionBrush" Value="#FF4B7DBC" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Foreground" Value="#FF747474" />
            </Style>
            <!-- Password -->
            <Style x:Key="PasswordLogin" TargetType="{x:Type PasswordBox}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Height" Value="29" />
                <Setter Property="VerticalAlignment" Value="Bottom" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="FontFamily" Value="Calibri" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="UseLayoutRounding" Value="False" />
                <Setter Property="BorderBrush" Value="#FF747474" />
                <Setter Property="Foreground" Value="#FF747474" />
                <Setter Property="FontWeight" Value="Light" />
                <Setter Property="Width" Value="253" />
                <Setter Property="SelectionBrush" Value="#FF4B87BC" />
            </Style>
            <!-- Image Buttons -->
            <c:DoubleConverter x:Key="doubleConverter" />
            <Style x:Key="Control Center" TargetType="{x:Type Button}">
                <Setter Property="Content" Value="Control Center" />
                <Setter Property="MaxHeight" Value="256"></Setter>
                <Setter Property="MaxWidth" Value="256" />
                <Setter Property="Foreground" Value="#FF747474" />
                <Setter Property="FontWeight" Value="Medium" />
                <Setter Property="FontFamily" Value="Calibri" />
                <!--<Setter Property="FontSize" Value="{Binding Path=Height,
                RelativeSource={RelativeSource AncestorType={x:Type Window}},
                Converter={StaticResource doubleConverter},
                ConverterParameter=0.025}"></Setter>-->
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="5*"/>
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Image Source="/ImageLibrary;Component/Images/AppSystemLogos/ControlCenterNew256.png" />
                                <Viewbox Grid.Row="1" HorizontalAlignment="Center">
                                    <ContentPresenter Grid.Row="1" HorizontalAlignment="Center" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextBlock.TextAlignment="Center">
                                        <ContentPresenter.Resources>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="TextWrapping" Value="Wrap"/>
                                            </Style>
                                        </ContentPresenter.Resources>
                                    </ContentPresenter>
                                </Viewbox>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True"/>
                                <Trigger Property="IsDefaulted" Value="True"/>
                                <Trigger Property="IsMouseOver" Value="True"/>
                                <Trigger Property="IsPressed" Value="True"/>
                                <Trigger Property="IsEnabled" Value="False"/>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="Profile Manager" TargetType="{x:Type Button}">
                <Setter Property="Content" Value="Profile Manager" />
                <Setter Property="MaxHeight" Value="256"></Setter>
                <Setter Property="MaxWidth" Value="256" />
                <Setter Property="Foreground" Value="#FF747474" />
                <Setter Property="FontWeight" Value="Medium" />
                <Setter Property="FontFamily" Value="Calibri" />
                <!--<Setter Property="FontSize" Value="{Binding Path=Height,
                RelativeSource={RelativeSource AncestorType={x:Type Window}},
                Converter={StaticResource doubleConverter},
                ConverterParameter=0.025}"/>-->
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="5*"/>
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Image Source="/ImageLibrary;Component/Images/AppSystemLogos/ManagerNew256.png" />
                                <Viewbox Grid.Row="1" HorizontalAlignment="Center" Stretch="Uniform">
                                    <ContentPresenter Grid.Row="1" HorizontalAlignment="Center" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextBlock.TextAlignment="Center">
                                        <ContentPresenter.Resources>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="TextWrapping" Value="Wrap"/>
                                            </Style>
                                        </ContentPresenter.Resources>
                                    </ContentPresenter>
                                </Viewbox>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True"/>
                                <Trigger Property="IsDefaulted" Value="True"/>
                                <Trigger Property="IsMouseOver" Value="True"/>
                                <Trigger Property="IsPressed" Value="True"/>
                                <Trigger Property="IsEnabled" Value="False"/>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="Circulation" TargetType="{x:Type Button}">
                <Setter Property="Content" Value="Circulation Services" />
                <Setter Property="MaxHeight" Value="256"></Setter>
                <Setter Property="MaxWidth" Value="256" />
                <Setter Property="Foreground" Value="#FF747474" />
                <Setter Property="FontWeight" Value="Medium" />
                <Setter Property="FontFamily" Value="Calibri" />
                <!--<Setter Property="FontSize" Value="{Binding Path=Height,
                RelativeSource={RelativeSource AncestorType={x:Type Window}},
                Converter={StaticResource doubleConverter},
                ConverterParameter=0.025}" />-->
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="5*"/>
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Image Source="/ImageLibrary;Component/Images/AppSystemLogos/CirculationNew256.png" />
                                <Viewbox Grid.Row="1" HorizontalAlignment="Center" Stretch="Uniform">
                                    <ContentPresenter Grid.Row="1" HorizontalAlignment="Center" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextBlock.TextAlignment="Center">
                                        <ContentPresenter.Resources>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="TextWrapping" Value="Wrap"/>
                                            </Style>
                                        </ContentPresenter.Resources>
                                    </ContentPresenter>
                                </Viewbox>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True"/>
                                <Trigger Property="IsDefaulted" Value="True"/>
                                <Trigger Property="IsMouseOver" Value="True"/>
                                <Trigger Property="IsPressed" Value="True"/>
                                <Trigger Property="IsEnabled" Value="False"/>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="UAD" TargetType="{x:Type Button}">
                <Setter Property="Content" Value="Unified Audience Database" />
                <Setter Property="MaxHeight" Value="256"></Setter>
                <Setter Property="MaxWidth" Value="256" />
                <Setter Property="Foreground" Value="#FF747474" />
                <Setter Property="FontWeight" Value="Medium" />
                <Setter Property="FontFamily" Value="Calibri" />
                <!--<Setter Property="FontSize" Value="{Binding Path=Height,
                RelativeSource={RelativeSource AncestorType={x:Type Window}},
                Converter={StaticResource doubleConverter},
                ConverterParameter=0.025}"/>-->
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="5*"/>
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Image Source="/ImageLibrary;Component/Images/AppSystemLogos/UADNew256.png" />
                                <Viewbox Grid.Row="1" HorizontalAlignment="Center" Stretch="Uniform">
                                    <ContentPresenter Grid.Row="1" HorizontalAlignment="Center" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextBlock.TextAlignment="Center">
                                        <ContentPresenter.Resources>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="TextWrapping" Value="Wrap"/>
                                            </Style>
                                        </ContentPresenter.Resources>
                                    </ContentPresenter>
                                </Viewbox>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True"/>
                                <Trigger Property="IsDefaulted" Value="True"/>
                                <Trigger Property="IsMouseOver" Value="True"/>
                                <Trigger Property="IsPressed" Value="True"/>
                                <Trigger Property="IsEnabled" Value="False"/>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="Email" TargetType="{x:Type Button}">
                <Setter Property="Content" Value="Email Marketing" />
                <Setter Property="MaxHeight" Value="256"></Setter>
                <Setter Property="MaxWidth" Value="256" />
                <Setter Property="Foreground" Value="#FF747474" />
                <Setter Property="FontWeight" Value="Medium" />
                <Setter Property="FontFamily" Value="Calibri" />
                <!--<Setter Property="FontSize" Value="{Binding Path=Height,
                RelativeSource={RelativeSource AncestorType={x:Type Window}},
                Converter={StaticResource doubleConverter},
                ConverterParameter=0.025}"/>-->
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="5*"/>
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Image Source="/ImageLibrary;Component/Images/AppSystemLogos/Email256.png"/>
                                <Viewbox Grid.Row="1" HorizontalAlignment="Center" Stretch="Uniform">
                                    <ContentPresenter Grid.Row="1" HorizontalAlignment="Center" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextBlock.TextAlignment="Center">
                                        <ContentPresenter.Resources>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="TextWrapping" Value="Wrap"/>
                                            </Style>
                                        </ContentPresenter.Resources>
                                    </ContentPresenter>
                                </Viewbox>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True"/>
                                <Trigger Property="IsDefaulted" Value="True"/>
                                <Trigger Property="IsMouseOver" Value="True"/>
                                <Trigger Property="IsPressed" Value="True"/>
                                <Trigger Property="IsEnabled" Value="False"/>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="Forms" TargetType="{x:Type Button}">
                <Setter Property="Content" Value="Forms" />
                <Setter Property="MaxHeight" Value="256"></Setter>
                <Setter Property="MaxWidth" Value="256" />
                <Setter Property="Foreground" Value="#FF747474" />
                <Setter Property="FontWeight" Value="Medium" />
                <Setter Property="FontFamily" Value="Calibri" />
                <!--<Setter Property="FontSize" Value="{Binding Path=Height,
                RelativeSource={RelativeSource AncestorType={x:Type Window}},
                Converter={StaticResource doubleConverter},
                ConverterParameter=0.025}"/>-->
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="5*"/>
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Image Source="/ImageLibrary;Component/Images/AppSystemLogos/Forms256.png" />
                                <Viewbox Grid.Row="1" HorizontalAlignment="Center" Stretch="Uniform">
                                    <ContentPresenter Grid.Row="1" HorizontalAlignment="Center" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextBlock.TextAlignment="Center">
                                        <ContentPresenter.Resources>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="TextWrapping" Value="Wrap"/>
                                            </Style>
                                        </ContentPresenter.Resources>
                                    </ContentPresenter>
                                </Viewbox>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True"/>
                                <Trigger Property="IsDefaulted" Value="True"/>
                                <Trigger Property="IsMouseOver" Value="True"/>
                                <Trigger Property="IsPressed" Value="True"/>
                                <Trigger Property="IsEnabled" Value="False"/>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="LogOutButton" TargetType="{x:Type Button}">
                <!--<Setter Property="Height" Value="{Binding Path=ActualHeight,
                RelativeSource={RelativeSource AncestorType={x:Type Window}},
                Converter={StaticResource doubleConverter},
                ConverterParameter=0.025}"/>-->
                <Setter Property="FontFamily" Value="Calibri"></Setter>
                <Setter Property="Foreground" Value="#FFFFFFFF"></Setter>
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Content" Value="Log Out" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="Border" CornerRadius="2" BorderThickness="1" 
                                Background="{StaticResource KMOrangeGradient}">
                                <Viewbox Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" >
                                    <ContentPresenter RecognizesAccessKey="True"/>
                                </Viewbox>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsDefaulted" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource KMLightBlueGradient}" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource KMBlueGradient}" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!-- Banners -->
            <Style x:Key="BannerCirc" TargetType="{x:Type Image}">
                <Setter Property="Source" Value="/ImageLibrary;Component/Images/Banners/CirculationRevised.jpg"></Setter>
                <Setter Property="Stretch" Value="Fill"></Setter>
                <Setter Property="Height" Value="72"></Setter>
                <Setter Property="Width" Value="1050"></Setter>
                <Setter Property="VerticalAlignment" Value="Top"></Setter>
                <Setter Property="HorizontalAlignment" Value="Center"></Setter>
            </Style>
            <Style x:Key="BannerUAD" TargetType="{x:Type Image}">
                <Setter Property="Source" Value="/ImageLibrary;Component/Images/Banners/UADAMSRevised.jpg"></Setter>
                <Setter Property="Stretch" Value="Fill"></Setter>
                <Setter Property="Height" Value="72"></Setter>
                <Setter Property="Width" Value="1050"></Setter>
                <Setter Property="VerticalAlignment" Value="Top"></Setter>
                <Setter Property="HorizontalAlignment" Value="Center"></Setter>
            </Style>
            <Style x:Key="BannerCC" TargetType="{x:Type Image}">
                <Setter Property="Source" Value="/ImageLibrary;Component/Images/Banners/UADAMSRevised.jpg"></Setter>
                <Setter Property="Stretch" Value="Fill"></Setter>
                <Setter Property="Height" Value="72"></Setter>
                <Setter Property="Width" Value="1050"></Setter>
                <Setter Property="VerticalAlignment" Value="Top"></Setter>
                <Setter Property="HorizontalAlignment" Value="Center"></Setter>
            </Style>
            <Style x:Key="BannerPM" TargetType="{x:Type Image}">
                <Setter Property="Source" Value="/ImageLibrary;Component/Images/Banners/ProfileManagerTemp.jpg"></Setter>
                <Setter Property="Stretch" Value="Fill"></Setter>
                <Setter Property="Height" Value="72"></Setter>
                <Setter Property="Width" Value="1050"></Setter>
                <Setter Property="VerticalAlignment" Value="Top"></Setter>
                <Setter Property="HorizontalAlignment" Value="Center"></Setter>
            </Style>
            <!-- Title Bar -->
            <Style x:Key="GrayBar" TargetType="{x:Type StackPanel}">
                <Setter Property="Background" Value="#FFE2E2E2"></Setter>
            </Style>
            <Style x:Key="BlueBar" TargetType="{x:Type Image}">
                <Setter Property="Source" Value="/ImageLibrary;Component/Images/Banners/TempTitleBarBlue.jpg"></Setter>
                <Setter Property="Stretch" Value="Fill"></Setter>
                <Setter Property="Height" Value="25"></Setter>
                <Setter Property="Width" Value="1050"></Setter>
                <Setter Property="VerticalAlignment" Value="Top"></Setter>
                <Setter Property="HorizontalAlignment" Value="Center"></Setter>
            </Style>
            <!-- Images -->
            <Style x:Key="AMSLogoWindowHome" TargetType="{x:Type Image}">
                <Setter Property="Source" Value="/ImageLibrary;Component/Images/ApplicationLogos/FinalamslogoBLUENew.png"></Setter>
                <Setter Property="Stretch" Value="Fill"></Setter>
                <Setter Property="Height" Value="114"></Setter>
                <Setter Property="Width" Value="180"></Setter>
                <Setter Property="HorizontalAlignment" Value="Center"></Setter>
            </Style>
            <!-- Grid -->
            <Style x:Key="HomeTopGrid" TargetType="{x:Type Grid}">
                <Setter Property="Background" Value="#FFE2E2E2"></Setter>
            </Style>

            <!-- Circ Styles In Case this needs to be updated now -->
            <Style x:Key="LabelC14" TargetType="{x:Type Label}">
                <Setter Property="Foreground" Value="#FF747474" />
                <Setter Property="IsEnabled" Value="False" />
                <Setter Property="FontFamily" Value="Calibri" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="FontWeight" Value="Light" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
            </Style>
            <Style x:Key="LabelC24" TargetType="{x:Type Label}">
                <Setter Property="Foreground" Value="#FF747474" />
                <Setter Property="IsEnabled" Value="False" />
                <Setter Property="FontFamily" Value="Calibri" />
                <Setter Property="FontSize" Value="24" />
                <Setter Property="FontWeight" Value="Light" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
            </Style>
            <Style x:Key="ComboBoxC14" TargetType="{x:Type telerik:RadComboBox}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#FF4B87BC" />
                        <Setter Property="BorderBrush" Value="#FFC7CACC" />
                        <Setter Property="TextBlock.Foreground" Value="White"/>
                    </Trigger>
                    <Trigger Property="IsFocused" Value="True">
                        <Setter Property="Background" Value="#FF4B87BC" />
                        <Setter Property="BorderBrush" Value="#FFC7CACC" />
                        <Setter Property="TextBlock.Foreground" Value="White"/>
                    </Trigger>
                    <Trigger Property="IsKeyboardFocused" Value="True">
                        <Setter Property="Background" Value="#FF4B87BC" />
                        <Setter Property="BorderBrush" Value="#FF4B87BC" />
                        <Setter Property="TextBlock.Foreground" Value="White"/>
                    </Trigger>
                    <Trigger Property="IsDropDownOpen"  Value="True">
                        <Setter Property="Background" Value="White" />
                    </Trigger>
                </Style.Triggers>
                <Setter Property="Background" Value="#FFFFFFFF" />
                <Setter Property="BorderBrush" Value="#FFC7CACC" />
                <Setter Property="Foreground" Value="#FF747474" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="FontFamily" Value="Calibri" />
                <Setter Property="Height" Value="23" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="FontWeight" Value="Light" />
                <Setter Property="telerik:StyleManager.Theme" Value="Office_Silver" />
            </Style>
            <Style x:Key="ComboBoxCS13" TargetType="{x:Type telerik:RadComboBox}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#FF4B87BC" />
                        <Setter Property="BorderBrush" Value="#FFC7CACC" />
                        <Setter Property="TextBlock.Foreground" Value="White"/>
                    </Trigger>
                    <Trigger Property="IsFocused" Value="True">
                        <Setter Property="Background" Value="#FF4B87BC" />
                        <Setter Property="BorderBrush" Value="#FFC7CACC" />
                        <Setter Property="TextBlock.Foreground" Value="White"/>
                    </Trigger>
                    <Trigger Property="IsKeyboardFocused" Value="True">
                        <Setter Property="Background" Value="#FF4B87BC" />
                        <Setter Property="BorderBrush" Value="#FF4B87BC" />
                        <Setter Property="TextBlock.Foreground" Value="White"/>
                    </Trigger>
                    <Trigger Property="IsDropDownOpen"  Value="True">
                        <Setter Property="Background" Value="White" />
                        <Setter Property="Foreground" Value="#FF747474" />
                    </Trigger>
                </Style.Triggers>
                <Setter Property="Background" Value="#FFFFFFFF" />
                <Setter Property="BorderBrush" Value="#FFC7CACC" />
                <Setter Property="Foreground" Value="#FF747474" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="FontFamily" Value="Calibri" />
                <Setter Property="Height" Value="23" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="FontWeight" Value="Light" />
                <Setter Property="telerik:StyleManager.Theme" Value="Office_Silver" />
            </Style>
            <Style x:Key="ComboBoxCS2_13" TargetType="{x:Type telerik:RadComboBox}">
                <Setter Property="Background" Value="#FFFFFFFF" />
                <Setter Property="BorderBrush" Value="#FFC7CACC" />
                <Setter Property="Foreground" Value="#FF747474" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="FontFamily" Value="Calibri" />
                <Setter Property="Height" Value="23" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="FontWeight" Value="Light" />
                <Setter Property="telerik:StyleManager.Theme" Value="Office_Silver" />
            </Style>
            <Style x:Key="TextBoxCDefault" TargetType="{x:Type TextBox}">
                <Setter Property="Background" Value="#FFFFFFFF" />
                <Setter Property="BorderBrush" Value="#FFC7CACC" />
                <Setter Property="SelectionBrush" Value="#FF4B7DBC" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Foreground" Value="#FF747474" />
                <Setter Property="FontWeight" Value="Light" />
            </Style>
            <Style x:Key="RadDatePickerTheme" TargetType="{x:Type telerik:RadDatePicker}">
                <Setter Property="telerik:StyleManager.Theme" Value="Office_Silver" />
            </Style>
            <Style x:Key="TextBlockC13" TargetType="{x:Type TextBlock}">
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="Foreground" Value="#FF747474" />
                <Setter Property="FontFamily" Value="Calibri" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="FontWeight" Value="Light" />
            </Style>
            <Style x:Key="TextBlockC14" TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="#FF747474" />
                <Setter Property="Height" Value="18" />
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="IsEnabled" Value="False" />
                <Setter Property="FontFamily" Value="Calibri" />
                <Setter Property="FontSize" Value="14.667" />
                <Setter Property="FontWeight" Value="Light" />
            </Style>
            <Style x:Key="TextBlockC17" TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="#FF747474" />
                <Setter Property="Height" Value="18" />
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="IsEnabled" Value="False" />
                <Setter Property="FontFamily" Value="Calibri" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="FontWeight" Value="Light" />
            </Style>
            <Style x:Key="TextBlockC20" TargetType="{x:Type TextBlock}">
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="Foreground" Value="#FF045DA4" />
                <Setter Property="FontFamily" Value="Calibri" />
                <Setter Property="FontSize" Value="20" />
                <Setter Property="FontWeight" Value="Light" />
            </Style>
            <Style x:Key="TextBlockBlack20" TargetType="{x:Type TextBlock}">
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="Foreground" Value="#FF747474" />
                <Setter Property="FontFamily" Value="Calibri" />
                <Setter Property="FontSize" Value="20" />
                <Setter Property="FontWeight" Value="Light" />
            </Style>
            <Style x:Key="TextBlockBlue20" TargetType="{x:Type TextBlock}">
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="Foreground" Value="#FF045DA4" />
                <Setter Property="FontFamily" Value="Calibri" />
                <Setter Property="FontSize" Value="20" />
                <Setter Property="FontWeight" Value="Normal" />
            </Style>
            <Style x:Key="TextBoxC13" TargetType="{x:Type TextBox}">
                <Setter Property="Height" Value="23" />
                <Setter Property="Background" Value="#FFFFFFFF" />
                <Setter Property="BorderBrush" Value="#FFC7CACC" />
                <Setter Property="SelectionBrush" Value="#FF4B87BC" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="FontFamily" Value="Calibri" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Foreground" Value="#FF747474" />
                <Setter Property="FontWeight" Value="Light" />
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.5"></Setter>
                        <Setter Property="Foreground" Value="#FF747474" />
                        <Setter Property="Background" Value="White" />
                    </Trigger>
                    <Trigger Property="IsReadOnly" Value="True">
                        <Setter Property="Opacity" Value="0.5"></Setter>
                        <Setter Property="Foreground" Value="#FF747474" />
                        <Setter Property="Background" Value="White" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="TextBoxCT13" TargetType="{x:Type TextBox}">
                <Setter Property="Height" Value="23" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="#FFC7CACC" />
                <Setter Property="SelectionBrush" Value="#FF4B87BC" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="FontFamily" Value="Calibri" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Foreground" Value="#FF747474" />
                <Setter Property="FontWeight" Value="Light" />
            </Style>
            <Style x:Key="TextBoxCG13" TargetType="{x:Type TextBox}">
                <Setter Property="Height" Value="23" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="#FFC7CACC" />
                <Setter Property="SelectionBrush" Value="#FF4B87BC" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="FontFamily" Value="Calibri" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Foreground" Value="#FF747474" />
                <Setter Property="FontWeight" Value="Light" />
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.5"></Setter>
                        <Setter Property="Foreground" Value="#FF747474" />
                        <Setter Property="Background" Value="Transparent" />
                    </Trigger>
                    <Trigger Property="IsReadOnly" Value="True">
                        <Setter Property="Opacity" Value="0.5"></Setter>
                        <Setter Property="Foreground" Value="#FF747474" />
                        <Setter Property="Background" Value="Transparent" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <SolidColorBrush x:Key="Expander.MouseOver.Circle.Stroke" Color="#FF3C7FB1"/>
            <SolidColorBrush x:Key="Expander.MouseOver.Circle.Fill" Color="Transparent"/>
            <SolidColorBrush x:Key="Expander.MouseOver.Arrow.Stroke" Color="#222"/>
            <SolidColorBrush x:Key="Expander.Pressed.Circle.Stroke" Color="#FF526C7B"/>
            <SolidColorBrush x:Key="Expander.Pressed.Circle.Fill" Color="Transparent"/>
            <SolidColorBrush x:Key="Expander.Pressed.Arrow.Stroke" Color="#FF003366"/>
            <SolidColorBrush x:Key="Expander.Disabled.Circle.Stroke" Color="DarkGray"/>
            <SolidColorBrush x:Key="Expander.Disabled.Circle.Fill" Color="Transparent"/>
            <SolidColorBrush x:Key="Expander.Disabled.Arrow.Stroke" Color="#666"/>
            <SolidColorBrush x:Key="Expander.Static.Circle.Fill" Color="Transparent"/>
            <SolidColorBrush x:Key="Expander.Static.Circle.Stroke" Color="DarkGray"/>
            <SolidColorBrush x:Key="Expander.Static.Arrow.Stroke" Color="#666"/>
            <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Padding="{TemplateBinding Padding}">
                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="19"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Grid>
                                        <Grid.LayoutTransform>
                                            <TransformGroup>
                                                <TransformGroup.Children>
                                                    <TransformCollection>
                                                        <RotateTransform Angle="-90"/>
                                                    </TransformCollection>
                                                </TransformGroup.Children>
                                            </TransformGroup>
                                        </Grid.LayoutTransform>
                                        <!--<Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
                                    <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>-->
                                    </Grid>
                                    <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <!--<Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                                <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                            </Trigger>-->
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Padding="{TemplateBinding Padding}">
                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="19"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid>
                                        <Grid.LayoutTransform>
                                            <TransformGroup>
                                                <TransformGroup.Children>
                                                    <TransformCollection>
                                                        <RotateTransform Angle="180"/>
                                                    </TransformCollection>
                                                </TransformGroup.Children>
                                            </TransformGroup>
                                        </Grid.LayoutTransform>
                                        <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
                                        <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
                                    </Grid>
                                    <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                                    <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                                    <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                                    <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                    <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                                    <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                                    <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                                    <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Padding="{TemplateBinding Padding}">
                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="19"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Grid>
                                        <Grid.LayoutTransform>
                                            <TransformGroup>
                                                <TransformGroup.Children>
                                                    <TransformCollection>
                                                        <RotateTransform Angle="90"/>
                                                    </TransformCollection>
                                                </TransformGroup.Children>
                                            </TransformGroup>
                                        </Grid.LayoutTransform>
                                        <!--<Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
                                    <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>-->
                                    </Grid>
                                    <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <!--<Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                                <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                            </Trigger>-->
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ExpanderHeaderFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border>
                                <Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Padding="{TemplateBinding Padding}">
                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="19"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <!--<Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>-->
                                    <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
                                    <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <!--<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>-->
                                    <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <!--<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                                <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>-->
                                    <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <!--<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>-->
                                    <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="CustomExpander" TargetType="{x:Type Expander}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Expander}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
                                <DockPanel>
                                    <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </DockPanel>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded" Value="true">
                                    <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="ExpandDirection" Value="Right">
                                    <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
                                    <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                                    <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}"/>
                                </Trigger>
                                <Trigger Property="ExpandDirection" Value="Up">
                                    <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                                    <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                                    <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}"/>
                                </Trigger>
                                <Trigger Property="ExpandDirection" Value="Left">
                                    <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
                                    <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                                    <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!-- End -->
        </ResourceDictionary>
    </Application.Resources>
</Application>
