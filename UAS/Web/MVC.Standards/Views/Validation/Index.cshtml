@model ValidationDemo.ViewModel.ValidationProto
@{
    ViewBag.Title = "Index";
}
<h2>Index</h2>
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
<script src="~/Scripts/bootstrap.min.js"></script>
@using (Html.BeginForm("Index", "Validation", FormMethod.Post, new { role = "form", id = "myForm", data_toggle = "validator"}))
{
    <div class="text-danger">
        @Html.ValidationSummary()
    </div>
    <div class="error">
        <span></span>
    </div>
    <div class="form-group">
        <label for="inputName" class="control-label">Name</label>
        <input type="text" class="form-control" id="inputName">
    </div>
    <div class="form-group">
        <span class="text-danger">*</span>
        @Html.LabelFor(model => model.LayoutName, new { @class = "control-label" })
        @Html.TextBoxFor(model => model.LayoutName, new
   {
       @class = "form-control",
       type = "text",
       required = "required",
       data_minlength = "5",
       data_required_error = "Please provide Layout Name.",
       data_error = "Layout Name should of minimum 5 character."
   })
        <div class="help-block with-errors"></div>
    </div>
    <div class="form-group">
        <span class="text-danger">*</span>
        @Html.LabelFor(model => model.TemplateID, new { @class = "control-label" })
        @Html.TextBoxFor(model => model.TemplateID, new { @class = "form-control", type = "number", required = "required" })
        <div class="help-block with-errors"></div>

    </div>
    <div class="form-group">
        <span class="text-danger">*</span>
        @Html.LabelFor(model => model.FolderID, new { @class = "control-label" })
        @Html.DropDownListFor(m => m.FolderID, Model.FolderList, "--Select--", new { @class = "form-control", required = "required" })
        <div class="help-block with-errors"></div>

    </div>
    <div class="form-group">
        <span class="text-danger">*</span>
        @Html.Label("Choose Content", new { @class = "control-label" })
        @Html.DropDownListFor(m => m.ContentID, Model.ContentList, "--Select--", new { @class = "form-control", required = "required" })
        <div class="help-block with-errors"></div>
    </div>
    <div class="form-group">
        <span class="text-danger">*</span>
        @Html.LabelFor(model => model.ContentID, new { @class = "control-label" })   <lable id="cntlbl"></lable> <a onclick="showDilogue()">Pick Content</a>
    </div>
    <p>
        <input type="submit" class="btn btn-primary" value="Save" />
    </p>

    <div id="myModal" class="modal fade" role="dialog">
        <div class="modal-dialog" style="width:300px;height:200px;">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <label>Select Content</label>
                </div>
                <div class="modal-body" style="height:150px; overflow-x:scroll;">
                    <div class="form-group">
                        <span class="text-danger">*</span>
                        @Html.Label("Choose Content", new { @class = "control-label" })
                        @Html.DropDownListFor(m => m.ContentID, Model.ContentList, "--Select--", new { @class = "form-control", required = "required" })
                        <div class="help-block with-errors"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@section Scripts
{
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/validator.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/app.js")" type="text/javascript"></script>
}

