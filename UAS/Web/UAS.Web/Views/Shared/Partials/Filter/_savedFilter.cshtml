@model UAS.Web.Models.UAD.Filter.SaveFilterViewModel
<table width="100%" border="0" cellpadding="5" cellspacing="5" style="border: solid 1px #5783BD;margin:0;">
    <tbody>
        <tr style="background-color: #5783BD;">
            <td style="width:100%;padding: 5px; font-size: 20px; color: #ffffff; font-weight: bold" align="center">
               Filters
            </td>
        </tr>
        <tr>
            <td style="width:100%;padding-top:20px;">
                &nbsp;&nbsp;
                @if (!Model.IsCirc)
                {
                    <label class="labelsmall">
                        Most Recent Data
                    </label>
                    <input type="checkbox" id="chkMostRecentData" disabled />
                }
                &nbsp;&nbsp;
                <label class="labelsmall">
                    Show filters created by all users
                </label>
                <input type="checkbox" id="chkShowFilterByAll" onchange="LoadFilterGrid()" />
                &nbsp;&nbsp;
                <label class="labelsmall">
                    Filter Name or Question Name
                </label>
                @(Html.Kendo().DropDownList()
                 .Name("drpSavedFilterSearch")
                 .DataSource(d => d.Read(r => r.Action("GetFilterGridSearchDropDown", "Filter")))
                 .DataTextField("Text")
                 .DataValueField("Value")
                )
                <input type="text" class="k-textbox" id="txtSearchSavedFilter" style="height:30px;" />
                <button onclick="LoadFilterGrid()" style="width:28px;height:28px;background-color:orange;margin:0px;padding:0px;border-radius:5px;text-align:center;border:1px solid orange;">
                    <span class="k-icon k-i-zoom k-i-search"></span>
                </button>

            </td>
        </tr>
        <tr>
            <td style="width:100%;">
                <div>
                    <table style="width:95%;margin:0 2.5%">
                        <tr style="background-color: #5783BD;">
                            <td style="width:30%;background-color: #5783BD;color:#ffffff;">
                                Filter Category
                            </td>
                            <td style="width:70%;background-color: #5783BD;color:#ffffff;">
                                Select Filter
                            </td>
                        </tr>
                        <tr>
                            <td style="width:30%;vertical-align:top;">
                                <div style="height:500px;overflow-x:hidden;overflow-y:scroll;border:1px #5783BD solid;">
                                    @(Html.Kendo().TreeView()
                                    .Name("FilterCategoryTree")
                                    .BindTo(Model.FilterCategoryTree)
                                    )
                                  
                                </div>
                               
                            </td>

                            <td style="width:70%;vertical-align:top;">
                                <div id="gridSavedFilterList" style="height:500px;overflow-x:hidden;overflow-y:scroll;border:1px #5783BD solid;">
                                </div>
                            </td>
                        </tr>
                    </table>
                </div>
               
            </td>
        </tr>
        <tr>
            <td style="width:100%;height:40px;" align="center">
                <input type="button" name="btnLoadSelectedSavedFilter" onclick="LoadSelectedSavedFilter()" value="Load Filter" class="k-button">
                <input type="button" name="btnResetLoadSelected" onclick="ResetLoadSelectedFilter()" value="Close" class="k-button">
            </td>
        </tr>
        
    </tbody>
</table>
<script>
    var currentSelectedNode = 0;
    $(document).ready(function () {
        // configuration of the products service end-point
        LoadFilterGrid(currentSelectedNode);
        $('li.k-item').hover(function () {
            var id = $(this).attr('data-id');
            $(this).children('div').children('span.k-in').attr('data-id', id);
        });
        $('li.k-item div span.k-in').click(function () {
            currentSelectedNode = parseInt($(this).attr('data-id'));
            LoadFilterGrid(currentSelectedNode);
        });
    });

    function GetCheckBoxValue(id) {
        return $('#' + id).is(":checked");
    }
    function LoadFilterGrid(currentnode){
        var allFiltersChecked = $('#chkShowFilterByAll').is(":checked");
        var drpSearch = $("#drpSavedFilterSearch").val();
        var txtsearch = $("#txtSearchSavedFilter").val();
        var viewType =@Html.Raw(Json.Encode(Model.viewType));
        var IsCirc =@Html.Raw(Json.Encode(Model.IsCirc));
        var brandID = IsCirc==true ? 0 : $("#ddlBrand").val();
        var pubID = IsCirc ==true?$("#SelectedProductID").val():0;
        $.ajax({
            type: 'POST',
            url: '/UAS.web/Filter/LoadFilter',
            data:  {
                'allfilters': allFiltersChecked,
                'filtercategory': currentnode?currentnode:0,
                'txtSearch': txtsearch,
                'drpSearch': drpSearch,
                'vwType': viewType,
                'PubID':pubID,
                'BrandID': brandID

            },
            success: function (response) {
                $("#gridSavedFilterList").html(response);
            },
            error: function (response) {

                $("#gridSavedFilterList").html('Failed to load the data');


            }
        });
    }
    function LoadSelectedSavedFilter() {
        LoadFilter();
        CloseWindow("SavedFilterPopUpWindow");
    }
    function ResetLoadSelectedFilter() {
        CloseWindow("SavedFilterPopUpWindow");
    }
    function LoadFilter() {
        var grid = $("#SavedFilterGrid").data("kendoGrid");
        var rows = grid.tbody.find("tr.k-state-selected");

        var source =@Html.Raw(Json.Encode(Model.SourcePage));
        var filterDetails =[];
        $.each(rows, function (i, v) {
            var dr = grid.dataItem(this);
            filterDetails.push({FilterName: dr.Name ,FilterId: dr.FilterId, FilterCategoryName :dr.FilterCategoryName,FilterCategoryID :dr.FilterCategoryID});
        });
        switch(source){
            case "SaveFilterPanel":
                $("#txtSaveFilterName").val(filterDetails[0].FilterName);
                $("#hdnFilterID").val(filterDetails[0].FilterId);
                $("#txtSaveFilterName").val(filterDetails[0].FilterName);
                $("#hdnFilterCategoryID").val(filterDetails[0].FilterCategoryID);
                $("#txtFilterCategory").val(filterDetails[0].FilterCategoryName);
                $("#txtSaveFilterName").prop("readonly", false);
                $("#txtFilterCategory").prop("readonly", false);
                CloseWindow("SavedFilterPopUpWindow");
                break;
            case "Report":
                LoadSavedFilterPanelGrid(filterDetails[0].FilterId, ApplyFilter); //In Report/Index 
                break;
            case "AddKill":
                LoadSavedFilterPanelGrid(filterDetails[0].FilterId, ApplyFilter); //In AddKill/Index
                break;
            case "IssueSplit":
                LoadSavedFilterForReport(filterDetails[0].FilterId,SetFilterDetails); //In Issuesplit/Index
                break;
        }
    }
   
</script>