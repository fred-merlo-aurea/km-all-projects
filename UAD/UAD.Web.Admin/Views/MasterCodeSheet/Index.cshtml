@using UAD.Web.Admin.Infrastructure
@model UAD.Web.Admin.Models.MasterCodeSheets
@{
    ViewBag.Title = "Master Code Sheets";
}
<script>
    var firstGridLoad = true;

    $(document).ready(function () {
        $(window).keydown(function (event) {
            if (event.keyCode == 13) {
                Search();
                event.preventDefault();
                return false;
            }

            //$("#btnUpload").click(function (event) {
            //    alert('test');
            //    if ($("#frmUploadFile").valid()) {
            //        event.preventDefault();
            //        ValidateFileType();
            //    }
            //});

        });

        $.ajax({
            type: 'GET',
            url: '@Url.Action("GetMasterGroups", "CommonMethods")',
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                $("#ddlMasterGroup").empty();
                $.each(data, function (index, item) {
                    $('#ddlMasterGroup').append($('<option></option>').val(item.Value).html(item.Text));
                });
                if (@Model.MasterGroupID == 0)
                    $('#ddlMasterGroup').val("");
                else
                    $('#ddlMasterGroup').val(@Model.MasterGroupID);
                var data = filterGridParams();
                ReBindGrid(data);
            },
            error: function (data) {
                console.log(data);
                alert("An error has occured!!!");
            }
        });

        $("#ddlMasterGroup").on("change", function (e) {
            if($("#ddlMasterGroup").val() != "" || $("#ddlMasterGroup").val() >0)
            {
                $("#alertDiv").hide();
                SetPagerWidget("firstpage");
                firstGridLoad = true;
                var data = filterGridParams();
                ReBindGrid(data);
            }
            else{
                $("#grdMasterCodeSheet").data("kendoGrid").dataSource.data([ ]);
                SetPagerWidget("0");
            }
        });

        $('#btnNewMasterCodeSheet').click(function () {
            window.location = '@Url.Action("AddEdit", "MasterCodeSheet", new { masterGroupID = "temp"})'.replace("temp", $("#ddlMasterGroup").val());
        });

        $("#ddPageSize").kendoDropDownList({
            dataTextField: "text",
            dataValueField: "value",
            value: 10,
            dataSource: [
              { text: "5", value: "5" },
              { text: "10", value: "10" },
              { text: "15", value: "15" },
              { text: "20", value: "20" }
            ]
        });

        //Enents -Page number input changed.
        $("#pagerInputPageNumber").on("change", function (e) {
            RebindOnPageOrSizeChange()
        });

        //Events - Page Size input changed
        $("#ddPageSize").on("change", function (e) {
            RebindOnPageOrSizeChange()
        });
    });

    function onDataBound(arg) {
        if (firstGridLoad) {
            firstGridLoad = false;
            SetPagerWidget("firstpage");
        }

        this.element.find("[role='gridcell']").each(function () {
            eval($(this).children("script").html());
        });
    }

    //Events - When First , Lats Previous and Next Buttons clicked on Pager.
    function GoToPage(e) {
        SetPagerWidget(e.target.id);
        var data = filterGridParams();
        ReBindGrid(data)
    }

    //Events - Triggers the Search using Search Criteria
    function Search() {
        if($("#ddlMasterGroup").val() != "" || $("#ddlMasterGroup").val() >0)
        {
            $("#alertDiv").hide();
            SetPagerWidget("firstpage");
            firstGridLoad = true;
            var data = filterGridParams();
            ReBindGrid(data);
        }
        else {
            $("#alertMsg").html("Please select master group.");
            $("#alertDiv").show();
        }
    }

    //Rebinds the Grid with data sends with DataSourceRequest
    function ReBindGrid(obj) {
        if($("#ddlMasterGroup").val() != "" || $("#ddlMasterGroup").val() >0)
        {
            var grid = $("#grdMasterCodeSheet").data("kendoGrid");
            var options = grid.getOptions();
            var dataSource = new kendo.data.DataSource({
                transport: {
                    read: {
                        url: '@Url.Action("GetMasterCodeSheetData", "MasterCodeSheet")',
                        dataType: "json",
                        data: obj
                    }
                }
            })
            options.dataSource.data = dataSource.data;
            options.dataSource.pageSize = obj.PageSize;
            grid.setOptions(options);
            grid.dataSource.read();
        }
    }

    function filterGridParams() {
        if($("#ddlMasterGroup").val() == "") {
            var masterGroupID = 0 }
        else {
            var masterGroupID = $("#ddlMasterGroup").val()};
        return {
            MasterGroupID: masterGroupID,
            Name: $("#Name").val(),
            SearchCriteria: $("#ddlSearchCriteria").val(),
            PageNumber: $("#pagerInputPageNumber").val(),
            PageSize: $("#ddPageSize").val()
        };
    }

    //Function - Rebinds the Grid on Page Number input chnaged or Page size changed
    function RebindOnPageOrSizeChange() {
        if (parseInt($("#pagerInputPageNumber").val()) > 0 && !isNaN(parseInt($("#pagerInputPageNumber").val())) && $("#pagerInputPageNumber").val() <= parseInt($("#pagerTotalItems").text())) {
            SetPagerWidget($("#pagerInputPageNumber").val());
            var data = filterGridParams();
            ReBindGrid(data);
        }
        else {
            showMessage({
                type: 'Error',
                text: 'Please enter valid page number.',
                autoClose: false
            });
        }
    }

    //This drives the server side paging by getting current page and setting all Pager messages
    function SetPagerWidget(id) {
        var totalrecordCount = 0;
        var grid = $("#grdMasterCodeSheet").data("kendoGrid");
        if (grid.dataSource.view()[0]) {
            totalrecordCount = parseInt(grid.dataSource.view()[0].TotalRecordCounts);
        }
        var pagesize = parseInt($("#ddPageSize").val());
        var currentpage = parseInt($("#pagerInputPageNumber").val());

        if (totalrecordCount % pagesize == 0){
            var lastpage = parseInt(totalrecordCount / pagesize);
        }
        else{
            var lastpage = parseInt(totalrecordCount / pagesize) + 1;
        }

        var firstpage = 1;

        if (id == "firstpage") {
            if (currentpage == firstpage)
                currentpage = currentpage;
            else {
                currentpage = firstpage;

            }
        }
        else if (id == "prevpage") {
            if (currentpage == firstpage)
                currentpage = currentpage;
            else
                currentpage = currentpage - 1;
        }
        else if (id == "nextpage") {
            if (currentpage == lastpage)
                currentpage = currentpage;
            else
                currentpage = currentpage + 1;

        }
        else if (id == "lastpage") {
            if (currentpage == lastpage)
                currentpage = currentpage;
            else
                currentpage = lastpage;

        }
        else {
            currentpage = parseInt(id);
        }

        if(currentpage == 0 ){
            var start = 0;
        }
        else{
            var start = ((currentpage - 1) * pagesize + 1);
        }

        if (start > totalrecordCount)
        {
            currentpage = 1;
            start = 1;
        }

        var end = (currentpage * pagesize) < totalrecordCount ? (currentpage * pagesize) : totalrecordCount;
        var displaymessage = start + " - " + end + " of " + totalrecordCount + " items";
        $("#currentpage").text(currentpage);
        $("#pagerDisplay").text(displaymessage);
        $("#pagerTotalItems").text(lastpage);
        $("#pagerInputPageNumber").val(currentpage);
    }

    function checkChange(e) {
        RebindOnPageOrSizeChange()
    }

    function Reset() {
        $("#alertDiv").hide();
        $('#ddlMasterGroup').val("");
        $("#Name").val('');
        $("#ddlSearchCriteria").val('starts');
        $("#grdMasterCodeSheet").data("kendoGrid").dataSource.data([ ]);
        SetPagerWidget("0");
     }

    function showDeleteAlert(id) {
        var data = {
            id: id,
            masterGroupID: $("#ddlMasterGroup").val()
        }
        showMessage({
            type: '@ECN_Framework_Common.Objects.Communicator.Enums.MessageType.Confirm',
            text: 'Are you sure you want to delete Master Code Sheet. It will delete all Master Code Sheet data?',
            autoClose: false,
            IsOpen: false,
            action: deleteMasterCodeSheet,
            data: data,
        });
        return false;
    }

    function deleteMasterCodeSheet(values) {
        $.ajax({
            type: 'GET',
            url: '@Url.Action("Delete", "MasterCodeSheet")',
            data: {id: values.id},
            contentType: "application/json; charset=utf-8",
            success: function (response) {
                var result = JSON.parse(response);
                if (result.Success) {
                    $("#alertDiv").hide();
                    var data = {
                        type: '@ECN_Framework_Common.Objects.Communicator.Enums.MessageType.Success',
                        text: result.Text,
                        autoClose: false,
                        action: RedirectPage,
                        IsOpen: false
                    }
                    showMessage(data);
                }
                else
                {
                    $("#alertMsg").html(result.Text);
                    $("#alertDiv").show();
                }
            },
            error: function (data) {
                console.log(data);
                alert("An error has occured!!!");
            }
        });

        var RedirectPage = function () {
            window.location = '@Url.Action("Index", "MasterCodeSheet", new { id = "temp"})'.replace("temp", $("#ddlMasterGroup").val());
        }
    }

    function checkfile(sender) {
        event.preventDefault();
        ValidateFileType();
    }

    var ValidateFileType=function() {
        //event.preventDefault();
        
        var extFile = $('input[type=file]').val().split('.').pop().toUpperCase();

        if (extFile=="CSV"){

            //var formData = new FormData();
            //var totalFiles = document.getElementById("file").files.length;
            //var has_selected_file = $('#file').filter(function () {
            //    return $.trim(this.value) != ''
            //}).length > 0;

            //if (has_selected_file == true) {
            //    for (var i = 0; i < totalFiles; i++) {
            //        var file = document.getElementById("FileUpload").files[i];

            //        formData.append("FileUpload", file);
            //    }
            //}
            //    formData.append("UserName", "Jason");
                

            var uploadData =  new FormData($('input[type=file]')[0].files[0]);
            alert('es');
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("Import", "MasterCodeSheet")',
                    data: uploadData,
                    processData: false,
                    contentType: application/x-www-form-urlencoded,
                    traditional: true,
                    success: function (response) {
                        var result = JSON.parse(response);
                        if (result.Success) {
                            $("#alertDiv").hide();
                            var data = {
                                type: '@ECN_Framework_Common.Objects.Communicator.Enums.MessageType.Success',
                                text: result.Text,
                                autoClose: false,
                                IsOpen: false
                            }
                            showMessage(data);
                        }
                        else
                        {
                            $("#alertMsg").html(result.Text);
                            $("#alertDiv").show();
                        }
                    },
                    error: function (data) {
                        console.log(data);
                        alert("An error has occured!!!");
                    }
                });
            }else{
                event.preventDefault();
                alert('pef');
                $("#alertMsg").html("Only csv files are allowed.");
                $("#alertDiv").show();
            }   
        }
</script>
<style>
    a:link, a:visited, a:active, a:hover {
        color: #115fa9;
    }
</style>
<div class="gridttl">
    <div class="gridttlbox">
        <span>@ViewBag.Title</span>
    </div>
</div>
<div>
    <table style="width:100%">
        <tr>
            <td>
                <div id="alertDiv" style="display:none;color:red;margin:5px 0 0 0;">
                    <span><img src='@Url.Content("~/Images/Notifications/Error_New.png")' style="margin:0px;padding:0px;" /></span>
                    <span id="alertMsg" class="message-error"></span>
                </div>
            </td>
        </tr>
    </table>
    <div id="SearchPanel" style="margin:20px auto;">
        <table width="100%" cellspacing="0" cellpadding="0">
            <tr>
                <td width="60%">
                    <span style="margin:20px">
                        <span style="color:red">*</span><label class="control-label">Master Group:</label>
                        @Html.DropDownListFor(e => e.MasterGroupID, new SelectList(string.Empty, "Value", "Text"), new { id = "ddlMasterGroup", style = "width:450px" })
                    </span>
                </td>
                <td align="right">
                    @using (Html.BeginForm("Import", "MasterCodeSheet", FormMethod.Post, new { id = "frmUploadFile", enctype = "multipart/form-data", onsubmit = "javascript:return checkfile(document.getElementById('uploadFile'))" }))
                    {
                        <input type="file" name="uploadFile" accept=".csv"  style="display:inline"/>
                        <input type="submit" class="btn-blue2" value="Upload CSV " id="btnUpload" />
                    }
                </td>
            </tr>
            <tr>
                <td>
                    <span style="margin:20px">
                        <label class="control-label">Value or Description:</label>
                        @Html.DropDownList("ddlSearchCriteria", new List<SelectListItem>
                        {
                        new SelectListItem { Text = "starts with", Value = "starts" },
                        new SelectListItem { Text = "contains", Value = "like" },
                        new SelectListItem { Text = "equals", Value = "equals" },
                        new SelectListItem { Text = "ends with", Value = "ends" }
                        })
                        @Html.Kendo().TextBox().Name("Name").HtmlAttributes(new { style = "overflow: hidden; width:40%" })
                        <input type="button" class="btn-blue2" value="Search" id="search" onclick="Search()" />
                        <input type="button" class="btn-blue2" value="Reset" id="reset" onclick="Reset()" />
                    </span>
                </td>
                <td>
                    @Html.Kendo().Button().Name("Addbb").Content("Add Master Code Sheet<i class='km-icon icon-kmplus-circled-1'></i>").HtmlAttributes(new { type = "button", id = "btnNewMasterCodeSheet", @class = "btn-blue2 float-right" })
                </td>
            </tr>
        </table>
</div>
    <div id="divShowResults" style="margin: 20px 10px 10px 10px;">

    </div>
    <div id="grid">
        @(
        Html.Kendo()
        .Grid<UAD.Web.Admin.Models.MasterCodeSheets>
            ()
            .Name("grdMasterCodeSheet")
            .Events(e => e.DataBound("onDataBound"))
            .Columns(columns =>
            {
            columns.Bound(p => p.TotalRecordCounts).Hidden(true);
            columns.Bound(e => e.MasterValue).Title("Value").HtmlAttributes(new { @style = "vertical-align:middle;" });
            columns.Bound(e => e.MasterDesc).Title("Description").HtmlAttributes(new { @style = "vertical-align:middle" });
            columns.Bound(e => e.MasterDesc1).Title("Description 1").HtmlAttributes(new { @style = "vertical-align:middle" });
            columns.Bound(e => e.EnableSearching).ClientTemplate(
            "# if (EnableSearching == true) { #" +
            "yes" +
            "# } else { #" +
            "No" +
            "# } #"
            ).Title("Enable Searching").HtmlAttributes(new { @style = "vertical-align:middle; text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center" });
            columns.Bound(p => p).ClientTemplate(GetActions("grdMasterCodeSheet").ToString()).Width(100).Filterable(false).Sortable(false);
            })
            .Sortable(sortable => sortable.SortMode(GridSortMode.SingleColumn).AllowUnsort(false))//Sort Based on Single column at a time, you can cnfigure allow for unsorting
            .Pageable(page => page.Enabled(false))
            .Filterable(filter => filter.Enabled(false))
            .AutoBind(false)
            .DataSource(dataSource => dataSource // Configure the grid data source
            .Ajax() // Specify that ajax binding is used
            .Model(m =>
            {
            m.Id(y => y.MasterID);
            })
            .Read(read => read.Data("filterGridParams").Action("GetMasterCodeSheetData", "MasterCodeSheet"))// Set the action method which will return the data in JSON format
            .ServerOperation(true) //Get Data from Server
            ))
    </div>
    <div id="serverGrid">
        @Html.Partial("Partials/_ServerGridPager")
    </div>
</div>
<br /><br />
@helper  GetActions(string name)
{
    @(Html.Kendo()
            .Menu()
            .Name("Menu#=MasterID#")
            .Direction(MenuDirection.Right)
            .Orientation(MenuOrientation.Vertical)
            .Animation(false)
            .Items(
                items => items.Add().Text("Actions").HtmlAttributes(new { @class = "k-menu-actions" }).Items(
                    innerItems =>
                    {
                        innerItems.Add().Text("").HtmlAttributes(new { style = "display:none;" });
                        innerItems.Add().Text("Edit")
                            .Action("AddEdit", "MasterCodeSheet", new { id = "#=MasterID#" })
                            .HtmlAttributes(new { onclick = "showLoadingMessage()" });
                        innerItems.Add().Text("Delete").HtmlAttributes(new { onclick = "showDeleteAlert(id)", id = "#=MasterID#" });
                        innerItems.Add().Text("Responses").HtmlAttributes(new { onclick = "showResponses(id)", id = "#=MasterID#" });
                    }
                )
            ).ToClientTemplate())
}