//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace EmailPreview.LitmusAPI {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="LitmusSoapApiSoap", Namespace="https://soapapi.litmusapp.com/")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SpamHeader))]
    public partial class LitmusSoapApi : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetEmailTestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPageTestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPageTestClientsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePageTestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmailTestClientsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateEmailTestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSpamSeedAddressesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResultOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public LitmusSoapApi() {
            this.Url = global::EmailPreview.Properties.Settings.Default.EmailPreview_LitmusAPI_LitmusSoapApi;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetEmailTestCompletedEventHandler GetEmailTestCompleted;
        
        /// <remarks/>
        public event GetPageTestCompletedEventHandler GetPageTestCompleted;
        
        /// <remarks/>
        public event GetPageTestClientsCompletedEventHandler GetPageTestClientsCompleted;
        
        /// <remarks/>
        public event CreatePageTestCompletedEventHandler CreatePageTestCompleted;
        
        /// <remarks/>
        public event GetEmailTestClientsCompletedEventHandler GetEmailTestClientsCompleted;
        
        /// <remarks/>
        public event CreateEmailTestCompletedEventHandler CreateEmailTestCompleted;
        
        /// <remarks/>
        public event GetSpamSeedAddressesCompletedEventHandler GetSpamSeedAddressesCompleted;
        
        /// <remarks/>
        public event GetResultCompletedEventHandler GetResultCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("GetEmailTest", RequestNamespace="https://soapapi.litmusapp.com/", ResponseNamespace="https://soapapi.litmusapp.com/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public EmailTest GetEmailTest(string apiKey, string apiPass, int emailTestID) {
            object[] results = this.Invoke("GetEmailTest", new object[] {
                        apiKey,
                        apiPass,
                        emailTestID});
            return ((EmailTest)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmailTestAsync(string apiKey, string apiPass, int emailTestID) {
            this.GetEmailTestAsync(apiKey, apiPass, emailTestID, null);
        }
        
        /// <remarks/>
        public void GetEmailTestAsync(string apiKey, string apiPass, int emailTestID, object userState) {
            if ((this.GetEmailTestOperationCompleted == null)) {
                this.GetEmailTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmailTestOperationCompleted);
            }
            this.InvokeAsync("GetEmailTest", new object[] {
                        apiKey,
                        apiPass,
                        emailTestID}, this.GetEmailTestOperationCompleted, userState);
        }
        
        private void OnGetEmailTestOperationCompleted(object arg) {
            if ((this.GetEmailTestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmailTestCompleted(this, new GetEmailTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("GetPageTest", RequestNamespace="https://soapapi.litmusapp.com/", ResponseNamespace="https://soapapi.litmusapp.com/")]
        public PageTest GetPageTest(string apiKey, string apiPass, int pageTestID) {
            object[] results = this.Invoke("GetPageTest", new object[] {
                        apiKey,
                        apiPass,
                        pageTestID});
            return ((PageTest)(results[0]));
        }
        
        /// <remarks/>
        public void GetPageTestAsync(string apiKey, string apiPass, int pageTestID) {
            this.GetPageTestAsync(apiKey, apiPass, pageTestID, null);
        }
        
        /// <remarks/>
        public void GetPageTestAsync(string apiKey, string apiPass, int pageTestID, object userState) {
            if ((this.GetPageTestOperationCompleted == null)) {
                this.GetPageTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPageTestOperationCompleted);
            }
            this.InvokeAsync("GetPageTest", new object[] {
                        apiKey,
                        apiPass,
                        pageTestID}, this.GetPageTestOperationCompleted, userState);
        }
        
        private void OnGetPageTestOperationCompleted(object arg) {
            if ((this.GetPageTestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPageTestCompleted(this, new GetPageTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("GetPageTestClients", RequestNamespace="https://soapapi.litmusapp.com/", ResponseNamespace="https://soapapi.litmusapp.com/")]
        public Client[] GetPageTestClients(string apiKey, string apiPass) {
            object[] results = this.Invoke("GetPageTestClients", new object[] {
                        apiKey,
                        apiPass});
            return ((Client[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPageTestClientsAsync(string apiKey, string apiPass) {
            this.GetPageTestClientsAsync(apiKey, apiPass, null);
        }
        
        /// <remarks/>
        public void GetPageTestClientsAsync(string apiKey, string apiPass, object userState) {
            if ((this.GetPageTestClientsOperationCompleted == null)) {
                this.GetPageTestClientsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPageTestClientsOperationCompleted);
            }
            this.InvokeAsync("GetPageTestClients", new object[] {
                        apiKey,
                        apiPass}, this.GetPageTestClientsOperationCompleted, userState);
        }
        
        private void OnGetPageTestClientsOperationCompleted(object arg) {
            if ((this.GetPageTestClientsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPageTestClientsCompleted(this, new GetPageTestClientsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("CreatePageTest", RequestNamespace="https://soapapi.litmusapp.com/", ResponseNamespace="https://soapapi.litmusapp.com/")]
        public PageTest CreatePageTest(string apiKey, string apiPass, PageTest pageTest) {
            object[] results = this.Invoke("CreatePageTest", new object[] {
                        apiKey,
                        apiPass,
                        pageTest});
            return ((PageTest)(results[0]));
        }
        
        /// <remarks/>
        public void CreatePageTestAsync(string apiKey, string apiPass, PageTest pageTest) {
            this.CreatePageTestAsync(apiKey, apiPass, pageTest, null);
        }
        
        /// <remarks/>
        public void CreatePageTestAsync(string apiKey, string apiPass, PageTest pageTest, object userState) {
            if ((this.CreatePageTestOperationCompleted == null)) {
                this.CreatePageTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePageTestOperationCompleted);
            }
            this.InvokeAsync("CreatePageTest", new object[] {
                        apiKey,
                        apiPass,
                        pageTest}, this.CreatePageTestOperationCompleted, userState);
        }
        
        private void OnCreatePageTestOperationCompleted(object arg) {
            if ((this.CreatePageTestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePageTestCompleted(this, new CreatePageTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("GetEmailTestClients", RequestNamespace="https://soapapi.litmusapp.com/", ResponseNamespace="https://soapapi.litmusapp.com/")]
        public Client[] GetEmailTestClients(string apiKey, string apiPass) {
            object[] results = this.Invoke("GetEmailTestClients", new object[] {
                        apiKey,
                        apiPass});
            return ((Client[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEmailTestClientsAsync(string apiKey, string apiPass) {
            this.GetEmailTestClientsAsync(apiKey, apiPass, null);
        }
        
        /// <remarks/>
        public void GetEmailTestClientsAsync(string apiKey, string apiPass, object userState) {
            if ((this.GetEmailTestClientsOperationCompleted == null)) {
                this.GetEmailTestClientsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmailTestClientsOperationCompleted);
            }
            this.InvokeAsync("GetEmailTestClients", new object[] {
                        apiKey,
                        apiPass}, this.GetEmailTestClientsOperationCompleted, userState);
        }
        
        private void OnGetEmailTestClientsOperationCompleted(object arg) {
            if ((this.GetEmailTestClientsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmailTestClientsCompleted(this, new GetEmailTestClientsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("CreateEmailTest", RequestNamespace="https://soapapi.litmusapp.com/", ResponseNamespace="https://soapapi.litmusapp.com/")]
        public EmailTest CreateEmailTest(string apiKey, string apiPass, EmailTest emailTest) {
            object[] results = this.Invoke("CreateEmailTest", new object[] {
                        apiKey,
                        apiPass,
                        emailTest});
            return ((EmailTest)(results[0]));
        }
        
        /// <remarks/>
        public void CreateEmailTestAsync(string apiKey, string apiPass, EmailTest emailTest) {
            this.CreateEmailTestAsync(apiKey, apiPass, emailTest, null);
        }
        
        /// <remarks/>
        public void CreateEmailTestAsync(string apiKey, string apiPass, EmailTest emailTest, object userState) {
            if ((this.CreateEmailTestOperationCompleted == null)) {
                this.CreateEmailTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateEmailTestOperationCompleted);
            }
            this.InvokeAsync("CreateEmailTest", new object[] {
                        apiKey,
                        apiPass,
                        emailTest}, this.CreateEmailTestOperationCompleted, userState);
        }
        
        private void OnCreateEmailTestOperationCompleted(object arg) {
            if ((this.CreateEmailTestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateEmailTestCompleted(this, new CreateEmailTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("GetSpamSeedAddresses", RequestNamespace="https://soapapi.litmusapp.com/", ResponseNamespace="https://soapapi.litmusapp.com/")]
        public string[] GetSpamSeedAddresses(string apiKey, string apiPass) {
            object[] results = this.Invoke("GetSpamSeedAddresses", new object[] {
                        apiKey,
                        apiPass});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSpamSeedAddressesAsync(string apiKey, string apiPass) {
            this.GetSpamSeedAddressesAsync(apiKey, apiPass, null);
        }
        
        /// <remarks/>
        public void GetSpamSeedAddressesAsync(string apiKey, string apiPass, object userState) {
            if ((this.GetSpamSeedAddressesOperationCompleted == null)) {
                this.GetSpamSeedAddressesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSpamSeedAddressesOperationCompleted);
            }
            this.InvokeAsync("GetSpamSeedAddresses", new object[] {
                        apiKey,
                        apiPass}, this.GetSpamSeedAddressesOperationCompleted, userState);
        }
        
        private void OnGetSpamSeedAddressesOperationCompleted(object arg) {
            if ((this.GetSpamSeedAddressesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSpamSeedAddressesCompleted(this, new GetSpamSeedAddressesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("GetResult", RequestNamespace="https://soapapi.litmusapp.com/", ResponseNamespace="https://soapapi.litmusapp.com/")]
        public Client GetResult(string apiKey, string apiPass, int resultId) {
            object[] results = this.Invoke("GetResult", new object[] {
                        apiKey,
                        apiPass,
                        resultId});
            return ((Client)(results[0]));
        }
        
        /// <remarks/>
        public void GetResultAsync(string apiKey, string apiPass, int resultId) {
            this.GetResultAsync(apiKey, apiPass, resultId, null);
        }
        
        /// <remarks/>
        public void GetResultAsync(string apiKey, string apiPass, int resultId, object userState) {
            if ((this.GetResultOperationCompleted == null)) {
                this.GetResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResultOperationCompleted);
            }
            this.InvokeAsync("GetResult", new object[] {
                        apiKey,
                        apiPass,
                        resultId}, this.GetResultOperationCompleted, userState);
        }
        
        private void OnGetResultOperationCompleted(object arg) {
            if ((this.GetResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResultCompleted(this, new GetResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="https://soapapi.litmusapp.com/encodedTypes")]
    public partial class EmailTest {
        
        private Client[] resultsField;
        
        private string stateField;
        
        private string inboxGUIDField;
        
        private System.Nullable<int> idField;
        
        private string sourceField;
        
        private string subjectField;
        
        private string htmlField;
        
        private string zipFileField;
        
        private string testTypeField;
        
        private System.Nullable<bool> sandboxField;
        
        private string userGuidField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public Client[] Results {
            get {
                return this.resultsField;
            }
            set {
                this.resultsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string InboxGUID {
            get {
                return this.inboxGUIDField;
            }
            set {
                this.inboxGUIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string Source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string Html {
            get {
                return this.htmlField;
            }
            set {
                this.htmlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string ZipFile {
            get {
                return this.zipFileField;
            }
            set {
                this.zipFileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string TestType {
            get {
                return this.testTypeField;
            }
            set {
                this.testTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<bool> Sandbox {
            get {
                return this.sandboxField;
            }
            set {
                this.sandboxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string UserGuid {
            get {
                return this.userGuidField;
            }
            set {
                this.userGuidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="https://soapapi.litmusapp.com/encodedTypes")]
    public partial class Client {
        
        private string stateField;
        
        private string windowImageContentBlockingField;
        
        private string fullpageImageThumbField;
        
        private System.Nullable<bool> businessOrPopularField;
        
        private string windowImageThumbNoContentBlockingField;
        
        private System.Nullable<bool> completedField;
        
        private string fullpageImageField;
        
        private System.Nullable<bool> foundInSpamField;
        
        private System.Nullable<int> statusField;
        
        private string windowImageNoContentBlockingField;
        
        private string platformNameField;
        
        private System.Nullable<int> averageTimeToProcessField;
        
        private SpamHeader[] spamHeadersField;
        
        private string windowImageThumbField;
        
        private string renderedHtmlUrlField;
        
        private string platformLongNameField;
        
        private string fullpageImageThumbContentBlockingField;
        
        private string windowImageField;
        
        private string fullpageImageContentBlockingField;
        
        private System.Nullable<bool> supportsContentBlockingField;
        
        private string applicationNameField;
        
        private string fullpageImageThumbNoContentBlockingField;
        
        private System.Nullable<double> spamScoreField;
        
        private System.Nullable<bool> desktopClientField;
        
        private string windowImageThumbContentBlockingField;
        
        private int idField;
        
        private string resultTypeField;
        
        private string fullpageImageNoContentBlockingField;
        
        private string applicationLongNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string WindowImageContentBlocking {
            get {
                return this.windowImageContentBlockingField;
            }
            set {
                this.windowImageContentBlockingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string FullpageImageThumb {
            get {
                return this.fullpageImageThumbField;
            }
            set {
                this.fullpageImageThumbField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<bool> BusinessOrPopular {
            get {
                return this.businessOrPopularField;
            }
            set {
                this.businessOrPopularField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string WindowImageThumbNoContentBlocking {
            get {
                return this.windowImageThumbNoContentBlockingField;
            }
            set {
                this.windowImageThumbNoContentBlockingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<bool> Completed {
            get {
                return this.completedField;
            }
            set {
                this.completedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string FullpageImage {
            get {
                return this.fullpageImageField;
            }
            set {
                this.fullpageImageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<bool> FoundInSpam {
            get {
                return this.foundInSpamField;
            }
            set {
                this.foundInSpamField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string WindowImageNoContentBlocking {
            get {
                return this.windowImageNoContentBlockingField;
            }
            set {
                this.windowImageNoContentBlockingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string PlatformName {
            get {
                return this.platformNameField;
            }
            set {
                this.platformNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> AverageTimeToProcess {
            get {
                return this.averageTimeToProcessField;
            }
            set {
                this.averageTimeToProcessField = value;
            }
        }
        
        /// <remarks/>
        public SpamHeader[] SpamHeaders {
            get {
                return this.spamHeadersField;
            }
            set {
                this.spamHeadersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string WindowImageThumb {
            get {
                return this.windowImageThumbField;
            }
            set {
                this.windowImageThumbField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string RenderedHtmlUrl {
            get {
                return this.renderedHtmlUrlField;
            }
            set {
                this.renderedHtmlUrlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string PlatformLongName {
            get {
                return this.platformLongNameField;
            }
            set {
                this.platformLongNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string FullpageImageThumbContentBlocking {
            get {
                return this.fullpageImageThumbContentBlockingField;
            }
            set {
                this.fullpageImageThumbContentBlockingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string WindowImage {
            get {
                return this.windowImageField;
            }
            set {
                this.windowImageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string FullpageImageContentBlocking {
            get {
                return this.fullpageImageContentBlockingField;
            }
            set {
                this.fullpageImageContentBlockingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<bool> SupportsContentBlocking {
            get {
                return this.supportsContentBlockingField;
            }
            set {
                this.supportsContentBlockingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string ApplicationName {
            get {
                return this.applicationNameField;
            }
            set {
                this.applicationNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string FullpageImageThumbNoContentBlocking {
            get {
                return this.fullpageImageThumbNoContentBlockingField;
            }
            set {
                this.fullpageImageThumbNoContentBlockingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<double> SpamScore {
            get {
                return this.spamScoreField;
            }
            set {
                this.spamScoreField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<bool> DesktopClient {
            get {
                return this.desktopClientField;
            }
            set {
                this.desktopClientField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string WindowImageThumbContentBlocking {
            get {
                return this.windowImageThumbContentBlockingField;
            }
            set {
                this.windowImageThumbContentBlockingField = value;
            }
        }
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string ResultType {
            get {
                return this.resultTypeField;
            }
            set {
                this.resultTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string FullpageImageNoContentBlocking {
            get {
                return this.fullpageImageNoContentBlockingField;
            }
            set {
                this.fullpageImageNoContentBlockingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string ApplicationLongName {
            get {
                return this.applicationLongNameField;
            }
            set {
                this.applicationLongNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="https://soapapi.litmusapp.com/encodedTypes")]
    public partial class SpamHeader {
        
        private string keyField;
        
        private int idField;
        
        private string descriptionField;
        
        private System.Nullable<int> ratingField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> Rating {
            get {
                return this.ratingField;
            }
            set {
                this.ratingField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="https://soapapi.litmusapp.com/encodedTypes")]
    public partial class PageTest {
        
        private Client[] resultsField;
        
        private string stateField;
        
        private int idField;
        
        private string titleField;
        
        private string uRLField;
        
        private string testTypeField;
        
        private bool sandboxField;
        
        private string userGuidField;
        
        /// <remarks/>
        public Client[] Results {
            get {
                return this.resultsField;
            }
            set {
                this.resultsField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
        
        /// <remarks/>
        public string TestType {
            get {
                return this.testTypeField;
            }
            set {
                this.testTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool Sandbox {
            get {
                return this.sandboxField;
            }
            set {
                this.sandboxField = value;
            }
        }
        
        /// <remarks/>
        public string UserGuid {
            get {
                return this.userGuidField;
            }
            set {
                this.userGuidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetEmailTestCompletedEventHandler(object sender, GetEmailTestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmailTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmailTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmailTest Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmailTest)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetPageTestCompletedEventHandler(object sender, GetPageTestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPageTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPageTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PageTest Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PageTest)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetPageTestClientsCompletedEventHandler(object sender, GetPageTestClientsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPageTestClientsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPageTestClientsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Client[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Client[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CreatePageTestCompletedEventHandler(object sender, CreatePageTestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatePageTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatePageTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PageTest Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PageTest)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetEmailTestClientsCompletedEventHandler(object sender, GetEmailTestClientsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmailTestClientsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmailTestClientsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Client[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Client[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CreateEmailTestCompletedEventHandler(object sender, CreateEmailTestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateEmailTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateEmailTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmailTest Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmailTest)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetSpamSeedAddressesCompletedEventHandler(object sender, GetSpamSeedAddressesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSpamSeedAddressesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSpamSeedAddressesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetResultCompletedEventHandler(object sender, GetResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Client)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591