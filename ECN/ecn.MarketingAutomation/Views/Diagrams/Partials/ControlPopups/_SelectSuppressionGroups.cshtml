<script>
    var selectedClass = 'k-state-selected';

    function GroupExplorerMultiSuppression(options) {
        this.select = options.select;
        this.customerID = options.customerID;
        this.open = function () {
            var window = $("#GroupsSupExplorer").data("kendoWindow");
            window.center().open();
        };
        this.close = function () {
            var window = $("#GroupsSupExplorer").data("kendoWindow");
            window.close();
        };

    }

    function bindSuppressionFolders()
    {
        var GroupsSup_Folders = {
            schema: {
                model: {
                    id: "FolderID",
                    FolderID: "FolderID",
                    CustomerID: "CustomerID",
                    FolderName: "FolderName"
                }
            },
            transport: {
                read: {
                    url: '@Url.Action("GetFolders", "Web")?customerId=' + explorer.customerID,
                    async:false,
                    data: function (data) {
                        data.CustomerID = explorer.customerID;
                        data.Type = "GRP";
                    }
                }
            }
        };

        var Groups_Customer = new kendo.data.HierarchicalDataSource({
            transport: {
                read: {
                    url: '@Url.Action("GetSingleCustomer", "Web")?customerID=' + explorer.customerID,
                    async:false
                }
            },
            schema: {
                model: {
                    id: 0,
                    FolderID: 0,
                    children: GroupsSup_Folders,
                    hasChildren: true
                }
            }
        });

        var treeview = $("#GroupsSup_Folders").kendoTreeView({
            dataSource: Groups_Customer,
            dataTextField: ["CustomerName", "FolderName"],
            loadOnDemand: true,
            autoBind: false,
            expand: function (e) {
                expandedItem = this.dataItem(e.node);
            },
            select: function (e) {
                var tree = $('#GroupsSup_Folders').data('kendoTreeView');
                var dataItem = tree.dataItem(e.node);
                var searchString = $("#supGroups_searchInput").val();
                $('#AvailableSupGroups').empty();
                $.ajax({
                    async: false,
                    type: 'POST',
                    url: '/ecn.MarketingAutomation/Web/GetGroups',
                    data: {
                        customerId: dataItem.CustomerID,
                        folderId: dataItem.FolderID,
                        search: searchString,
                        allFolders: false
                    },
                    success: function (response) {
                        var itemlist = '';
                        $.each(response, function (i, inputItem) {
                            var s = inputItem;
                            if ($("#" + inputItem.GroupID + "_" + inputItem.FolderID).length == 0) {
                                itemlist += '<li id="' + inputItem.GroupID + "_" + inputItem.FolderID + '" >' + inputItem.GroupName + '</li>';
                            }
                        });
                        $('#AvailableSupGroups').append(itemlist);
                    }
                });

            }
        }).data('kendoTreeView');
    }

    function bindSuppressionGroups()
    {
        var tv = $("#GroupsSup_Folders").data("kendoTreeView");
        var selectedFolder = tv.dataItem(tv.select());
        if (selectedFolder === 'undefined')
            selectedFolder = '0';
        var searchString = $("#supGroups_searchInput").val();
        var allFolders = $("#Suppression_allFoldersCB").is(':checked');
    }

    function bindSelectedSuppressionGroups()
    {
          $('#AvailableSupGroups').empty();
          $('#SelectedSupGroups').empty();
          if (Campaign_SelectedSuppressionGroups != null) {
            var itemlist = '';
            for (var g = 0; g < Campaign_SelectedSuppressionGroups.length; g++) {
                var grp = Campaign_SelectedSuppressionGroups[g];
                itemlist += '<li id="' + grp.GroupID + "_" + grp.FolderID + '" >' + grp.GroupName + '</li>';
            }
            $('#SelectedSupGroups').append(itemlist);
        }
    }

    var explorer;
    var _customerID;
    function groupExplorerMultiSuppression(select, customerID) {
        explorer = new GroupExplorerMultiSuppression({
            select: select,
            customerID: customerID,
        });
        _customerID = customerID;
        explorer.open();
    }

    function selectGroup(e) {
        var item = this.select();
        if (item.length == 0) {
            return;
        }
        var group = this.dataItem(item);
        e.sender.clearSelection();
        var event = $.Event("GroupSelected");
        event.sender = explorer;
        event.group = group;
        $("#GroupsSupExplorer").trigger(event);
        if (!event.isDefaultPrevented()) {
            explorer.close();
        }
    }
    function onGroupsSupExplorerOpen() {
        $("#supGroups_searchInput").val('');
        $("#Suppression_allFoldersCB").prop('checked', false);
        bindSuppressionFolders();
        bindSuppressionGroups();
        bindSelectedSuppressionGroups();
        var tree = $("#GroupsSup_Folders").data("kendoTreeView");
        tree.dataSource.read();
        $("#openAddGroupButton").prop('disabled', true);
        $('#AvailableSupGroups').empty();
        $.ajax({
            url: '/ecn.MarketingAutomation/Web/GetGroups',
            data: {
                customerId: explorer.customerID,
                folderId: 0,
                search: '',
                allFolders: false
            },
            dataType: "json",
            success: function (response) {
                var itemlist = '';
                for (var i = 0; i < response.length; i++) {
                    itemlist += '<li id="' + response[i].GroupID + "_" + response[i].FolderID + '" >' + response[i].GroupName + '</li>';
                }
                $('#AvailableSupGroups').append(itemlist);
            }
        });
        setTimeout(function () {
            var root = tree.findByText("Root");
            tree.expand(root);
            tree.select(root);


        }, 50);
    }
    function onGroupsSupExplorerClose() {
        $(".k-overlay").remove();
    }
    function openAddGroupWindow() {

        
        var selected = tree.select();
        if (selected.length != 0) {
            var data = tree.dataItem(selected);
            var options = {
                customerId: data.CustomerID,
                folderId: data.FolderID,
                groupAdded: function (group) {
                    grid.dataSource.read({
                        CustomerId: data.CustomerID,
                        FolderId: data.FolderID
                    });
                }
            }
            openAddGroup(options);
        }
    }
</script>

@{
    var explorer = Html.Kendo()
                       .Window()
                       .Title("Group Explorer")
                       .Name("GroupsSupExplorer")
                       .Modal(true)
                       .Animation(false)
                       .Content(Content().ToString())
                       .Events(e => e
                                    .Open("onGroupsSupExplorerOpen")
                                    .Close("onGroupsSupExplorerClose"))
                       .Visible(false);

    explorer.Render();
}
@helper Content()
{
    <style>
        #AvailableSupGroups li, #SelectedSupGroups li {
            border-bottom: 1px dotted Gray;
        }

            #AvailableSupGroups li.selected, #SelectedSupGroups li.selected {
                background-color: #115fa9;
                color: white;
            }
           .droptrue {
            width: 12em;
            height: 20em;
            line-height: 2em;
            border: 1px solid #ccc;
            padding: 0;
            margin: 0;
            overflow: scroll;
            overflow-x: hidden;
        }

        .dataItems {
            outline: none;
            background-color: transparent;
            border: 0px solid;
            color: #115fa9;
            font-weight: 300;
            font-size: 12px;
            color: #115fa9;
            font-family: Arial;
            width: 56px;
        }

            .dataItems:focus, input:focus {
                outline: none;
                background-color: transparent;
                border: 1px solid #115fa9;
            }

        .buttonsselectgroup {
            margin: 520px 0 0 830px;
        }
         #GroupsSupExplorer {
            width: 1180px;
            overflow:auto;
        }
    </style>

    <div class="wrapper modal modalgroupexplorer">
        <fieldset title="Group Explorer">
            <legend>Select Suppression Group(s)</legend>
            <div class="formbox">
                <div>
                    <span>Group Name to Search:</span>
                    <input type="text" id="supGroups_searchInput" />
                    <input type="checkbox" id="Suppression_allFoldersCB" /> All Folders
                    @Html.Kendo().Button().Name("Search").Content("Search").HtmlAttributes(new { @class = "btn k-button", type = "button", onclick = "SuppressionMultiGroups_search()" })
                    @Html.Kendo().Button().Name("ClearSearch").Content("Clear Search").HtmlAttributes(new { @class = "btn k-button", type = "button", onclick = "SuppressionMultiGroups_clearSearch()" })
                </div>
                <div class="customerlist" style="height:500px;overflow-y:hidden;">
                    <fieldset title="Customer/Folder ">
                        <legend>Folders</legend>
                        <div id="GroupsSup_Folders"></div>
                    </fieldset>
                </div>
                <div class="formitem formiteminline">
                    <fieldset title="Group">
                        <legend>Group Name</legend>
                        <ul id="AvailableSupGroups" class="droptrue" style="list-style-type: none; border:1px solid Black; width:300px; height:400px; display:inline-block; vertical-align:top; padding:0;" multiple="multiple"></ul>
                    </fieldset>
                </div>
                <div class="formitem formiteminline" style="float:left;width:100px;margin-right:10px;display:table;margin-top:70px;">
                    <p>Drag and Drop your Groups.</p>
                    <p>Click to select individual group. Ctrl + Click or Shift + Click to select multiple groups.</p>
                </div>
                <div class="formitem formiteminline">
                    <fieldset title="Selected Group">
                        <legend>Selected Groups</legend>
                        <ul id="SelectedSupGroups" class="droptrue" style="list-style-type: none; border:1px solid Black; width:300px; height:400px; display:inline-block; vertical-align:top; padding:0;" multiple="multiple"></ul>
                    </fieldset>
                </div>
                <div class="formitem formiteminline" style="margin: 0 auto; width: 750px; text-align: right;">
                    @Html.Kendo().Button().Name("Continue").Content("Continue").HtmlAttributes(new { @class = "btn k-button", type = "button", onclick = "continueGroupsSupWindow()" })
                    @Html.Kendo().Button().Name("Cancel").Content("Cancel").HtmlAttributes(new { @class = "btn k-button", type = "button", onclick = "closeWindow()" })
                </div>
            </div>
        </fieldset>
    </div>

    <script type="text/javascript">
    $(document).ready(function () {
        var prev = -1;
        $(".droptrue").on('click', 'li', function (e) {
           // debugger;
            var curr = $(this).index();
            if (e.ctrlKey || e.metaKey) {
                $(this).toggleClass("selected");
            } else if (e.shiftKey && prev > -1) {
                if ($(this).parent().attr("id") == "AvailableSupGroups")
                    $("ul#AvailableSupGroups.droptrue li").slice(Math.min(prev, curr), 1 + Math.max(prev, curr)).addClass("selected");
                if ($(this).parent().attr("id") == "SelectedSupGroups")
                    $("ul#SelectedSupGroups.droptrue li").slice(Math.min(prev, curr), 1 + Math.max(prev, curr)).addClass("selected");
            } else {
                prev = curr;
                $(this).addClass("selected").siblings().removeClass("selected");
            }
        }).sortable({
            connectWith: "ul.droptrue",
            delay: 150, //Needed to prevent accidental drag when trying to select
            revert: 0,
            helper: function (e, item) {

                if (!item.hasClass('selected')) { //If you grab an unhighlighted item to drag, it will deselect (unhighlight) everything else
                    item.addClass('selected').siblings().removeClass('selected');
                }
                //Clone the selected items into an array
                var elements = item.parent().children('.selected').clone();
                item.data('multidrag', elements).siblings('.selected').remove();
                var helper = $('<li/>');
                return helper.append(elements);
            },
            stop: function (e, ui) {
                var elements = ui.item.data('multidrag');
                ui.item.after(elements).remove();
            }

        });
    });

    function continueGroupsSupWindow() {
        var template = kendo.template($("#groupsTemplate").html());
        $('#AvailableSupGroups').empty();
        var phrases = [];
        $('#SelectedSupGroups').each(function () {
            $(this).find('li').each(function () {
                var current = $(this);
                if (current.children().size() > 0) { return true; }
                liID = $(this).attr('id');
                var IDS = liID.split('_');
                var folderID = IDS[1];
                var groupID = IDS[0];
                var filter = { FolderID: folderID, GroupID: groupID, GroupName: current.text() };
                phrases.push(filter);

            });
        });

        var dataSource = new kendo.data.DataSource({
            data: phrases,
            change: function () { // subscribe to the CHANGE event of the data source
                $("#selectedSuppressionGroups tbody").html(kendo.render(template, this.view())); // populate the table
            }
        });
        dataSource.read();
        Campaign_SelectedSuppressionGroups = dataSource.data(); // Store SelectedGroups data in global variable
        // Updating Filters data with selected Groups                
        if (Campaign_SelectedSuppressionGroupFilters != null) {
            var filtersFiltered = new Array();
            for (var i = 0; i < Campaign_SelectedSuppressionGroups.length; i++) {
                for (var j = 0; j < Campaign_SelectedSuppressionGroupFilters.length; j++) {
                    if (Campaign_SelectedSuppressionGroups[i].GroupID == Campaign_SelectedSuppressionGroupFilters[j].GroupID) {
                        filtersFiltered.push(Campaign_SelectedSuppressionGroupFilters[j]);
                    }
                }
            }
            // Resetting filters
            Campaign_SelectedSuppressionGroupFilters.splice(0, Campaign_SelectedSuppressionGroupFilters.length)
            for (var i = 0; i < filtersFiltered.length; i++) {
                Campaign_SelectedSuppressionGroupFilters.push(filtersFiltered[i]);
            }
            var filterTemplate = kendo.template($("#filterTemplate").html());
            var suppressionGroupFilters = new kendo.data.DataSource({
                data: Campaign_SelectedSuppressionGroupFilters,
                change: function () { // subscribe to the CHANGE event of the data source
                    $("#selectedSuppressionGroupFilters tbody").html(kendo.render(filterTemplate, this.view())); // populate the table
                }
            });
            suppressionGroupFilters.read();
        }
        closeWindow();
    };
    function closeWindow() {
        explorer.close();

    };
    function SuppressionMultiGroups_search() {
       
        var tv = $("#GroupsSup_Folders").data("kendoTreeView");
        var selectedFolder = tv.dataItem(tv.select());
        var allFolders = $("#Suppression_allFoldersCB").is(':checked');
        var searchString = $("#supGroups_searchInput").val();
        var folderID = 0;
        if (selectedFolder == 'undefined')
            selectedFolder = 0;
        else
        {
            folderID = selectedFolder.id;
        }
        $('#AvailableSupGroups').empty();
        $.ajax({
            url: '/ecn.MarketingAutomation/Web/GetGroups',
            data: {
                customerId: explorer.customerID,
                folderId: folderID,
                search: searchString,
                allFolders: allFolders
            },
            dataType: "json",
            success: function (response) {
                var itemlist = '';
                for (var i = 0; i < response.length; i++) {
                    itemlist += '<li id="' + response[i].GroupID + "_" + response[i].FolderID + '" >' + response[i].GroupName + '</li>';
                }
                $('#AvailableSupGroups').append(itemlist);
            }
        });
             
    }

    function SuppressionMultiGroups_clearSearch() {
        $("#supGroups_searchInput").val('');
        $("#Suppression_allFoldersCB").prop('checked',false);
        var tv = $("#GroupsSup_Folders").data("kendoTreeView");
        var getitem = tv.dataSource.get(0);
        tv.findByUid(getitem.uid);
        var selectitem = tv.findByUid(getitem.uid);
        tv.select(selectitem);
        var selectedFolder = tv.dataItem(tv.select());
        var allFolders = $("#Suppression_allFoldersCB").is(':checked');
        var searchString = $("#supGroups_searchInput").val();
        var folderID = 0;
        if (selectedFolder == 'undefined')
            selectedFolder = 0;
        else {
            folderID = selectedFolder.id;
        }
        $('#AvailableSupGroups').empty();
        $.ajax({
            url: '/ecn.MarketingAutomation/Web/GetGroups',
            data: {
                customerId: explorer.customerID,
                folderId: 0,
                search: '',
                allFolders: false
            },
            dataType: "json",
            success: function (response) {
                var itemlist = '';
                for (var i = 0; i < response.length; i++) {
                    itemlist += '<li id="' + response[i].GroupID + "_" + response[i].FolderID + '" data-draggable="item" draggable="true" aria-grabbed="false" tabindex="0">' + response[i].GroupName + '</li>';
                }
                $('#AvailableSupGroups').append(itemlist);
            }
        });
       
    };
    </script>
}