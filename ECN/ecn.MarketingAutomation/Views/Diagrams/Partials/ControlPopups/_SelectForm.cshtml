@using ecn.MarketingAutomation.Models.PostModels.ECN_Objects
@using Kendo.Mvc;
@{

    List<ECN_Framework_Entities.Accounts.Customer> channelCustomers = (List<ECN_Framework_Entities.Accounts.Customer>)ViewBag.Customers;
    if (channelCustomers.Count > 0)
    {
        channelCustomers.Insert(0, new ECN_Framework_Entities.Accounts.Customer { CustomerName = "--- All Customers ---", CustomerID = -1 });
    }
    var explorer = Html.Kendo()
              .Window()
              .Title("Form")
              .Name("FormExplorer")
              .Modal(true)
              .Animation(false)
              .Content(Content(channelCustomers).ToString())
              .Events(e => e
                .Open("onFormExplorerOpen")
                .Close("onFormExplorerClose"))
              .Visible(false)
              .Width(1500);
      

    explorer.Render();
}
@helper Content(List<ECN_Framework_Entities.Accounts.Customer> channelCustomers)
{
<style>
    #lstBox1 li, #lstBox2 li {
        border-bottom: 1px dotted Gray;
    }

        #lstBox1 li.selected, #lstBox2 li.selected {
            background-color: #115fa9;
            color: white;
        }

    .droptrue {
        width: 300px;
        height: 448px;
        line-height: 2em;
        border: 1px solid #ccc;
        padding: 0;
        margin: 0;
        overflow: auto;
        list-style-type: none;
        display: inline-block;
        vertical-align: top;
    }

    .dataItems {
        outline: none;
        background-color: transparent;
        border: 0px solid;
        color: #115fa9;
        font-weight: 300;
        font-size: 12px;
        color: #115fa9;
        font-family: 'Arial';
        width: 56px;
    }

        .dataItems:focus, input:focus {
            outline: none;
            background-color: transparent;
            border: 1px solid #115fa9;
        }

    .buttonsselectgroup {
        margin: 520px 0 0 830px;
    }
</style>
<script type="text/javascript">
    function formExplorer(select, customerID) {
        explorer = new FormExplorer({
            select: select,
            CustomerID: customerID
        });
        explorer.open();
    }
    function FormExplorer(options) {
        this.select = options.select;
        this.customerID = options.CustomerID;

        this.open = function () {
            var window = $("#FormExplorer").data("kendoWindow");
            window.center().open();
          //  showLoadingWindow();
        };
        this.close = function () {
            var window = $("#FormExplorer").data("kendoWindow");
            window.close();
        };

    }
    function onFormExplorerOpen() {
      
        $("#FormExplorer").on("FormSelected", function (e) {
            explorer.select(e);
        });
    }
    function onFormExplorerClose() {
        $(".k-overlay").remove();
    }
    
    var targetUrlAct = '@Url.Action("ActiveFormsReadToGrid", "Web")';
    var firstGridLoad = true;

    $(document).ready(function () {
        $("#ddPageSize").kendoDropDownList({
            dataTextField: "text",
            dataValueField: "value",
            value: 10,
            dataSource: [
              { text: "5", value: "5" },
              { text: "10", value: "10" },
              { text: "15", value: "15" },
              { text: "20", value: "20" }
            ]
        });
        $("#FormType").kendoDropDownList({
            dataTextField: "text",
            dataValueField: "value",
            optionLabel: {
                text: "--- All Form Types ---",
                value: ""
            },
            dataSource: [
              { text: "Newsletter", value: "Newsletter" },
              { text: "Simple", value: "Simple" },
              { text: "Auto-Submit", value: "Auto-Submit" },
              { text: "Subscription", value: "Subscription" },
            ]
        });
        $("#FormStatus").kendoDropDownList({
            dataTextField: "text",
            dataValueField: "value",
            optionLabel: {
                text: "--- All Statuses ---",
                value: ""
            },
            dataSource: [
              { text: "Saved", value: "Saved" },
              { text: "Published", value: "Published" },
              { text: "Updated", value: "Updated" }
            ]
        });
        $("#SearchCriterion").kendoDropDownList({
            dataTextField: "text",
            dataValueField: "value",
            optionLabel: {
                text: "starts with",
                value: "starts"
            },
            dataSource: [
               { text: "contains", value: "like" },
               { text: "equals", value: "equals" },
               { text: "ends with", value: "ends" }
            ]
        });

    });
    //Events - Grid Event - Grid DataBound where you can get all the filters , sorts and other properties for Grid
    function Form_dataBound() {
        var grid = this;
        this.element.find("[role='gridcell']").each(function () {
            eval($(this).children("script").html());
        });
        grid.tbody.find('>tr').each(function () {
            var dataItem = grid.dataItem(this);
            if (!dataItem.Child) {
                $(this).find(".k-hierarchy-cell a").hide();
            }
        });
        if (firstGridLoad) {
            firstGridLoad = false;
            Form_SetPagerWidget("firstpage");
        }
    }
    //Events - When First , Lats Previous and Next Buttons clicked on Pager.
    function Form_GoToPage(e) {
        Form_SetPagerWidget(e.target.id);
        var data = Form_activeSearchGridParams();
        Form_ReBindGrid(data);
    }
    function OnFormSelect(e)
    {
        grid = e.sender;
        var currentDataItem = grid.dataItem(this.select());
        var event = $.Event("FormSelected");
        event.sender = explorer;
        event.form = currentDataItem;
        $("#FormExplorer").trigger(event);
        if (!event.isDefaultPrevented()) {
            explorer.close();
        }
    }
    //Events - Triggers the Search using Search Criteria
    function Form_Search() {
        Form_SetPagerWidget("firstpage");
        firstGridLoad = true;
        var data = Form_activeSearchGridParams();
        Form_ReBindGrid(data);
    }
    //Rebinds the Grid with data sends with DataSourceRequest
    function Form_ReBindGrid(obj) {
        var grid = $("#ActiveForms").data("kendoGrid");
        var options = grid.getOptions();
        var dataSource = new kendo.data.DataSource({
            transport: {
                read: {
                    url: targetUrlAct,
                    dataType: "json",
                    data: obj
                }
            }
        })
        options.dataSource.data = dataSource.data;
        options.dataSource.pageSize = obj.PageSize;
        grid.setOptions(options);
    }
    //Data Sends with DataSourceRequest- Parameters that needs to be passed to the server
    function Form_activeSearchGridParams() {
        return {
            CustomerID: $("#Customer").val(),
            FormType: $("#FormType").val() == 'Auto-Submit' ? 'AutoSubmit' : $("#FormType").val(),
            FormStatus: $("#FormStatus").val(),
            FormName: $("#FormName").val(),
            SearchCriterion: $("#SearchCriterion").val(),
            PageNumber: $("#pagerInputPageNumber").val(),
            PageSize: $("#ddPageSize").val()
        };
    }
    //Function - Rebinds the Grid on Page Number input chnaged or Page size changed
    function Form_RebindOnPageOrSizeChange() {
        if (parseInt($("#pagerInputPageNumber").val()) > 0 && !isNaN(parseInt($("#pagerInputPageNumber").val())) && $("#pagerInputPageNumber").val() <= parseInt($("#pagerTotalItems").text())) {
            Form_SetPagerWidget($("#pagerInputPageNumber").val());
            var data = Form_activeSearchGridParams();
            Form_ReBindGrid(data);
        }
        else {
            showMessage({
                type: 'Error',
                text: 'Please enter valid page number.',
                autoClose: false
            });
        }
    }
    //This drives the server side paging by getting current page and setting all Pager messages
    function Form_SetPagerWidget(id) {
        var totalrecordCount = 0;
        var grid = $("#ActiveForms").data("kendoGrid");
        if (grid.dataSource.view()[0]) {
            totalrecordCount = parseInt(grid.dataSource.view()[0].TotalRecordCounts);
        }
        var pagesize = parseInt($("#ddPageSize").val());
        var currentpage = parseInt($("#pagerInputPageNumber").val());
        var lastpage = parseInt(totalrecordCount / pagesize) + 1;

        var firstpage = 1;

        if (id == "firstpage") {
            if (currentpage == firstpage)
                currentpage = currentpage;
            else {
                currentpage = firstpage;
            }
        }
        else if (id == "prevpage") {
            if (currentpage == firstpage)
                currentpage = currentpage;
            else
                currentpage = currentpage - 1;
        }
        else if (id == "nextpage") {
            if (currentpage == lastpage)
                currentpage = currentpage;
            else
                currentpage = currentpage + 1;
        }
        else if (id == "lastpage") {
            if (currentpage == lastpage)
                currentpage = currentpage;
            else
                currentpage = lastpage;
        }
        else {
            currentpage = parseInt(id);
        }
        var start = ((currentpage - 1) * pagesize + 1);
        var end = (currentpage * pagesize) < totalrecordCount ? (currentpage * pagesize) : totalrecordCount;
        var displaymessage = start + " - " + end + " of " + totalrecordCount + " items";

        $("#currentpage").text(currentpage);
        $("#pagerDisplay").text(displaymessage);
        $("#pagerTotalItems").text(lastpage);
        $("#pagerInputPageNumber").val(currentpage);
    }
</script>

<div class="wrapper modal modalgroupexplorer">
    <fieldset>
     <legend>Select Form</legend>
        <div id="SearchPanel" style="margin:20px 40px;">
            <label class="lbl">Customer Name:</label>

            @(Html.Kendo().DropDownList()
                    .Name("Customer")
                    .HtmlAttributes(new { style = "width:250px" })
                    .BindTo(new SelectList(channelCustomers,
                    "CustomerID", "CustomerName"))
            )
            <label class="lbl" style="margin-left:20px;">Form Type:</label>
            <input id="FormType" />
            <label class="lbl" style="margin-left:20px;">Form Status:</label>
            <input id="FormStatus"  />
            <label class="lbl" style="margin-left:15px;">Form Name:</label>
            <input id="SearchCriterion" style="width:80px" />

            @Html.Kendo().TextBox().Name("FormName").HtmlAttributes(new { style = "width:200px" })

            <input type="button" class="k-button" value="Search" id="search" onclick="Form_Search()" style="margin-left:20px;" />
        </div>

        @(
                Html.Kendo().Grid<FormViewModel>()
                .Name("ActiveForms")
                .Events(x => x.Change("OnFormSelect").DataBound("Form_dataBound"))
                .Columns(columns =>
                {
                columns.Bound(p => p.CustomerName).Filterable(x => x.Cell(c => c.ShowOperators(false))).Title("Customer Name").HtmlAttributes(new { style = "overflow: hidden; width:100px" });
                columns.Bound(p => p.Name).Filterable(x => x.Cell(c => c.ShowOperators(false))).Title("Form Name").HtmlAttributes(new { style = "overflow:hidden;text-overflow:ellipsis;width:150px" });

                columns.Bound(p => p.FormType).Filterable(x => x.Cell(c => c.ShowOperators(false))).Title("Form Type").Width("80px");
                columns.Bound(p => p.Status).Filterable(x => x.Cell(c => c.ShowOperators(false))).Title("Status").Width("80px");
                columns.Bound(p => p).Template(@<text></text>).ClientTemplate("<i class='km-icon icon-kmplus-circled-1'></i>").Filterable(false).Sortable(false).Width("20px");
                columns.Bound(p => p.Id).Hidden(true);
                })
                    .Sortable(sortable => sortable.SortMode(GridSortMode.SingleColumn))//Sort Based on Single column at a time, you can cnfigure allow for unsorting
                    .Pageable(page => page.Enabled(false))
                    .Selectable(x=>x.Enabled(true))
                    .Filterable(filter => filter.Enabled(false))
                    .DataSource(dataSource => dataSource // Configure the grid data source
                        .Ajax() // Specify that ajax binding is used
                        .Model(m =>
                        {
                            m.Id(y => y.Id);
                        })
                        .Read(read => read.Data("Form_activeSearchGridParams").Action("ActiveFormsReadToGrid", "Web"))// Set the action method which will return the data in JSON format
                        .PageSize(10) //Set up page size
                        .ServerOperation(true) //Get Data from Server
                  ))


                <div id="pager" class="k-pager-wrap k-grid-pager k-widget k-floatwrap">
                <a class="k-link k-pager-nav k-state-disabled k-pager-first" title="Go to the first page" tabindex="-1">
                    <span onclick="Form_GoToPage(event)" id="firstpage" class="k-icon k-i-seek-w">seek-w</span>
                </a>
                <a class="k-link k-pager-nav k-state-disabled" title="Go to the previous page" tabindex="-1">
                    <span onclick="Form_GoToPage(event)" id="prevpage" class="k-icon k-i-arrow-w">arrow-w</span>
                </a>

                <ul class="k-pager-numbers k-reset">
                    <li class="k-current-page"><span class="k-link k-pager-nav">1</span></li>
                    <li><span class="k-state-selected" id="currentpage">1</span></li>

                </ul>
                <span class="k-pager-input k-label">Page<input class="k-textbox" id="pagerInputPageNumber" onchange="Form_RebindOnPageOrSizeChange()">of <span id="pagerTotalItems"></span></span>
                <a class="k-link k-pager-nav" title="Go to the next page" tabindex="-1">
                    <span onclick="Form_GoToPage(event)" id="nextpage" class="k-icon k-i-arrow-e">arrow-e</span>
                </a>
                <a class="k-link k-pager-nav k-pager-last k-state-disabled" title="Go to the last page" tabindex="-1">
                    <span onclick="Form_GoToPage(event)" id="lastpage" class="k-icon k-i-seek-e">seek-e</span>
                </a>

                <span class="k-pager-sizes k-label">
                    <span title="" class="k-widget k-dropdown k-header">
                        <input id="ddPageSize" onchange="Form_RebindOnPageOrSizeChange()" />
                    </span>items per page
                </span>
                <span class="float-right" style="margin-right:10px;">
                    <lable id="pagerDisplay"></lable>
                </span>
            </div>
</fieldset>
</div>

}

