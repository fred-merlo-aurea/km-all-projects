<script>
    function GroupExplorerSingle(options) {
        this.select = options.select;
        this.customerID = options.customerID;
        this.customerName = options.customerName;
        this.open = function () {
            var window = $("#GroupExplorer").data("kendoWindow");
            window.center().open();
            showLoadingWindow();
        };
        this.close = function () {
            var window = $("#GroupExplorer").data("kendoWindow");
            window.close();
        };
    }

    function bindFolders(customerID, customerName) {

        var GroupFolders = {
            schema: {
                model: {
                    id: "FolderID",
                    FolderID: "FolderID",
                    CustomerID: "CustomerID",
                    FolderName: "FolderName"
                }
            },
            transport: {
                read: {
                    url: '@Url.Action("GetFolders", "Web")?customerID=' + customerID,
                    async:false,
                    data: function (data) {
                        data.CustomerID = customerID;
                        data.Type = "GRP";
                    }
                }
            }
        };

        var GroupCustomers = new kendo.data.HierarchicalDataSource({
            transport: {
                read: {
                    url: '@Url.Action("GetSingleCustomer", "Web")?customerID=' + customerID,
                    async:false
                }
            },
            schema: {
                model: {
                    id: 0,
                    FolderID:0,
                    children: GroupFolders,
                    hasChildren:true
                }
            }
        });

        kendo.destroy("#Folders");
        var treeview = $("#Folders").kendoTreeView({
            dataSource: GroupCustomers,
            dataTextField: ["CustomerName", "FolderName"],
            loadOnDemand: true,
            autoBind: false,
            expand: function (e) {
                expandedItem = this.dataItem(e.node);
            },
            select: function (e) {
                var tag = '';                
                var grid = $("#Groups").data("kendoGrid");
                var tree = $('#Folders').data('kendoTreeView');
                var searchString = $("#singleGroup_searchInput").val();
                var dataItem = tree.dataItem(e.node);
                grid.dataSource.read({
                    customerId: dataItem.CustomerID,
                    folderId: dataItem.FolderID,
                    search: searchString,
                    allFolders: false
                }).then(function () {
                    var dataSource = grid.dataSource;
                    var data = dataSource.data();
                    if (data.length > 0) {
                        dataSource.page(1);
                    }
                });

            }
        }).data("kendoTreeView");

        var searchString = $("#singleGroup_searchInput").val();
        var selectedFolder = treeview.dataItem(treeview.select());
        if (selectedFolder === undefined)
            selectedFolder = '0';
        kendo.destroy("#Groups");
        var allFolders = $("#singleGroup_allFoldersCB").is(':checked');
        $("#Groups").kendoGrid({
            columns: [
                { field: "GroupName", width: 200, title: "Group Name" },
                { template: "<i class='km-icon icon-kmplus-circled-1'></i>",width:20 }
            ],
            selectable: "row",
            autoBind:false,
            change: addGroup,
            dataSource: {
                transport: {
                    read: {
                        url: '@Url.Action("GetGroups", "Web")',
                        data: {
                            customerId: explorer.customerID,
                            folderId: selectedFolder,
                            search: searchString,
                            allFolders: allFolders
                        }
                    }
                },
                schema: {
                    model: { id: "GroupID" }
                },
            },
            scrollable: true,
            height: 446
        });

        $("#GroupExplorer").on("GroupSelected", function (e) {
            explorer.select(e);
        });

        return $("#Folders").data('kendoTreeView');
    }
    var explorer;
    var _customerID;
    function groupExplorerSingle(select, customerID, customerName) {
        explorer = new GroupExplorerSingle({
            select: select,
            customerID: customerID,
            customerName: customerName
        });
        _customerID = customerID;
        explorer.open();
    }
    function selectGroup(e) {
        var item = this.select();
        if (item.length == 0) {
            return;
        }
        var group = this.dataItem(item);
        e.sender.clearSelection();
        var event = $.Event("GroupSelected");
        event.sender = explorer;
        event.group = group;
        $("#GroupExplorer").trigger(event);
        if (!event.isDefaultPrevented()) {
            explorer.close();
        }
    }
    function onGroupExplorerOpen() {
        //var tree = $("#Folders").data("kendoTreeView");
        $("#singleGroup_searchInput").val('');
        $("#singleGroup_allFoldersCB").prop('checked', false);
        var tree = bindFolders(explorer.customerID, explorer.customerName);
        var grid = $("#Groups").data("kendoGrid");
        tree.dataSource.read();
        grid.dataSource.data([]);

        setTimeout(function () {
            var root = tree.findByText("Root");
            tree.expand(root);
            tree.select(root);


        }, 50);

    }
    function onGroupExplorerClose() {
        $(".k-overlay").remove();
    }

</script>



@{
    var explorer = Html.Kendo()
                       .Window()
                       .Title("Group Explorer")
                       .Name("GroupExplorer")
                       .Modal(true)
                       .Animation(false)
                       .Content(Content().ToString())
                       .Events(e => e
                                    .Open("onGroupExplorerOpen")
                                    .Close("onGroupExplorerClose"))
                       .Visible(false)
                       .Width(740);

    explorer.Render();
}

@helper Content()
{

    <style>
        #lstBox1 li, #lstBox2 li {
            border-bottom: 1px dotted Gray;
        }

            #lstBox1 li.selected, #lstBox2 li.selected {
                background-color: #115fa9;
                color: white;
            }

        .droptrue {
            width: 300px;
            height: 448px;
            line-height: 2em;
            border: 1px solid #ccc;
            padding: 0;
            margin: 0;
            overflow: auto;
            list-style-type: none;
            display: inline-block;
            vertical-align: top;
        }

        .dataItems {
            outline: none;
            background-color: transparent;
            border: 0px solid;
            color: #115fa9;
            font-weight: 300;
            font-size: 12px;
            color: #115fa9;
            font-family: 'Arial';
            width: 56px;
        }

            .dataItems:focus, input:focus {
                outline: none;
                background-color: transparent;
                border: 1px solid #115fa9;
            }

        .buttonsselectgroup {
            margin: 520px 0 0 830px;
        }
    </style>
    <div class="wrapper modal modalgroupexplorer">
        <fieldset title="Group Explorer">
            <legend>Select Group</legend>
            <div>
                <span>Group Name to Search:</span>
                <input type="text" id="singleGroup_searchInput" />
                <input type="checkbox" id="singleGroup_allFoldersCB" /> All Folders
                @Html.Kendo().Button().Name("Search").Content("Search").HtmlAttributes(new { @class = "btn k-button", type = "button", onclick = "singleGroupSearch()" })
                @Html.Kendo().Button().Name("ClearSearch").Content("Clear Search").HtmlAttributes(new { @class = "btn k-button", type = "button", onclick = "clearSearch()" })
            </div>
            <div class="customerlist">
                <fieldset title="Customer/Folder ">
                    <legend>Folders</legend>
                    <div id="Folders"style="overflow-y: scroll;overflow-x:scroll;width:330px;display:inline-block;"></div>
                </fieldset>
            </div>
            <div class="customerlist">
                <fieldset title="Group">
                    <legend>Groups</legend>
                    <div id="Groups"></div>
                </fieldset>
            </div>
        </fieldset>
    </div>

    <script type="text/javascript">
        $(document).ready(function () {
         
            
        });

        function addGroup(e) {
            var item = this.select();
            if (item.length == 0) {
                return;
            }
            var group = this.dataItem(item);
            e.sender.clearSelection();
            var event = $.Event("GroupSelected");
            event.sender = explorer;
            event.group = group;
            $("#GroupExplorer").trigger(event);
            if (!event.isDefaultPrevented()) {
                explorer.close();
            }
        };
        function singleGroupSearch() {
            var searchString = $("#singleGroup_searchInput").val();
            var grid = $("#Groups").data("kendoGrid");
            var folders = $("#Folders").data('kendoTreeView');
            var allFolders = $("#singleGroup_allFoldersCB").is(':checked');
            var selectedFolder = folders.dataItem(folders.select());

            var folderID = 0;
            if (selectedFolder === undefined)
                folderID = 0;
            else
                folderID = selectedFolder.id;

            grid.dataSource.read({
                customerId: explorer.CustomerID,
                folderId: folderID,
                search: searchString,
                allFolders: allFolders
            }).then(function () {
                var dataSource = grid.dataSource;
                var data = dataSource.data();
                if (data.length > 0) {
                    dataSource.page(1);
                }
            });

           

            
        };
        function clearSearch() {
            $("#singleGroup_searchInput").val('');
            $("#singleGroup_allFoldersCB").prop('checked', false);
            var grid = $("#Groups").data("kendoGrid");
            var folders = $("#Folders").data('kendoTreeView');

            var getitem = folders.dataSource.get(0);
            folders.findByUid(getitem.uid);
            var selectitem = folders.findByUid(getitem.uid);
            folders.select(selectitem);

            grid.dataSource.read({
                customerId: explorer.customerID,
                folderId: 0,
                search: '',
                allFolders: false
            }).then(function () {
                var dataSource = grid.dataSource;
                var data = dataSource.data();
                if (data.length > 0) {
                    dataSource.page(1);
                }
            });
        };
    </script>

}