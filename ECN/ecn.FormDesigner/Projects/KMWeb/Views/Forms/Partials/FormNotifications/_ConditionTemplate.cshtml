@using KMEnums
@using KMModels

@{
    var controls = (IEnumerable<ControlModel>)ViewContext.Controller.ViewBag.Controls;

    var selected = controls.FirstOrDefault();
}

@functions
{
    public MvcHtmlString GetValueControl(string name, ControlModel control)
    {
        var dataType = control != null ? control.DataType : DataType.Text;
        
        if(dataType == DataType.Selection)
        {
            var items = control != null ? control.SelectableItems : null;
            
            return Html.Kendo().DropDownList().Name(name).BindTo(items).DataTextField("Label").DataValueField("Id").HtmlAttributes(new { id = "#=value#" }).ToClientTemplate();
        }
        if(dataType == DataType.Text)
        {
            return Html.Kendo().TextBox().Name(name).HtmlAttributes(new { id = "#=value#" }).ToClientTemplate();
        }
        if(dataType == DataType.Date)
        {
            return Html.Kendo().DateTimePicker().Name(name).HtmlAttributes(new { id = "#=value#" }).ToClientTemplate();
        }
        if(dataType == DataType.Number)
        {
            return Html.Kendo().NumericTextBox().Name(name).Decimals(0).Format("#").HtmlAttributes(new { id = "#=value#" }).ToClientTemplate();
        }
        if(dataType == DataType.Decimal)
        {
            return Html.Kendo().NumericTextBox().Name(name).HtmlAttributes(new { id = "#=value#" }).ToClientTemplate();
        }
        if(dataType == DataType.Newsletter)
        {
            return Html.Kendo().DropDownList().Name(name)
                .Items(items => {
                    items.Add().Value("Subscribe").Text("Subscribe");
                })
                .HtmlAttributes(new { id = "#=value#" }).ToClientTemplate();
        }
        return null;
    }
}

<script id="condition-template" type="text/x-kendo-template">

    # var controlId = formatId(getId(ConditionId, 'ControlId')); #
    # var comparisonType = formatId(getId(ConditionId, 'ComparisonType')); #
    # var value = formatId(getId(ConditionId, 'Value')); #

    <div id="#=ConditionId#">
        <input type="hidden" value="#=ConditionIndex#" name="#=NotificationId#.Conditions.Index" />
        <input type="hidden" value="#=ConditionType#" name="@(GetName<ConditionModel>("#=ConditionId#", x => x.Type))" class="conditionTypeHidden" />
        <ul class="inline">
            <li class="cond conditionTypeItem">#=ConditionType#</li>
            <li class="fld">
                @(Html.Kendo().DropDownList()
                      .Name(GetName<ConditionModel>("#=ConditionId#", x => x.ControlId))
                      .HtmlAttributes(new { id = "#=controlId#" })
                      .BindTo(controls)
                      .DataTextField("FieldLabel")
                      .DataValueField("Id")
                      .Events(e => e.Change(@<text>function(){ changeControl('#=ConditionId#', this); }</text>))
                      .ToClientTemplate()
                 )
            </li>
            <li class="comp">
                @(Html.Kendo()
                      .DropDownList()
                      .Name(GetName<ConditionModel>("#=ConditionId#", x => x.ComparisonType))
                      .HtmlAttributes(new { id = "#=comparisonType#" })
                      .Items(items =>
                      {
                          foreach (ComparisonType type in GetComparisonTypeValues(selected != null ? selected.DataType : DataType.Text))
                          {
                              items.Add().Text(type.ToString()).Value(type.ToString());
                          }
                      })
                      .ToClientTemplate()
                )
            </li>
            <li class="value">
                @GetValueControl(GetName<ConditionModel>("#=ConditionId#", x => x.Value), selected)
            </li>
            <li class="acts">
                @(
                    Html.Kendo()
                        .Button()
                        .Name("#=ConditionId#_DeleteCondition")
                        .Content("Delete<i class='km-icon icon-kmcustom-delete'></i>")
                        .HtmlAttributes(new { onclick = "deleteCondition('#=ConditionId#')" , type = "button", @class = "btn btn-blue3" })
                        .ToClientTemplate()
                )
            </li>
        </ul>
    </div>
</script>
