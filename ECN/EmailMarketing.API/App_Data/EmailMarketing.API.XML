<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EmailMarketing.API</name>
    </assembly>
    <members>
        <member name="M:EmailMarketing.API.Areas.HelpPage.ApiDescriptionExtensions.GetFriendlyId(System.Web.Http.Description.ApiDescription)">
            <summary>
            Generates an URI-friendly ID for the <see cref="T:System.Web.Http.Description.ApiDescription"/>. E.g. "Get-Values-id_name" instead of "GetValues/{id}?name={name}"
            </summary>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The ID as a string.</returns>
        </member>
        <member name="T:EmailMarketing.API.Areas.HelpPage.HelpPageConfig">
            <summary>
            Use this class to customize the Help Page.
            For example you can set a custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> to supply the documentation
            or you can provide the samples for the requests/responses.
            </summary>
        </member>
        <member name="T:EmailMarketing.API.Areas.HelpPage.Controllers.HelpController">
            <summary>
            The controller that will handle requests for the help page.
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Areas.HelpPage.HeaderDocumentation.GetLibrary">
            <summary>
            Provides access to the (singleton) repository of
            documentation and globally applicable HTTP Headers.
            </summary>
            <returns>a dictionary of header information organized by Name</returns>
        </member>
        <member name="F:EmailMarketing.API.Areas.HelpPage.HeaderDocumentation.library">
            <summary>
            stores global HTTP Header documentation
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)">
            <summary>
            Sets the documentation provider for help page.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="documentationProvider">The documentation provider.</param>
        </member>
        <member name="M:EmailMarketing.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleObjects(System.Web.Http.HttpConfiguration,System.Collections.Generic.IDictionary{System.Type,System.Object})">
            <summary>
            Sets the objects that will be used by the formatters to produce sample requests/responses.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleObjects">The sample objects.</param>
        </member>
        <member name="M:EmailMarketing.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type and action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:EmailMarketing.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample request directly for the specified media type and action with parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:EmailMarketing.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type of the action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:EmailMarketing.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample response directly for the specified media type of the action with specific parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:EmailMarketing.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForMediaType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Sets the sample directly for all actions with the specified media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:EmailMarketing.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Sets the sample directly for all actions with the specified type and media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
            <param name="type">The parameter type or return type of an action.</param>
        </member>
        <member name="M:EmailMarketing.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:EmailMarketing.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:EmailMarketing.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:EmailMarketing.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:EmailMarketing.API.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <returns>The help page sample generator.</returns>
        </member>
        <member name="M:EmailMarketing.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration,EmailMarketing.API.Areas.HelpPage.HelpPageSampleGenerator)">
            <summary>
            Sets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleGenerator">The help page sample generator.</param>
        </member>
        <member name="M:EmailMarketing.API.Areas.HelpPage.HelpPageConfigurationExtensions.GetModelDescriptionGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the model description generator.
            </summary>
            <param name="config">The configuration.</param>
            <returns>The <see cref="T:EmailMarketing.API.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator"/></returns>
        </member>
        <member name="M:EmailMarketing.API.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageApiModel(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="apiDescriptionId">The <see cref="T:System.Web.Http.Description.ApiDescription"/> ID.</param>
            <returns>
            An <see cref="T:EmailMarketing.API.Areas.HelpPage.Models.HelpPageApiModel"/>
            </returns>
        </member>
        <member name="T:EmailMarketing.API.Areas.HelpPage.ModelDescriptions.ModelDescription">
            <summary>
            Describes a type model.
            </summary>
        </member>
        <member name="T:EmailMarketing.API.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator">
            <summary>
            Generates model descriptions for given types.
            </summary>
        </member>
        <member name="T:EmailMarketing.API.Areas.HelpPage.ModelDescriptions.ModelNameAttribute">
            <summary>
            Use this attribute to change the name of the <see cref="T:EmailMarketing.API.Areas.HelpPage.ModelDescriptions.ModelDescription"/> generated for a type.
            </summary>
        </member>
        <member name="T:EmailMarketing.API.Areas.HelpPage.Models.HelpPageApiModel">
            <summary>
            The model that represents an API displayed on the help page.
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Areas.HelpPage.Models.HelpPageApiModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmailMarketing.API.Areas.HelpPage.Models.HelpPageApiModel"/> class.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Areas.HelpPage.Models.HelpPageApiModel.RequestExample">
            <summary>
            Gets or sets the example that describes an HTTP request including headers, etc.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Areas.HelpPage.Models.HelpPageApiModel.ResponseExample">
            <summary>
            Gets or sets the example that describes an HTTP response including headers, etc.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Areas.HelpPage.Models.HelpPageApiModel.RequestHeaderDocumentation">
            <summary>
            Gets or sets the collection of request header documentation
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Areas.HelpPage.Models.HelpPageApiModel.ResponseHeaderDocumentation">
            <summary>
            Gets or sets the collection of request header documentation
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription">
            <summary>
            Gets or sets the <see cref="P:EmailMarketing.API.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription"/> that describes the API.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Areas.HelpPage.Models.HelpPageApiModel.UriParameters">
            <summary>
            Gets or sets the <see cref="T:EmailMarketing.API.Areas.HelpPage.ModelDescriptions.ParameterDescription"/> collection that describes the URI parameters for the API.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Areas.HelpPage.Models.HelpPageApiModel.RequestDocumentation">
            <summary>
            Gets or sets the documentation for the request.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Areas.HelpPage.Models.HelpPageApiModel.RequestModelDescription">
            <summary>
            Gets or sets the <see cref="T:EmailMarketing.API.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the request body.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Areas.HelpPage.Models.HelpPageApiModel.RequestBodyParameters">
            <summary>
            Gets the request body parameter descriptions.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Areas.HelpPage.Models.HelpPageApiModel.ResourceDescription">
            <summary>
            Gets or sets the <see cref="T:EmailMarketing.API.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the resource.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Areas.HelpPage.Models.HelpPageApiModel.ResourceProperties">
            <summary>
            Gets the resource property descriptions.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Areas.HelpPage.Models.HelpPageApiModel.SampleRequests">
            <summary>
            Gets the sample requests associated with the API.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Areas.HelpPage.Models.HelpPageApiModel.SampleResponses">
            <summary>
            Gets the sample responses associated with the API.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Areas.HelpPage.Models.HelpPageApiModel.ErrorMessages">
            <summary>
            Gets the error messages associated with this model.
            </summary>
        </member>
        <member name="T:EmailMarketing.API.Areas.HelpPage.HelpPageSampleGenerator">
            <summary>
            This class will generate the samples for the help page.
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Areas.HelpPage.HelpPageSampleGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmailMarketing.API.Areas.HelpPage.HelpPageSampleGenerator"/> class.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Areas.HelpPage.HelpPageSampleGenerator.ActualHttpMessageTypes">
            <summary>
            Gets CLR types that are used as the content of <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples">
            <summary>
            Gets the objects that are used directly as samples for certain actions.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects">
            <summary>
            Gets the objects that are serialized as samples by the supported formatters.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories">
            <summary>
            Gets factories for the objects that the supported formatters will serialize as samples. Processed in order,
            stopping when the factory successfully returns a non-<see langref="null"/> object.
            </summary>
            <remarks>
            Collection includes just <see cref="M:EmailMarketing.API.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)"/> initially. Use
            <code>SampleObjectFactories.Insert(0, func)</code> to provide an override and
            <code>SampleObjectFactories.Add(func)</code> to provide a fallback.</remarks>
        </member>
        <member name="M:EmailMarketing.API.Areas.HelpPage.HelpPageSampleGenerator.GetSampleRequests(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the request body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:EmailMarketing.API.Areas.HelpPage.HelpPageSampleGenerator.GetSampleResponses(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the response body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:EmailMarketing.API.Areas.HelpPage.HelpPageSampleGenerator.GetSample(System.Web.Http.Description.ApiDescription,EmailMarketing.API.Areas.HelpPage.SampleDirection)">
            <summary>
            Gets the request or response body samples.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:EmailMarketing.API.Areas.HelpPage.HelpPageSampleGenerator.GetActionSample(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,EmailMarketing.API.Areas.HelpPage.SampleDirection)">
            <summary>
            Search for samples that are provided directly through <see cref="P:EmailMarketing.API.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples"/>.
            </summary>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="type">The CLR type.</param>
            <param name="formatter">The formatter.</param>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The sample that matches the parameters.</returns>
        </member>
        <member name="M:EmailMarketing.API.Areas.HelpPage.HelpPageSampleGenerator.GetSampleObject(System.Type)">
            <summary>
            Gets the sample object that will be serialized by the formatters. 
            First, it will look at the <see cref="P:EmailMarketing.API.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects"/>. If no sample object is found, it will try to create
            one using <see cref="M:EmailMarketing.API.Areas.HelpPage.HelpPageSampleGenerator.DefaultSampleObjectFactory(EmailMarketing.API.Areas.HelpPage.HelpPageSampleGenerator,System.Type)"/> (which wraps an <see cref="T:EmailMarketing.API.Areas.HelpPage.ObjectGenerator"/>) and other
            factories in <see cref="P:EmailMarketing.API.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The sample object.</returns>
        </member>
        <member name="M:EmailMarketing.API.Areas.HelpPage.HelpPageSampleGenerator.ResolveHttpRequestMessageType(System.Web.Http.Description.ApiDescription)">
            <summary>
            Resolves the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The type.</returns>
        </member>
        <member name="M:EmailMarketing.API.Areas.HelpPage.HelpPageSampleGenerator.ResolveType(System.Web.Http.Description.ApiDescription,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},EmailMarketing.API.Areas.HelpPage.SampleDirection,System.Collections.ObjectModel.Collection{System.Net.Http.Formatting.MediaTypeFormatter}@)">
            <summary>
            Resolves the type of the action parameter or return value when <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/> is used.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or a response.</param>
            <param name="formatters">The formatters.</param>
        </member>
        <member name="M:EmailMarketing.API.Areas.HelpPage.HelpPageSampleGenerator.WriteSampleObjectUsingFormatter(System.Net.Http.Formatting.MediaTypeFormatter,System.Object,System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Writes the sample object using formatter.
            </summary>
            <param name="formatter">The formatter.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="T:EmailMarketing.API.Areas.HelpPage.HelpPageSampleKey">
            <summary>
            This is used to identify the place where the sample should be applied.
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Creates a new <see cref="T:EmailMarketing.API.Areas.HelpPage.HelpPageSampleKey"/> based on media type.
            </summary>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:EmailMarketing.API.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Creates a new <see cref="T:EmailMarketing.API.Areas.HelpPage.HelpPageSampleKey"/> based on media type and CLR type.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="type">The CLR type.</param>
        </member>
        <member name="M:EmailMarketing.API.Areas.HelpPage.HelpPageSampleKey.#ctor(EmailMarketing.API.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:EmailMarketing.API.Areas.HelpPage.HelpPageSampleKey"/> based on <see cref="P:EmailMarketing.API.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="sampleDirection">The <see cref="P:EmailMarketing.API.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:EmailMarketing.API.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,EmailMarketing.API.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:EmailMarketing.API.Areas.HelpPage.HelpPageSampleKey"/> based on media type, <see cref="P:EmailMarketing.API.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The <see cref="P:EmailMarketing.API.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="P:EmailMarketing.API.Areas.HelpPage.HelpPageSampleKey.ControllerName">
            <summary>
            Gets the name of the controller.
            </summary>
            <value>
            The name of the controller.
            </value>
        </member>
        <member name="P:EmailMarketing.API.Areas.HelpPage.HelpPageSampleKey.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
            <value>
            The name of the action.
            </value>
        </member>
        <member name="P:EmailMarketing.API.Areas.HelpPage.HelpPageSampleKey.MediaType">
            <summary>
            Gets the media type.
            </summary>
            <value>
            The media type.
            </value>
        </member>
        <member name="P:EmailMarketing.API.Areas.HelpPage.HelpPageSampleKey.ParameterNames">
            <summary>
            Gets the parameter names.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Areas.HelpPage.HelpPageSampleKey.SampleDirection">
            <summary>
            Gets the <see cref="P:EmailMarketing.API.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.
            </summary>
        </member>
        <member name="T:EmailMarketing.API.Areas.HelpPage.ImageSample">
            <summary>
            This represents an image sample on the help page. There's a display template named ImageSample associated with this class.
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Areas.HelpPage.ImageSample.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:EmailMarketing.API.Areas.HelpPage.ImageSample"/> class.
            </summary>
            <param name="src">The URL of an image.</param>
        </member>
        <member name="T:EmailMarketing.API.Areas.HelpPage.InvalidSample">
            <summary>
            This represents an invalid sample on the help page. There's a display template named InvalidSample associated with this class.
            </summary>
        </member>
        <member name="T:EmailMarketing.API.Areas.HelpPage.ObjectGenerator">
            <summary>
            This class will create an object of a given type and populate it with sample data.
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)">
            <summary>
            Generates an object for a given type. The type needs to be public, have a public default constructor and settable public properties/fields. Currently it supports the following types:
            Simple types: <see cref="T:System.Int32"/>, <see cref="T:System.String"/>, <see cref="T:System.Enum"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Uri"/>, etc.
            Complex types: POCO types.
            Nullables: <see cref="T:System.Nullable`1"/>.
            Arrays: arrays of simple types or complex types.
            Key value pairs: <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            Tuples: <see cref="T:System.Tuple`1"/>, <see cref="T:System.Tuple`2"/>, etc
            Dictionaries: <see cref="T:System.Collections.Generic.IDictionary`2"/> or anything deriving from <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            Collections: <see cref="T:System.Collections.Generic.IList`1"/>, <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.Generic.ICollection`1"/>, <see cref="T:System.Collections.IList"/>, <see cref="T:System.Collections.IEnumerable"/>, <see cref="T:System.Collections.ICollection"/> or anything deriving from <see cref="T:System.Collections.Generic.ICollection`1"/> or <see cref="T:System.Collections.IList"/>.
            Queryables: <see cref="T:System.Linq.IQueryable"/>, <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="T:EmailMarketing.API.Areas.HelpPage.SampleDirection">
            <summary>
            Indicates whether the sample is used for request or response
            </summary>
        </member>
        <member name="F:EmailMarketing.API.Areas.HelpPage.SampleDirection.Request">
            <summary>
            sample is for an API request
            </summary>
        </member>
        <member name="F:EmailMarketing.API.Areas.HelpPage.SampleDirection.Response">
            <summary>
            Sample is for an API response
            </summary>
        </member>
        <member name="T:EmailMarketing.API.Areas.HelpPage.TextSample">
            <summary>
            This represents a preformatted text sample on the help page. There's a display template named TextSample associated with this class.
            </summary>
        </member>
        <member name="T:EmailMarketing.API.Areas.HelpPage.XmlDocumentationProvider">
            <summary>
            A custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> that reads the API documentation from an XML documentation file.
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Areas.HelpPage.XmlDocumentationProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:EmailMarketing.API.Areas.HelpPage.XmlDocumentationProvider"/> class.
            </summary>
            <param name="documentPath">The physical path to XML document.</param>
        </member>
        <member name="T:EmailMarketing.API.Attributes.CustomerIdRequiredAttribute">
            <summary>
            Implements custom authentication by extracting a "API Access Key" from the HTTP header.
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Attributes.CustomerIdRequiredAttribute.OnActionExecuting(System.Web.Http.Controllers.HttpActionContext)">
            <summary>
            Extracts the Customer ID from HTTP header value or, if this cannot be done (for example, 
            because the header is not valid or not provided) short-circuits the request returning a 
            <code>401 Unauthorized</code> Error to the client.
            </summary>
            <param name="actionContext">the action context associated with the current request.</param>
        </member>
        <member name="P:EmailMarketing.API.Attributes.AuthenticationRequiredAttribute.AuthenticationSettings">
            <summary>
            get/set the authentication configuration
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Attributes.AuthenticationRequiredAttribute.#ctor(System.Int32,EmailMarketing.API.Infrastructure.Authentication.AuthenticationProvider.Settings.AccessKeyType,System.Boolean)">
            <summary>
            require authentication prior to executing an action (or any action, when applied to an API controller)
            </summary>
            <param name="order">the order in which this attribute should be applied, with zero being first. (default: 0).</param>
            <param name="AccessKey">what level of access key is required (default User)</param>
            <param name="customerIdRequired">whether a customer id is required (default: true)</param>
        </member>
        <member name="M:EmailMarketing.API.Attributes.AuthenticationRequiredAttribute.OnActionExecuting(System.Web.Http.Controllers.HttpActionContext)">
            <summary>
            Perform authentication checks before executing the requested action
            </summary>
            <param name="actionContext"></param>
        </member>
        <member name="T:EmailMarketing.API.Attributes.ExceptionsLoggedAttribute">
            <summary>
            Implements enterprise exception logging  by intercepting uncaught exceptions, recording
            these to the enterprise exceptions repository, and associating them with the active API
            request log entry.
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Attributes.ExceptionsLoggedAttribute.OnException(System.Web.Http.Filters.HttpActionExecutedContext)">
            <summary>
            Overrides the base behavior of an <see cref="T:System.Web.Http.Filters.ExceptionFilterAttribute"/>
            to provide custom application wide logic for processing of exceptions, recording them in the
            Enterprise "Common" exceptions repository and creating an association from the record to the
            API request log entry related to the active request.
            </summary>
            <param name="actionExecutedContext"></param>
        </member>
        <member name="T:EmailMarketing.API.Attributes.FriendlyExceptionsAttribute">
            <summary>
            Wraps Exceptions raised with additional content (such as "Friendly" Message, Error Code and Error Reference) for consumption by clients.
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Attributes.FriendlyExceptionsAttribute.#ctor">
            <summary>
            Establish default exception handlers
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Attributes.FriendlyExceptionsAttribute.FormatErrorStatus(System.Net.HttpStatusCode)">
            <summary>
            Transforms a <see cref="T:System.Net.HttpStatusCode"/> into a string containing
            both the numeric and textual portions.
            </summary>
            <param name="statusCode">an HTTP status code</param>
            <returns>a string containing a concatenation of the numeric and textual representations of the 
            given HTTP status code.</returns>
        </member>
        <member name="P:EmailMarketing.API.Attributes.FriendlyExceptionsAttribute.ExceptionHandlers">
            <summary>
            List of enriched exception details, mapped to raised exceptions at runtime via Type and (optionally) handler.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Attributes.FriendlyExceptionsAttribute.CatchUnfilteredExceptions">
            <summary>
            If true, all exceptions will be wrapped with additional content.
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Attributes.FriendlyExceptionsAttribute.#ctor(System.Int32,System.Boolean)">
            <summary>
            Constructor accepting two optional parameters controlling the invocation order
            and whether to wrap all exceptions or only those cataloged in the
            <see cref="T:EmailMarketing.API.Exceptions.ExceptionConfigurationLibrary"/>
            </summary>
            <param name="order">identifies the precedence of the instance with respect to other filters
            irrespective of Filter type.  Lower values indicate higher precedence and more immediate 
            invocation.</param>
            <param name="catchUnfilteredExceptions">If true, all exceptions will be wrapped irrespective
            of whether they are mapped explicitly to additional content (e.g. message, status, and reference 
            detail) with the global <see cref="T:EmailMarketing.API.Exceptions.ExceptionConfigurationLibrary"/>
            </param>
        </member>
        <member name="M:EmailMarketing.API.Attributes.FriendlyExceptionsAttribute.OnException(System.Web.Http.Filters.HttpActionExecutedContext)">
            <summary>
            Implements global exception handling to provide consistent output from exceptions raised
            such as human readable Message text describing the problem and an HTTP Status Code presented 
            as text mirroring the servers response code.
            </summary>
            <param name="actionExecutedContext">the HTTP Action Context of the request having generated the exception.</param>
        </member>
        <member name="M:EmailMarketing.API.Attributes.FriendlyExceptionsAttribute.LookupException(System.Exception,EmailMarketing.API.Exceptions.ExceptionConfiguration@)">
            <summary>
            Interrogates the configured <see cref="T:EmailMarketing.API.Exceptions.ExceptionConfigurationLibrary"/>,
            returning the first <see cref="T:EmailMarketing.API.Exceptions.ExceptionConfiguration"/> entry associated 
            to <code>exception</code> based on type and which does not defined a Handler or which does not decline to handle
            the <code>exception</code>.
            </summary>
            <param name="exception">the exception to be handled</param>
            <param name="exceptionMatch">Output paramater; the first
            <see cref="T:EmailMarketing.API.Exceptions.ExceptionConfiguration"/> matching <code>exception</code>, or <code>NULL</code>
            if none could be found.</param>
            <returns>true if an <see cref="T:EmailMarketing.API.Exceptions.ExceptionConfiguration"/> was found and 
            <code>exceptionMatch</code> was set to a non-null value; otherwise false.</returns>
        </member>
        <member name="T:EmailMarketing.API.Attributes.UserAuthTokenRequiredAttribute">
            <summary>
            Implements custom authentication by extracting a "API Access Key" from the HTTP header.
            </summary>
        </member>
        <member name="F:EmailMarketing.API.Attributes.UserAuthTokenRequiredAttribute.AuthenticationSettings">
            <summary>
            configures the Authentication Provider to require a User level Access Key
            </summary>
        </member>
        <member name="T:EmailMarketing.API.Attributes.LoggedAttribute">
            <summary>
            Implements API logging as pre and post execution actions.
            </summary>
        </member>
        <member name="T:EmailMarketing.API.Attributes.OrderedFilterInfo">
            <summary>
            Custom HTTP Filter Info supporting explicit action/exception/authorization filter handler 
            invocation. <seealso cref="T:System.Web.Http.Filters.FilterInfo"/>
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Attributes.OrderedFilterInfo.Instance">
            <summary>
            Instance of an object implementing the IFilter interface.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Attributes.OrderedFilterInfo.Scope">
            <summary>
            FilterScope object instance
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Attributes.OrderedFilterInfo.CompareTo(System.Object)">
            <summary>
            Implements the IComparable interface to provide ordering of filter handler
            invocation based on the <code>Order</code> property
            </summary>
            <param name="obj">instance of an object implementing the IOrderAttribute interface</param>
            <returns>-1 of the given object comes before the context object per Order, 1 if after or zero 
            if the objects have the same value for <code>Order</code>.</returns>
        </member>
        <member name="M:EmailMarketing.API.Attributes.OrderedFilterInfo.ConvertToFilterInfo">
            <summary>
            Allows ingestion of our customized FilterInfo implementation back into the general
            Web API pipeline by converting the object back into the framework provided base-class.
            This is neeeded because the Framework provided base-class 
            (<see cref="T:System.Web.Http.Filters.FilterInfo"/>) is sealed and cannot simply be 
            sub-classed.
            </summary>
            <returns>a new instance of <see cref="T:System.Web.Http.Filters.FilterInfo"/> having the same
            <see cref="P:EmailMarketing.API.Attributes.OrderedFilterInfo.Instance"/> and <see cref="P:EmailMarketing.API.Attributes.OrderedFilterInfo.Scope"/> as the instance of <code>OrderFilterInfo</code>.
            </returns>
        </member>
        <member name="T:EmailMarketing.API.Attributes.OrderedFilterProvider">
            <summary>
            Custom implementation of <see cref="T:System.Web.Http.Filters.IFilterProvider"/>
            honoring the <code>Order</code> attribute exposed by Attributes implementing the
            <see cref="T:EmailMarketing.API.Attributes.IOrderAttributes"/> interface.
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Attributes.OrderedFilterProvider.GetFilters(System.Web.Http.HttpConfiguration,System.Web.Http.Controllers.HttpActionDescriptor)">
            <summary>
            Creates an explicitly order enumeration of <see cref="T:System.Web.Http.Filters.FilterInfo"/>
            by delegating to the IComparable implementation within 
            <see cref="T:EmailMarketing.API.Attributes.OrderedFilterInfo"/>
            </summary>
            <param name="configuration">HTTP (server) configuration instance</param>
            <param name="actionDescriptor">descriptor for the HTTP action to be dispatched</param>
            <returns></returns>
        </member>
        <member name="T:EmailMarketing.API.Controllers.Internal.DomainTrackerController">
            <summary>
            REST Services for Domain Tracking  
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Controllers.Internal.DomainTrackerController.GetPublicIP">
            <summary>
            Gets users public IP
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmailMarketing.API.Controllers.Internal.DomainTrackerController.MergeAnonActivity(EmailMarketing.API.Controllers.Internal.DomainTrackerController.MergeAnonActivityObject)">
            <summary>
            This will merge Anonymous activity and known activity
            </summary>
            <param name="merge"></param>
        </member>
        <member name="T:EmailMarketing.API.Controllers.Internal.FormsController">
            <summary>
            INTERNAL Special API methods to support development of the Forms application
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Controllers.Internal.FormsController.FrameworkEntity">
            <inheritdoc/>
        </member>
        <member name="M:EmailMarketing.API.Controllers.Internal.FormsController.GetFormsCustomersForBaseChannel">
            <summary>
            Returns the list of Forms Customers associated with BaseChannel inferred from the API Access Key provided. 
            Note: this method requires a Base-Channel level API Access Key and does NOT require Customer-ID header.
            </summary>
            <returns></returns>
            <example for="request"><![CDATA[
            GET http://api.ecn5.com/api/internal/forms/methods/GetFormsCustomersForBaseChannel HTTP/1.1
            Accept: application/json
            APIAccessKey: <YOUR-API-ACCESS-KEY-HERE>
            Host: api.ecn5.com
            
            ]]></example>
            <example for="response"><![CDATA[
            HTTP/1.1 200 OK
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Server: Microsoft-IIS/7.5
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Thu, 18 Jun 2015 21:32:55 GMT
            Content-Length: 501
            
            [
               {
                  "CustomerID":99999,
                  "CustomerName":"A Curious Customer",
                  "AccessKey":"00000000-0000-0000-0000-000000000001"
               },
               {
                  "CustomerID":99999,
                  "CustomerName":"A Curiouser Customer",
                  "AccessKey":"00000000-0000-0000-0000-000000000002"
               }
            ]
            ]]></example>
        </member>
        <member name="T:EmailMarketing.API.Controllers.Internal.UserController">
            <summary>INTERNAL API methods exposing base-channel</summary>
        </member>
        <member name="P:EmailMarketing.API.Controllers.Internal.UserController.FrameworkEntity">
            <inheritdoc/>
        </member>
        <member name="M:EmailMarketing.API.Controllers.Internal.UserController.GetFormsUser">
            <summary>
            Retrieve user detail for the forms user associated with the current customer.
            <em>NOTE: this method requires a <u>BaseChannel</u> level Access Key to be provided 
            in the APIAccessKey header.</em>
            </summary>
            <example for="request"><![CDATA[
            GET http://api.ecn5.com/api/internal/user/methods/GetFormsUser HTTP/1.1
            Accept: application/json
            Accept-Language: en-US
            APIAccessKey: <YOUR-API-ACCESS-KEY-HERE>
            X-Customer-ID: 99999
            Host: api.ecn5.com
            
            ]]></example>
            <example for="response"><![CDATA[
            HTTP/1.1 200 OK
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Server: Microsoft-IIS/7.5
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Thu, 18 Jun 2015 17:43:32 GMT
            Content-Length: 105
            
            {
               "UserID":12345,
               "CustomerID":77777,
               "UserName":"nameOfFormsUser",
               "AccessKey":"00000000-0000-0000-0000-000000000000"
            }
            ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.Internal.UserController.Get(System.Int32)">
            <summary>
            This feature is not implemented
            </summary>
            <example for="request"><![CDATA[]]></example>
            <example for="response"><![CDATA[]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.Internal.UserController.Post(EmailMarketing.API.Models.User)">
            <summary>
            This feature is not implemented
            </summary>
            <example for="request"><![CDATA[]]></example>
            <example for="response"><![CDATA[]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.Internal.UserController.Put(System.Int32,EmailMarketing.API.Models.User)">
            <summary>
            This feature is not implemented
            </summary>
            <example for="request"><![CDATA[]]></example>
            <example for="response"><![CDATA[]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.Internal.UserController.Delete(System.Int32)">
            <summary>
            This feature is not implemented
            </summary>
            <example for="request"><![CDATA[]]></example>
            <example for="response"><![CDATA[]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.Internal.UserController.Search(System.Collections.Generic.List{EmailMarketing.API.Models.SearchProperty})">
            <summary>
            This feature is not implemented
            </summary>
        </member>
        <member name="T:EmailMarketing.API.Controllers.Internal.BaseChannelController">
            <summary>INTERNAL API methods exposing base-channel</summary>
        </member>
        <member name="M:EmailMarketing.API.Controllers.Internal.BaseChannelController.GetInternal(System.Int32)">
            <summary>
            Internal Get implementation returns Framework model
            </summary>
            <param name="id">EmailDirectID</param>
            <returns>internal Framework model object</returns>
        </member>
        <member name="M:EmailMarketing.API.Controllers.Internal.BaseChannelController.Get">
            <summary>
            Retrieve the BaseChannel inferred by the CustomerID header
            </summary>
            <returns>BaseChannel API model object</returns>
            <example for="request"><![CDATA[
            GET http://api.ecn5.com/api/internal/basechannel HTTP/1.1
            Accept: application/json
            Accept-Language: en-US
            APIAccessKey: <YOUR-API-ACCESS-KEY-HERE>
            X-Customer-ID: 99999
            Host: api.ecn5.com
            
            ]]></example>
            <example for="response"><![CDATA[
            HTTP/1.1 200 OK
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Server: Microsoft-IIS/7.5
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Tue, 02 Jun 2015 15:35:20 GMT
            Content-Length: 114
            
            {
               "BaseChannelID":77777,
               "BaseChannelName":"My Channel",
               "AccessKey":"00000000-0000-0000-0000-000000000000"
            }
            ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.Internal.BaseChannelController.Get(System.Int32)">
            <summary>
            This feature is not implemented
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Controllers.Internal.BaseChannelController.Post(EmailMarketing.API.Models.BaseChannel)">
            <summary>
            This feature is not implemented
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Controllers.Internal.BaseChannelController.Put(System.Int32,EmailMarketing.API.Models.BaseChannel)">
            <summary>
            This feature is not implemented
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Controllers.Internal.BaseChannelController.Delete(System.Int32)">
            <summary>
            This feature is not implemented
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Controllers.Internal.BaseChannelController.Search(System.Collections.Generic.List{EmailMarketing.API.Models.SearchProperty})">
            <summary>
            This feature is not implemented
            </summary>
        </member>
        <member name="T:EmailMarketing.API.Controllers.Internal.ErrorController">
            <summary>INTERNAL API methods exposing base-channel</summary>
        </member>
        <member name="M:EmailMarketing.API.Controllers.Internal.ErrorController.GetInternal(System.Int32)">
            <summary>
            Internal Get implementation returns Framework model
            </summary>
            <param name="id">EmailDirectID</param>
            <returns>internal Framework model object</returns>
            <remarks>
            
            This breaks the pattern of delegating to the business layers as business layer doesn't
            support ApplicationLog.
            
            Additionally, the Save() method (direct member of KM.Common.Entity.ApplicationLog)
            takes a ref to the object to be updated/deleted and sets the LogID of the referenced
            object, meaning it doesn't follow the typical business layer pattern.
            
            For the moment POST is stubbed to deal directly with the existing logic in KM common
            however it might be better to extract the guts of GetInternal (coded here as GetById) out to
            the business and data layer methods, and also add typical BL/DL functionality for ApplicationLog.
            
            </remarks>
        </member>
        <member name="P:EmailMarketing.API.Controllers.Internal.ErrorController.FrameworkEntity">
            <inheritdoc/>
        </member>
        <member name="M:EmailMarketing.API.Controllers.Internal.ErrorController.FormatException(System.Exception)">
            <summary>
            Transform an exception object into a standardized string suitable for logging
            </summary>
            <param name="e">an Exception to be transformed</param>
            <returns>string representation of the given exception</returns>
            <example for="request"><![CDATA[
            POST http://api.ecn5.com/api/internal/error/format HTTP/1.1
            Accept: application/json
            Accept-Language: en-US
            User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko
            Accept-Encoding: gzip, deflate
            Connection: Keep-Alive
            APIAccessKey: <YOUR-API-ACCESS-KEY-HERE>
            X-Customer-ID: 99999
            Host: api.ecn5.com
            Content-Type: application/json; charset=utf-8
            Content-Length: 1176
            
            { "ClassName" : "System.Exception",
              "Data" :
              { 
                  "customExceptionField" : "value for custom exception field" 
              },
              "ExceptionMethod" : "8\nFormatException\nEmailMarketing.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\nEmailMarketing.API.Controllers.Internal.ErrorController\nSystem.Exception FormatException()",
              "HResult" : -2146233088,
              "HelpURL" : "http://api.ecn5.com
              "InnerException" :
              { 
                  "ClassName" : "System.Exception",
                  "Data" : null,
                  "ExceptionMethod" : null,
                  "HResult" : -2146233088,
                  "HelpURL" : null,
                  "InnerException" : null,
                  "Message" : "inner exception",
                  "RemoteStackIndex" : 0,
                  "RemoteStackTraceString" : null,
                  "Source" : null,
                  "StackTraceString" : null,
                  "WatsonBuckets" : null
               },
              "Message" : "the message",
              "RemoteStackIndex" : 0,
              "RemoteStackTraceString" : null,
              "Source" : "EmailMarketing.API",
              "StackTraceString" : "   at EmailMarketing.API.Controllers.Internal.ErrorController.FormatException() in c:\\Projects\\ECN\\Dev\\2015_Q2\\EmailMarketing.API\\Controllers\\Internal\\ErrorController.cs:line 106",
              "WatsonBuckets" : null
            }
            ]]></example>
            <example for="response"><![CDATA[
            HTTP/1.1 200 OK
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Server: Microsoft-IIS/7.5
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Wed, 03 Jun 2015 15:10:08 GMT
            Content-Length: 801
            
            "<table><tr><td><b>**********************</b></td></tr>\r\n<tr><td><b>-- Help Link --</b></td></tr>\r\nhttp://api.ecn5.com Source --</b></td></tr>\r\n<tr><td>EmailMarketing.API</td></tr>\r\n<tr><td><b>-- Data --</b></td></tr>\r\n<tr><td>System.Collections.DictionaryEntry</td></tr>\r\n<tr><td><b>-- Message --</b></td></tr>\r\n<tr><td>the message</td></tr>\r\n<tr><td><b>-- InnerException --</b></td></tr>\r\n<tr><td>System.Exception: inner exception</td></tr>\r\n<tr><td><b>-- Stack Trace --</b></td></tr>\r\n<tr><td>   at EmailMarketing.API.Controllers.Internal.ErrorController.FormatException() in c:\\Projects\\ECN\\Dev\\2015_Q2\\EmailMarketing.API\\Controllers\\Internal\\ErrorController.cs:line 106</td></tr>\r\n<tr><td><b>**********************</b></td></tr></table>\r\n"
            ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.Internal.ErrorController.Get(System.Int32)">
            <summary>
            This feature is not implemented
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Controllers.Internal.ErrorController.Post(EmailMarketing.API.Models.Error)">
            <summary>
            Log an Error
            </summary>
            <param name="apiModel">An Error object to be added to the log</param>
            <returns>The provided error object, with LogID filled</returns>
            <example for="request"><![CDATA[
            POST http://api.ecn5.com/api/internal/error HTTP/1.1
            Accept: application/json
            Accept-Language: en-US
            User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko
            Accept-Encoding: gzip, deflate
            Connection: Keep-Alive
            APIAccessKey: <YOUR-API-ACCESS-KEY-HERE>
            X-Customer-ID: 99999
            Host: api.ecn5.com
            Content-Type: application/json; charset=utf-8
            Content-Length: 945
            
            {
            "ApplicationID": 99,
            "SeverityID": 3,
            "SourceMethod": "MyProgram.MyMethod",
            "Exception": "<table><tr><td><b>**********************</b></td></tr>\r\n<tr><td><b>-- Help Link --</b></td></tr>\r\nhttp://api.ecn5.com Data --</b></td></tr>\r\n<tr><td>System.Collections.DictionaryEntry</td></tr>\r\n<tr><td><b>-- Message --</b></td></tr>\r\n<tr><td>the message</td></tr>\r\n<tr><td><b>-- InnerException --</b></td></tr>\r\n<tr><td>System.Exception: inner exception</td></tr>\r\n<tr><td><b>-- Stack Trace --</b></td></tr>\r\n<tr><td>   at EmailMarketing.API.Controllers.Internal.ErrorController.FormatException() in c:\\Projects\\ECN\\Dev\\2015_Q2\\EmailMarketing.API\\Controllers\\Internal\\ErrorController.cs:line 106</td></tr>\r\n<tr><td><b>**********************</b></td></tr></table>\r\n",
            "LogNote": "submitted by MyApplication via api.ecn5.com"
            }
            ]]></example>
            <example for="response"><![CDATA[
            HTTP/1.1 201 Created
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Server: Microsoft-IIS/7.5
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Wed, 03 Jun 2015 15:49:22 GMT
            Content-Length: 931
            {
                "LogID":12345,
                "ApplicationID":99,
                "SeverityID":3,
                "SourceMethod":"MyProgram.MyMethod","Exception":"<table><tr><td><b>**********************</b></td></tr>\r\n<tr><td><b>-- Help Link --</b></td></tr>\r\nhttp://api.ecn5.com Data --</b></td></tr>\r\n<tr><td>System.Collections.DictionaryEntry</td></tr>\r\n<tr><td><b>-- Message --</b></td></tr>\r\n<tr><td>the message</td></tr>\r\n<tr><td><b>-- InnerException --</b></td></tr>\r\n<tr><td>System.Exception: inner exception</td></tr>\r\n<tr><td><b>-- Stack Trace --</b></td></tr>\r\n<tr><td>   at EmailMarketing.API.Controllers.Internal.ErrorController.FormatException() in c:\\Projects\\ECN\\Dev\\2015_Q2\\EmailMarketing.API\\Controllers\\Internal\\ErrorController.cs:line 106</td></tr>\r\n<tr><td><b>**********************</b></td></tr></table>\r\n",
                "LogNote":"submitted by MyApplication via api.ecn5.com"
            }
            ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.Internal.ErrorController.Put(System.Int32,EmailMarketing.API.Models.Error)">
            <summary>
            This feature is not implemented
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Controllers.Internal.ErrorController.Delete(System.Int32)">
            <summary>
            This feature is not implemented
            </summary>
        </member>
        <member name="T:EmailMarketing.API.Controllers.Internal.CustomerController">
            <summary>INTERNAL API methods exposing base-channel</summary>
        </member>
        <member name="M:EmailMarketing.API.Controllers.Internal.CustomerController.GetInternal(System.Int32,System.Boolean)">
            <summary>
            Internal Get implementation returns Framework model
            </summary>
            <param name="id">EmailDirectID</param>
            <returns>internal Framework model object</returns>
        </member>
        <member name="P:EmailMarketing.API.Controllers.Internal.CustomerController.FrameworkEntity">
            <inheritdoc/>
        </member>
        <member name="M:EmailMarketing.API.Controllers.Internal.CustomerController.Get(System.Int32)">
            <summary>
            This feature is not implemented
            </summary>
            <example for="request"><![CDATA[]]></example>
            <example for="response"><![CDATA[]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.Internal.CustomerController.Post(EmailMarketing.API.Models.Customer)">
            <summary>
            This feature is not implemented
            </summary>
            <example for="request"><![CDATA[]]></example>
            <example for="response"><![CDATA[]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.Internal.CustomerController.Put(System.Int32,EmailMarketing.API.Models.Customer)">
            <summary>
            This feature is not implemented
            </summary>
            <example for="request"><![CDATA[]]></example>
            <example for="response"><![CDATA[]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.Internal.CustomerController.Delete(System.Int32)">
            <summary>
            This feature is not implemented
            </summary>
            <example for="request"><![CDATA[]]></example>
            <example for="response"><![CDATA[]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.Internal.CustomerController.Search(EmailMarketing.API.Models.SearchBase)">
            <summary>
            Provide search capabilities for Customer objects. Search supports both GET and POST methods; results will be identical.
            </summary>
            <param name="searchQuery">used to constrain the search</param>
            <returns>a list of matching <see cref="T:EmailMarketing.API.Models.Customer"/> as Location/API Object pairs.</returns>
            <example for="request"><![CDATA[
            POST http://api.ecn5.com/api/internal/customer/api/search/customer HTTP/1.1
            Accept: application/json
            APIAccessKey: <YOUR-API-ACCESS-KEY-HERE>
            X-Customer-ID: 99999
            Host: api.ecn5.com
            Content-Type: application/json; charset=utf-8
            Content-Length: 88
            
            [
             {  
               "name": "BaseChannelID", 
               "comparator": "=", 
               "valueSet": [ 123 ] 
             },
            ]
            ]]></example>
            <example for="response"><![CDATA[
            HTTP/1.1 200 OK
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Server: Microsoft-IIS/7.5
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Tue, 02 Jun 2015 20:45:56 GMT
            Content-Length: 2937
            
            [
               {
                  "ApiObject":{
                        "CustomerID":99998,
                        "CustomerName":"A Curious Customer",
                        "BaseChannelID":77777,
                        "APIAccessKey":"00000000-0000-0000-0000-000000000001"
                  },
                  "Location":"http://api.ecn5.com/api/customer/99998"
               },
               {
            "ApiObject":{
                        "CustomerID":99999,
                        "CustomerName":"A Curiouser Customer",
                        "BaseChannelID":77777,
                        "APIAccessKey":"00000000-0000-0000-0000-000000000002"
                  },
                  "Location":"http://api.ecn5.com/api/customer/99999"
               }
            ]
            ]]></example>
        </member>
        <member name="T:EmailMarketing.API.Controllers.Internal.EmailDirectController">
            <summary>INTERNAL API methods exposing direct the email service</summary>
        </member>
        <member name="P:EmailMarketing.API.Controllers.Internal.EmailDirectController.FrameworkEntity">
            <inheritdoc/>
        </member>
        <member name="M:EmailMarketing.API.Controllers.Internal.EmailDirectController.Get(System.Int32)">
            <summary>
            This feature is not implemented
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Controllers.Internal.EmailDirectController.GetInternal(System.Int32)">
            <summary>
            Internal Get implementation support POST because no public GET is exposed
            </summary>
            <param name="id">EmailDirectID</param>
            <returns>internal Framework model object</returns>
        </member>
        <member name="M:EmailMarketing.API.Controllers.Internal.EmailDirectController.Post(EmailMarketing.API.Models.EmailDirectMessage)">
            <summary>
            Send a new custom message directly to a single recipient
            </summary>
            <param name="model">specifications for the new message</param>
            <returns>Message information as provided with the EmailDirectID filled-in.</returns>
            <example for="request"><![CDATA[
            POST http://api.ecn5.com/api/internal/emaildirect HTTP/1.1
            Accept: application/json
            APIAccessKey: <YOUR_API_ACCESS_KEY>
            X-Customer-ID: 99999
            Host: api.ecn5.com
            Content-Type: application/json; charset=utf-8
            Content-Length: 204
            
            {
               "Source":"Fiddler",
               "EmailAddress":"karen.jones@example.com",
               "EmailSubject":"A Direct Message",
               "Content":"<html><body><h1>This is a test</h1><h2>this is only a test...</h2></body></html>",
               "ReplyEmailAddress": "john.smith@example.com",
               "FromEmailAddress": "john.smith@example.com",
               "FromName": "John Smith",
            }]]></example>
            <example for="response"><![CDATA[
            HTTP/1.1 201 Created
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Server: Microsoft-IIS/7.5
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Mon, 01 Jun 2015 20:29:39 GMT
            Content-Length: 207
            
            {  
               "EmailDirectID":123,
               "Source":"Fiddler",
               "EmailAddress":"nobody@special.com",
               "EmailSubject":"A Direct Message",
               "Content":"<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"><html><body><h1>This is a test</h1><h2>this is only a test...</h2></body></html>",
               "FromEmailAddress": "emaildirect@ecn5.com",
               "ReplyEmailAddress":somebody@special.com",
            }]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.Internal.EmailDirectController.Put(System.Int32,EmailMarketing.API.Models.EmailDirectMessage)">
            <summary>
            This feature is not implemented
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Controllers.Internal.EmailDirectController.Delete(System.Int32)">
            <summary>
            This feature is not implemented
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Controllers.Internal.EmailDirectController.CleanseInputData(EmailMarketing.API.Models.EmailDirectMessage)">
            <summary>
            Remove invalid values and fill in anything missing from the external (API) model.
            </summary>
            <param name="model"></param>
        </member>
        <member name="M:EmailMarketing.API.Controllers.Internal.EmailDirectController.POST_FillFrameworkModelInternalFields(ECN_Framework_Entities.Communicator.EmailDirect)">
            <summary>
            Fill in fields of the internal (framework) model that aren't exposed via the external model
            </summary>
            <param name="frameworkModel"></param>
        </member>
        <member name="M:EmailMarketing.API.Controllers.PersonalizationBlastController.#ctor">
            <summary>
            Constructor, subscribes for AfterTransformation events.
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Controllers.PersonalizationBlastController.InternalGet(System.Int32,KMPlatform.Entity.User,System.Boolean)">
            <summary>
            static Getter returns API (SimpleBlast) object via fetch of Framework object and explicit transform to APIModel type
            </summary>
            <param name="blastID">Blast ID</param>
            <param name="user">Framework User entity</param>
            <param name="fetchFiltersAndSmartSegments">if true, populate Filters and SmartSegments list properties</param>
            <returns><code>SimpleBlast</code> object, or null if object not found.</returns>
            <exception cref="T:ECN_Framework_Common.Objects.SecurityException">throw if <code>BlastID</code> exists but is not accessible by <code>user</code>.</exception>
        </member>
        <member name="P:EmailMarketing.API.Controllers.PersonalizationBlastController.FrameworkEntity">
            <inheritdoc/>
        </member>
        <member name="M:EmailMarketing.API.Controllers.PersonalizationBlastController.OnAfterTransformationInternal(EmailMarketing.API.Controllers.SearchableApiControllerBase{EmailMarketing.API.Models.PersonalizationBlast,ECN_Framework_Entities.Communicator.Blast}.TransformationEventArgs.TransformationDirection,EmailMarketing.API.Models.PersonalizationBlast,ECN_Framework_Entities.Communicator.Blast,KMPlatform.Entity.User,System.Boolean)">
            <summary>
            Provide transformation customization, available from InternalGet (which explicitly calls this) or via API methods in which case
            this method is called from the OnAfterTransformation handler.
            </summary>
            <param name="direction">For ToAPIModel, sets IsTestBlast in ApiModel from TestBlast in Framework model, 
            for ToFramework model, sets TestBlast in Framework model from IsTestBlast in ApiModel</param>
            <param name="apiModel">SimpleBlast</param>
            <param name="frameworkModel">Blast</param>
            <param name="user">Framework User</param>
            <param name="fetchFiltersAndSmartSegemnts">if true, when direction is ToAPIModel, also attempt to populate Filter and SmartSegment 
            arrays by calling <see cref="M:ECN_Framework_BusinessLayer.Communicator.CampaignItemBlast.GetByBlastID(System.Int32,KMPlatform.Entity.User,System.Boolean)"/></param>
        </member>
        <member name="M:EmailMarketing.API.Controllers.PersonalizationBlastController.Post(EmailMarketing.API.Models.PersonalizationBlast)">
            <summary>
            Create a personalization blast
            
             **When using XML as the Content-Type, use only '&lt;StartDate&gt;Date&lt;/StartDate&gt;' rather than &lt;Schedule&gt;&lt;StartDate&gt;...&lt;/Schedule&gt; unless you are building a ScheduledBlast.
            </summary>
            <example for="request"><![CDATA[
            POST http://api.ecn5.com/api/personalizationblast HTTP/1.1
            Content-Type: application/json; charset=utf-8
            Accept: application/json
            APIAccessKey: <YOUR_API_ACCESS_KEY>
            X-Customer-ID: 123
            Host: api.ecn5.com
            Content-Length: 453
            
            {
              "BlastType": "Personalization",                
              "LayoutID": 654321,
              "GroupID": 123456,
              "CampaignName":"Test Marketing Campaign",
              "CampaignItemName":"Campaign Item Name",
              "EmailSubject": "POSTedBlast",
              "EmailFrom": "info@emailmarketing.com",        
              "EmailFromName": "FromName",
              "ReplyTo": "OmNom@gimme.com",
              "SendTime":"2017-01-10 12:00:00"
            }]]></example>
            
            <example for="response"><![CDATA[
            HTTP/1.1 201 Created
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Location: http://api.ecn5.com/api/personalizationblast/999999
            Server: Microsoft-IIS/7.5
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Mon, 10 Aug 2015 17:03:22 GMT
            Content-Length: 481
            
            {
                "BlastID":999999,
                "StatusCode":"pendingcontent",
                "BlastType":"Personalization",
                "LayoutID":654321,
                "GroupID":123456,
                "FilterID":null,
                "SmartSegmentID":null,
                "ReferenceBlasts":null,
                "EmailSubject":"POSTedBlast",
                "EmailFrom":"info@emailmarketing.com",
                "EmailFromName":"FromName",
                "CampaignID": 123,
                "CampaignName":"Test Marketing Campaign",
                "CampaignItemName":"Campaign Item Name",
                "ReplyTo":"OmNom@gimme.com",
                "Filters":null,
                "SmartSegments":null,
                "SendTime":"2015-08-30 12:00:00"
            }]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.PersonalizationBlastController.Put(System.Int32,EmailMarketing.API.Models.PersonalizationBlast)">
            <summary>
            Update a personalization blast
            
             **When using XML as the Content-Type, use only '&lt;StartDate&gt;Date&lt;/StartDate&gt;' rather than &lt;Schedule&gt;&lt;StartDate&gt;...&lt;/Schedule&gt; unless you are building a ScheduledBlast.
            </summary>
            <example for="request"><![CDATA[
            PUT http://api.ecn5.com/api/personalizationblast/99999 HTTP/1.1
            Content-Type: application/json; charset=utf-8
            Accept: application/json
            APIAccessKey: <YOUR_API_ACCESS_KEY>
            X-Customer-ID: 123
            Host: api.ecn5.com
            Content-Length: 453
            
            {
              "BlastID":99999,
              "SendTime":"2017-01-10 12:00:00"
            }]]></example>
            
            <example for="response"><![CDATA[
            HTTP/1.1 201 Created
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Location: http://api.ecn5.com/api/personalizationblast/999999
            Server: Microsoft-IIS/7.5
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Mon, 10 Aug 2015 17:03:22 GMT
            Content-Length: 481
            
            {
                "BlastID":999999,
                "StatusCode":"pending",
                "BlastType":"Personalization",
                "LayoutID":654321,
                "GroupID":123456,
                "FilterID":null,
                "SmartSegmentID":null,
                "ReferenceBlasts":null,
                "EmailSubject":"POSTedBlast",
                "EmailFrom":"info@emailmarketing.com",
                "EmailFromName":"FromName",
                "CampaignID": 123,
                "CampaignName":"Test Marketing Campaign",
                "CampaignItemName":"Campaign Item Name",
                "ReplyTo":"OmNom@gimme.com",
                "Filters":null,
                "SmartSegments":null,
                "SendTime":"2015-08-30 12:00:00"
            }]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.PersonalizationBlastController.CleanseInputData_ValidateForeignKeys(EmailMarketing.API.Models.PersonalizationBlast)">
            <summary>
            Validates GroupID, LayoutID, FilterID (if present and greater than zero), determines if a smart-segment is used,
            and validates layout content.  If issues are found, throws <see cref="T:ECN_Framework_Common.Objects.ECNException"/>.
            If LayoutID is invalid neither FilterID nor layout content can be validated.
            LayoutContent validation cannot be completed if content is uses custom fields which have not been defined.
            </summary>
            <param name="model">an API Object</param>
            <returns>An exception is thrown if any validation error is found. Otherwise, true if a smart segment is used.</returns>
        </member>
        <member name="M:EmailMarketing.API.Controllers.PersonalizationContentController.#ctor">
            <summary>
            Constructor, subscribes for AfterTransformation events.
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Controllers.PersonalizationContentController.InternalGet(System.Int32,KMPlatform.Entity.User,System.Boolean)">
            <summary>
            static Getter returns API (SimpleBlast) object via fetch of Framework object and explicit transform to APIModel type
            </summary>
            <param name="blastID">Blast ID</param>
            <param name="user">Framework User entity</param>
            <param name="fetchFiltersAndSmartSegments">if true, populate Filters and SmartSegments list properties</param>
            <returns><code>SimpleBlast</code> object, or null if object not found.</returns>
            <exception cref="T:ECN_Framework_Common.Objects.SecurityException">throw if <code>BlastID</code> exists but is not accessible by <code>user</code>.</exception>
        </member>
        <member name="P:EmailMarketing.API.Controllers.PersonalizationContentController.FrameworkEntity">
            <inheritdoc/>
        </member>
        <member name="M:EmailMarketing.API.Controllers.PersonalizationContentController.Post(EmailMarketing.API.Models.PersonalizationContent)">
            <summary>
            Add emails to a personalization blast.  Returns summary of results.
                    
            </summary>
            <example for="request"><![CDATA[
            POST http://api.ecn5.com/api/personalizationcontent HTTP/1.1
            Content-Type: application/json; charset=utf-8
            Accept: application/json
            APIAccessKey: <YOUR_API_ACCESS_KEY>
            X-Customer-ID: 123
            Host: api.ecn5.com
            Content-Length: 453
            
            {
              "BlastID": 999999,        
              "Emails":[
                 {
                     "EmailAddress":"test@test.com",
                     "HTMLContent":"<html><head><title>Email Title</head><body>Email HTML content here…</body></html>",
                     "TextContent":"Email Text content here….",
                     "EmailSubject":"Personalization Email Subject 1"
                 },
                 {
                     "EmailAddress":"test2@test.com",
                     "HTMLContent":"<html><head><title>Email Title</head><body>Email HTML content here…</body></html>",
                     "TextContent":"Email Text content here….",
                     "EmailSubject":"Personalization Email Subject 2"
                 }
               ]
            }
            ]]></example>
            
            <example for="response"><![CDATA[
            HTTP/1.1 201 Created
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Location: http://api.ecn5.com/api/personalizationcontent/999999
            Server: Microsoft-IIS/7.5
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Mon, 10 Aug 2015 17:03:22 GMT
            Content-Length: 481
            
            {
                "Created":1,
                "Failed":
                     {
                         "Total":1,
                         "Failures":
                         [
                             {
                                 "EmailAddress":"test@test.com",
                                 "ErrorCode":1
                             }
                         ]
                     },
                "Total":2
            }]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.PersonalizationContentController.OnAfterTransformationInternal(EmailMarketing.API.Controllers.SearchableApiControllerBase{EmailMarketing.API.Models.PersonalizationContent,ECN_Framework_Entities.Communicator.Blast}.TransformationEventArgs.TransformationDirection,EmailMarketing.API.Models.PersonalizationContent,ECN_Framework_Entities.Communicator.Blast,KMPlatform.Entity.User,System.Boolean)">
            <summary>
            Provide transformation customization, available from InternalGet (which explicitly calls this) or via API methods in which case
            this method is called from the OnAfterTransformation handler.
            </summary>
            <param name="direction">For ToAPIModel, sets IsTestBlast in ApiModel from TestBlast in Framework model, 
            for ToFramework model, sets TestBlast in Framework model from IsTestBlast in ApiModel</param>
            <param name="apiModel">SimpleBlast</param>
            <param name="frameworkModel">Blast</param>
            <param name="user">Framework User</param>
            <param name="fetchFiltersAndSmartSegemnts">if true, when direction is ToAPIModel, also attempt to populate Filter and SmartSegment 
            arrays by calling <see cref="M:ECN_Framework_BusinessLayer.Communicator.CampaignItemBlast.GetByBlastID(System.Int32,KMPlatform.Entity.User,System.Boolean)"/></param>
        </member>
        <member name="M:EmailMarketing.API.Controllers.PersonalizationContentErrorCodesController.#ctor">
            <summary>
            Constructor, subscribes for AfterTransformation events.
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Controllers.PersonalizationContentErrorCodesController.InternalGet(KMPlatform.Entity.User)">
            <summary>
            static Getter returns API (SimpleBlast) object via fetch of Framework object and explicit transform to APIModel type
            </summary>        
            <param name="user">Framework User entity</param>        
            <returns><code>ErrorCodes</code> object, or null if object not found.</returns>
            <exception cref="T:ECN_Framework_Common.Objects.SecurityException">throw if not accessible by <code>user</code>.</exception>
        </member>
        <member name="P:EmailMarketing.API.Controllers.PersonalizationContentErrorCodesController.FrameworkEntity">
            <inheritdoc/>
        </member>
        <member name="M:EmailMarketing.API.Controllers.PersonalizationContentErrorCodesController.Get(EmailMarketing.API.Models.PersonalizationContentErrorCodes)">
             <summary>Get a list of personalization blast error codes</summary>        
             <returns>List of personalization error codes</returns>
            <example for="request"><![CDATA[
             GET http://api.ecn5.com/api/personalizationcontenterrorcodes HTTP/1.1
             Accept: application/json
             Accept-Language: en-US
             User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko
             Accept-Encoding: gzip, deflate
             Connection: Keep-Alive
             APIAccessKey: <YOUR-API-KEY-HERE>
             Host: api.ecn5.com
             X-Customer-ID: 77777
             ]]></example>
             <example for="response"><![CDATA[
             HTTP/1.1 200 OK
             Cache-Control: no-cache
             Pragma: no-cache
             Content-Type: application/json; charset=utf-8
             Expires: -1
             Server: Microsoft-IIS/7.5
             X-AspNet-Version: 4.0.30319
             X-Powered-By: ASP.NET
             Date: Sun, 26 Jul 2015 18:59:54 GMT
             Content-Length: 495
             
             [{
                "ErrorCode":1,
                "ErrorMessage":"Security Access Violation"  
              },
              {
                 "ErrorCode":2,
                 "ErrorMessage":"Email Address is Required"
              },
              {
                 "ErrorCode":3,
                 "ErrorMessage":HTML Content is Required"
              }
             ]
             ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.PersonalizationContentErrorCodesController.OnAfterTransformationInternal(EmailMarketing.API.Controllers.SearchableApiControllerBase{EmailMarketing.API.Models.PersonalizationContentErrorCodes,ECN_Framework_Entities.Content.PersonalizedContentErrorCodes}.TransformationEventArgs.TransformationDirection,EmailMarketing.API.Models.PersonalizationContentErrorCodes,ECN_Framework_Entities.Content.PersonalizedContentErrorCodes,KMPlatform.Entity.User,System.Boolean)">
            <summary>
            Provide transformation customization, available from InternalGet (which explicitly calls this) or via API methods in which case
            this method is called from the OnAfterTransformation handler.
            </summary>
            <param name="direction">For ToAPIModel, sets IsTestBlast in ApiModel from TestBlast in Framework model, 
            for ToFramework model, sets TestBlast in Framework model from IsTestBlast in ApiModel</param>
            <param name="apiModel">SimpleBlast</param>
            <param name="frameworkModel">Blast</param>
            <param name="user">Framework User</param>
            <param name="fetchFiltersAndSmartSegemnts">if true, when direction is ToAPIModel, also attempt to populate Filter and SmartSegment 
            arrays by calling <see cref="M:ECN_Framework_BusinessLayer.Communicator.CampaignItemBlast.GetByBlastID(System.Int32,KMPlatform.Entity.User,System.Boolean)"/></param>
        </member>
        <member name="T:EmailMarketing.API.Controllers.QuickTestBlastController">
            <summary>
            API methods exposing a simplified version of the Blast object model as Resources for Create, Read, 
            Update and Delete via REST, and providing ancillary methods such as for reporting.
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Controllers.QuickTestBlastController.#ctor">
            <summary>
            Constructor, subscribes for AfterTransformation events.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Controllers.QuickTestBlastController.FrameworkEntity">
            <inheritdoc/>
        </member>
        <member name="M:EmailMarketing.API.Controllers.QuickTestBlastController.InternalGet(System.Int32,KMPlatform.Entity.User,System.Boolean)">
            <summary>
            static Getter returns API (SimpleBlast) object via fetch of Framework object and explicit transform to APIModel type
            </summary>
            <param name="blastID">Blast ID</param>
            <param name="user">Framework User entity</param>
            <param name="fetchFiltersAndSmartSegments">if true, populate Filters and SmartSegments list properties</param>
            <returns><code>SimpleBlast</code> object, or null if object not found.</returns>
            <exception cref="T:ECN_Framework_Common.Objects.SecurityException">throw if <code>BlastID</code> exists but is not accessible by <code>user</code>.</exception>
        </member>
        <member name="M:EmailMarketing.API.Controllers.QuickTestBlastController.OnAfterTransformationInternal(EmailMarketing.API.Controllers.SearchableApiControllerBase{EmailMarketing.API.Models.QuickTestBlast,ECN_Framework_Entities.Communicator.Blast}.TransformationEventArgs.TransformationDirection,EmailMarketing.API.Models.QuickTestBlast,ECN_Framework_Entities.Communicator.Blast,KMPlatform.Entity.User)">
            <summary>
            Provide transformation customization, available from InternalGet (which explicitly calls this) or via API methods in which case
            this method is called from the OnAfterTransformation handler.
            </summary>
            <param name="direction">For ToAPIModel, sets IsTestBlast in ApiModel from TestBlast in Framework model, 
            for ToFramework model, sets TestBlast in Framework model from IsTestBlast in ApiModel</param>
            <param name="apiModel">SimpleBlast</param>
            <param name="frameworkModel">Blast</param>
            <param name="user">Framework User</param>
            <param name="fetchFiltersAndSmartSegemnts">if true, when direction is ToAPIModel, also attempt to populate Filter and SmartSegment 
            arrays by calling <see cref="M:ECN_Framework_BusinessLayer.Communicator.CampaignItemBlast.GetByBlastID(System.Int32,KMPlatform.Entity.User,System.Boolean)"/></param>
        </member>
        <member name="M:EmailMarketing.API.Controllers.QuickTestBlastController.Post(EmailMarketing.API.Models.QuickTestBlast)">
            <summary>
            Create a simple test blast
            
             
            </summary>
            <example for="request"><![CDATA[
            POST http://api.ecn5.com/api/QuickTestBlast HTTP/1.1
            Content-Type: application/json; charset=utf-8
            Accept: application/json
            APIAccessKey: <YOUR_API_ACCESS_KEY>
            X-Customer-ID: 123
            Host: api.ecn5.com
            Content-Length: 453
            
            {
              "LayoutID": 654321,
              "CampaignName":"Test Marketing Campaign",
              "CampaignItemName":"Campaign Item Name",
              "EmailSubject": "POSTedBlast",
              "EmailFrom": "info@emailmarketing.com",        
              "EmailFromName": "FromName",
              "ReplyTo": "OmNom@gimme.com",
              "EnableCacheBuster":true,
              "SendText":true,
              "EmailPreview":true,
              "EmailAddress":"someone@test123.com,secondpersion@test123.com"
            }]]></example>
            
            <example for="response"><![CDATA[
            HTTP/1.1 201 Created
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Location: http://api.ecn5.com/api/QuickTestBlast/999999
            Server: Microsoft-IIS/7.5
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Mon, 10 Aug 2015 17:03:22 GMT
            Content-Length: 481
            
            {
              "BlastID":999999
              "LayoutID": 654321,
              "CampaignName":"Test Marketing Campaign",
              "CampaignItemName":"Campaign Item Name",
              "EmailSubject": "POSTedBlast",
              "EmailFrom": "info@emailmarketing.com",        
              "EmailFromName": "FromName",
              "ReplyTo": "OmNom@gimme.com",
              "EnableCacheBuster":true,
              "SendTextVersion":true,
              "EmailPreview":true,
              "EmailAddress":"someone@test123.com,secondpersion@test123.com",
            }]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.QuickTestBlastController.CleanseInputData_ValidateForeignKeys(EmailMarketing.API.Models.QuickTestBlast)">
            <summary>
            Validates GroupID, LayoutID, FilterID (if present and greater than zero), determines if a smart-segment is used,
            and validates layout content.  If issues are found, throws <see cref="T:ECN_Framework_Common.Objects.ECNException"/>.
            If LayoutID is invalid neither FilterID nor layout content can be validated.
            LayoutContent validation cannot be completed if content is uses custom fields which have not been defined.
            </summary>
            <param name="model">an API Object</param>
            <returns>An exception is thrown if any validation error is found. Otherwise, true if a smart segment is used.</returns>
        </member>
        <member name="T:EmailMarketing.API.Controllers.SimpleBlastController">
            <summary>
            API methods exposing a simplified version of the Blast object model as Resources for Create, Read, 
            Update and Delete via REST, and providing ancillary methods such as for reporting.
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Controllers.SimpleBlastController.#ctor">
            <summary>
            Constructor, subscribes for AfterTransformation events.
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Controllers.SimpleBlastController.InternalGet(System.Int32,KMPlatform.Entity.User,System.Boolean)">
            <summary>
            static Getter returns API (SimpleBlast) object via fetch of Framework object and explicit transform to APIModel type
            </summary>
            <param name="blastID">Blast ID</param>
            <param name="user">Framework User entity</param>
            <param name="fetchFiltersAndSmartSegments">if true, populate Filters and SmartSegments list properties</param>
            <returns><code>SimpleBlast</code> object, or null if object not found.</returns>
            <exception cref="T:ECN_Framework_Common.Objects.SecurityException">throw if <code>BlastID</code> exists but is not accessible by <code>user</code>.</exception>
        </member>
        <member name="P:EmailMarketing.API.Controllers.SimpleBlastController.FrameworkEntity">
            <inheritdoc/>
        </member>
        <member name="M:EmailMarketing.API.Controllers.SimpleBlastController.OnAfterTransformationInternal(EmailMarketing.API.Controllers.SearchableApiControllerBase{EmailMarketing.API.Models.SimpleBlast,ECN_Framework_Entities.Communicator.Blast}.TransformationEventArgs.TransformationDirection,EmailMarketing.API.Models.SimpleBlast,ECN_Framework_Entities.Communicator.Blast,KMPlatform.Entity.User,System.Boolean)">
            <summary>
            Provide transformation customization, available from InternalGet (which explicitly calls this) or via API methods in which case
            this method is called from the OnAfterTransformation handler.
            </summary>
            <param name="direction">For ToAPIModel, sets IsTestBlast in ApiModel from TestBlast in Framework model, 
            for ToFramework model, sets TestBlast in Framework model from IsTestBlast in ApiModel</param>
            <param name="apiModel">SimpleBlast</param>
            <param name="frameworkModel">Blast</param>
            <param name="user">Framework User</param>
            <param name="fetchFiltersAndSmartSegemnts">if true, when direction is ToAPIModel, also attempt to populate Filter and SmartSegment 
            arrays by calling <see cref="M:ECN_Framework_BusinessLayer.Communicator.CampaignItemBlast.GetByBlastID(System.Int32,KMPlatform.Entity.User,System.Boolean)"/></param>
        </member>
        <member name="M:EmailMarketing.API.Controllers.SimpleBlastController.Get(System.Int32)">
             <summary>Get a blast.  If Email Subject contains Emoji's, they will be in Unicode Escaped Format(\uXXXX)</summary>
             <param name="id">Blast ID</param>
             <returns>SimpleBlast API model object</returns>
            <example for="request"><![CDATA[
             GET http://api.ecn5.com/api/simpleblast/123456 HTTP/1.1
             Accept: application/json
             Accept-Language: en-US
             User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko
             Accept-Encoding: gzip, deflate
             Connection: Keep-Alive
             APIAccessKey: <YOUR-API-KEY-HERE>
             Host: api.ecn5.com
             X-Customer-ID: 77777
             ]]></example>
             <example for="response"><![CDATA[
             HTTP/1.1 200 OK
             Cache-Control: no-cache
             Pragma: no-cache
             Content-Type: application/json; charset=utf-8
             Expires: -1
             Server: Microsoft-IIS/7.5
             X-AspNet-Version: 4.0.30319
             X-Powered-By: ASP.NET
             Date: Sun, 26 Jul 2015 18:59:54 GMT
             Content-Length: 495
             
             {
                "BlastID":123456,
                "StatusCode":"Sent",
                "BlastType":"HTML",
                "Schedule":null,
                "IsTestBlast":true,
                "LayoutID":123456,
                "GroupID":654321,
                "FilterID":0,
                "SmartSegmentID":null,
                "ReferenceBlasts":null,
                "EmailSubject":"Loams Test",
                "EmailFrom":"info@knowledgemarketing.com",
                "EmailFromName":"knowledge marketing",
                "ReplyTo":"info@knowledgemarketing.com",
                "Filters":[
             
                ],
                "SmartSegments":[
             
                ],
                "SendTime":"2015-03-24T08:28:37",
                "CreatedUserID":4496,
                "CreatedDate":"2015-03-24T08:28:20",
                "UpdatedUserID":null,
                "UpdatedDate":null
             }
             ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.SimpleBlastController.Post(EmailMarketing.API.Models.SimpleBlast)">
            <summary>
            Create a simple blast
            
             **When using XML as the Content-Type, use only '&lt;StartDate&gt;Date&lt;/StartDate&gt;' rather than &lt;Schedule&gt;&lt;StartDate&gt;...&lt;/Schedule&gt; unless you are building a ScheduledBlast.
            </summary>
            <example for="request"><![CDATA[
            POST http://api.ecn5.com/api/simpleblast HTTP/1.1
            Content-Type: application/json; charset=utf-8
            Accept: application/json
            APIAccessKey: <YOUR_API_ACCESS_KEY>
            X-Customer-ID: 123
            Host: api.ecn5.com
            Content-Length: 453
            
            {
              "BlastType": "regular",        
              "Schedule":
              {
                "Type": "OneTime",
                "Recurrence": "OneTime",
                "Split": "Evenly",
                "StartDate": "2015-08-30 12:00:00",
                "EndDate": "2015-08-30 12:00:00",
                "HowManyWeeks": 1,
                "DayOfMonth":3,
                "Day":"Monday",
              },
              "IsTestBlast": false,
              "LayoutID": 654321,
              "GroupID": 123456,
              "EmailSubject": "POSTedBlast",
              "EmailFrom": "info@emailmarketing.com",        
              "EmailFromName": "FromName",
              "ReplyTo": "OmNom@gimme.com",
            }]]></example>
            
            <example for="response"><![CDATA[
            HTTP/1.1 201 Created
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Location: http://api.ecn5.com/api/simpleblast/999999
            Server: Microsoft-IIS/7.5
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Mon, 10 Aug 2015 17:03:22 GMT
            Content-Length: 481
            
            {
                "BlastID":999999,
                "StatusCode":"Pending",
                "BlastType":"HTML",
                "Schedule":null,
                "IsTestBlast":false,
                "LayoutID":654321,
                "GroupID":123456,
                "FilterID":null,
                "SmartSegmentID":null,
                "ReferenceBlasts":null,
                "EmailSubject":"POSTedBlast",
                "EmailFrom":"info@emailmarketing.com",
                "EmailFromName":"FromName",
                "ReplyTo":"OmNom@gimme.com",
                "Filters":null,
                "SmartSegments":null,
                "SendTime":"2015-08-30 12:00:00"
            }]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.SimpleBlastController.Put(System.Int32,EmailMarketing.API.Models.SimpleBlast)">
             <summary>
             Simple blast update
             </summary>
             <example for="request"><![CDATA[
            PUT http://api.ecn5.com/api/simpleblast/999999 HTTP/1.1
            Content-Type: application/json; charset=utf-8
            Accept: application/json
            APIAccessKey: <YOUR_API_ACCESS_KEY>
            X-Customer-ID: 123
            Host: api.ecn5.com
            Content-Length: 448
            
            {
              "BlastType": "regular",
              "Schedule": {
                "Type": "OneTime",
                "Recurrence": "OneTime",
                "Split": "Evenly",        
                "StartDate": "2015-08-30 12:00:00",
                "EndDate": "2015-08-30 12:00:00",
              },
              "IsTestBlast": false,
              "LayoutID": 123456,
              "GroupID": 654321,
              "EmailSubject": "UpdatedSubject",        
              "EmailFrom": "from@email.com",
              "EmailFromName": "FromName",
              "ReplyTo": "replyto@email.com",
            }
            ]]></example>
             <example for="response"> <![CDATA[
             HTTP/1.1 201 Created
             Cache-Control: no-cache
             Pragma: no-cache
             Content-Type: application/json; charset=utf-8
             Expires: -1
             Location: http://api.ecn5.com/api/simpleblast/999999
             Server: Microsoft-IIS/7.5
             X-AspNet-Version: 4.0.30319
             X-Powered-By: ASP.NET
             Date: Mon, 10 Aug 2015 17:04:00 GMT
             Content-Length: 489
             
             {
                "BlastID":999999,
                "StatusCode":"Pending",
                "BlastType":"HTML",
                "Schedule":null,
                "IsTestBlast":false,
                "LayoutID":123456,
                "GroupID":65432,
                "FilterID":null,
                "SmartSegmentID":null,
                "ReferenceBlasts":null,
                "EmailSubject":"UpdatedSubject",
                "EmailFrom":"from@email.com",
                "EmailFromName":"FromName",
                "ReplyTo":"replyto@email.com",
                "Filters":[],
                "SmartSegments":[],
                "SendTime":"2015-08-10T12:04:00",
                "CreatedUserID":1234,
                "CreatedDate":"2015-08-10T12:03:23",
                "UpdatedUserID":4321,
                "UpdatedDate":"2015-08-15T12:04:01"
             }
             ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.SimpleBlastController.Delete(System.Int32)">
            <summary>
            Simple blast removal
            </summary>       
            <example for="request"><![CDATA[
            DELETE http://api.ecn5.com/api/SimpleBlast/999999 HTTP/1.1
            Accept: application/json
            APIAccessKey: <YOUR_API_ACCESS_KEY>
            X-Customer-ID: 123
            Host: api.ecn5.com
            ]]></example>
            <example for="response"><![CDATA[
            HTTP/1.1 204 No Content
            Cache-Control: no-cache
            Pragma: no-cache
            Expires: -1
            Server: Microsoft-IIS/7.5
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Fri, 31 Jul 2015 16:44:15 GMT
            ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.SimpleBlastController.Search(EmailMarketing.API.Models.SearchBase)">
             <summary>
             Search by EmailSubject, GroupID, IsTest, StatusCode string, and/or ModifiedTo and/or ModifiedFrom dates.
             </summary>
             <example for="request"><![CDATA[
             GET http://api.ecn5.com/api/search/SimpleBlast HTTP/1.1
             Accept: application/json
             Content-Type: application/json
             APIAccessKey: <YOUR_API_ACCESS_KEY>
             X-Customer-ID: 123
             Host: api.ecn5.com
             
            {
                 "SearchCriteria": [
                 {
                     "Name": "EmailSubject",
                     "Comparator": "contains",
                     "ValueSet": "test"
                 },
                 {
                     "Name": "GroupID",
                     "Comparator": "=",
                     "ValueSet": "12345"
                 },
                 {
                     "Name": "IsTest",
                     "Comparator": "=",
                     "ValueSet": "false"
                 },
                 {
                     "Name": "StatusCode",
                     "Comparator": "=",
                     "ValueSet": "Sent"
                 },
                 {
                     "Name": "ModifiedTo",
                     "Comparator": "<=",
                     "ValueSet": "2015-09-01"
                 },
                 {
                     "Name": "ModifiedFrom",
                     "Comparator": ">=",
                     "ValueSet": "2015-01-01"
                 }
                 ] 
            }
             ]]></example>
             <example for="response"><![CDATA[
            HTTP/1.1 200 OK
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Server: Microsoft-IIS/7.5
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Mon, 10 Aug 2015 18:16:45 GMT
            Content-Length: 1765
            
            [
               {
               "ApiObject":
                  {
                     "BlastID":999999,
                     "StatusCode":"Sent",
                     "BlastType":"HTML",
                     "Schedule":null,
                     "IsTestBlast":false,
                     "LayoutID":888888,
                     "GroupID":12345,
                     "FilterID":null,
                     "SmartSegmentID":null,
                     "ReferenceBlasts":null,
                     "EmailSubject":"TestBlast1",
                     "EmailFrom":"from1@email.com",
                     "EmailFromName":"Knowledge Marketing",
                     "ReplyTo":"reply1@email.com",
                     "Filters":null,
                     "SmartSegments":null,
                     "SendTime":"2015-07-02T15:36:41",
                     "CreatedUserID":4444,
                     "CreatedDate":"2015-07-02T15:36:25",
                     "UpdatedUserID":null,
                     "UpdatedDate":null
                  },
                  "Location":"http://test.api.ecn5.com/api/simpleblast/999999"
               },
               {
               "ApiObject":
                  {
                     "BlastID":111111,
                     "StatusCode":"Sent",
                     "BlastType":"HTML",
                     "Schedule":null,
                     "IsTestBlast":false,
                     "LayoutID":222222,
                     "GroupID":12345,
                     "FilterID":null,
                     "SmartSegmentID":null,
                     "ReferenceBlasts":null,
                     "EmailSubject":"TestBlast2",
                     "EmailFrom":"from2@email.com",
                     "EmailFromName":"Knowledge Marketing",
                     "ReplyTo":"reply@email.com",
                     "Filters":null,
                     "SmartSegments":null,
                     "SendTime":"2015-07-23T14:24:00",
                     "CreatedUserID":4444,
                     "CreatedDate":"2015-07-23T14:23:44",
                     "UpdatedUserID":null,
                     "UpdatedDate":null
                  },
                  "Location":"http://test.api.ecn5.com/api/simpleblast/111111"
               }
            ]
            ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.SimpleBlastController.GetBlastBounceReport(System.Int32,System.Boolean)">
             <summary>
             Simple Report of Blast Bounces.  Will only return response in JSON format.
             </summary>
             <param name="id">Blast ID</param>
             <param name="withDetail">pass true to get a report including detail</param>
             <returns>data table</returns>
             <example for="request"><![CDATA[
             GET http://api.ecn5.com/api/simpleblast/999999/Report/Bounces?withDetail=false HTTP/1.1
             Accept: application/json
             Accept-Language: en-US
             User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko
             Accept-Encoding: gzip, deflate
             Connection: Keep-Alive
             APIAccessKey: <YOUR_API_ACCESS_KEY>
             X-Customer-ID: 123
             Host: api.ecn5.com
             ]]></example>
             
             <example for="response"><![CDATA[
            HTTP/1.1 200 OK
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Server: Microsoft-IIS/7.5
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Mon, 10 Aug 2015 19:07:17 GMT
            Content-Length: 94368
            
            [
               {
                  "BounceTime":"6/21/2015 12:49:07 PM",
                  "EmailAddress":"email1@email.com",
                  "BounceType":"softbounce",
                  "BounceSignature":"unable to connect"
               },
               {
                  "BounceTime":"6/17/2015 10:20:52 PM",
                  "EmailAddress":"email2@email.com",
                  "BounceType":"blocks",
                  "BounceSignature":"smtp; 554 5.7.1 email2@email.com: relay access denied"
               },
               {
                  "BounceTime":"6/17/2015 9:47:16 PM",
                  "EmailAddress":"email3@email.com",
                  "BounceType":"hardbounce",
                  "BounceSignature":"smtp;400 4.4.7 message delayed"
               },
            ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.SimpleBlastController.GetBlastClicksReport(System.Int32,EmailMarketing.API.Models.Reports.ClickReportFilterType,System.Boolean)">
             <summary>
             Simple Report of Blast Clicks.  Will only return response in JSON format.
             </summary>
             <param name="id">Blast ID</param>
             <param name="filterType">All or Unique</param>
             <param name="withDetail">pass true to get a report including detail</param>
             <returns></returns>
             <example for="request"><![CDATA[
             GET http://api.ecn5.com/api/SimpleBlast/99999/Report/Clicks?filterType=0&withDetail=false HTTP/1.1
             Accept: application/json
             APIAccessKey: <YOUR_API_ACCESS_KEY>
             X-Customer-ID: 123
             Host: api.ecn5.com
             
             ]]></example>
             <example for="response"><![CDATA[
            HTTP/1.1 200 OK
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Server: Microsoft-IIS/7.5
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Mon, 10 Aug 2015 18:43:44 GMT
            Content-Length: 539
            
            [
               {
                  "ClickTime":"7/17/2015 8:59:55 AM",
                  "EmailAddress":"emailaddress1@email.com",
                  "Link":"http://www.knowledgemarketing.com"
               },
               {
                  "ClickTime":"7/16/2015 11:44:41 AM",
                  "EmailAddress":"emailaddress1@email.com",
                  "Link":"http://www.kmlearningcenter.com"
               },
               {
                  "ClickTime":"7/13/2015 12:35:58 PM",
                  "EmailAddress":"emailaddress2@email.com",
                  "Link":"http://www.kmlearningcenter.com"
               }
            ]
             ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.SimpleBlastController.GetBlastDeliveryReport(System.DateTime,System.DateTime)">
             <summary>
             Simple Report of Blast Delivery detail.  Will only return response in JSON format.
             </summary>
             <param name="id">Blast ID</param>
             <param name="fromDate">required, inclusive date after which the blast must have been created/updated to be included in the report</param>
             <param name="toDate">required, inclusive date before which the blast must have been created/updated to be included in the report</param>
             <returns>data table</returns>
             <example for="request"><![CDATA[
            GET http://api.ecn5.com/api/simpleblast/999999/Report/Delivery?fromDate=2015-07-13&toDate=2015-07-30 HTTP/1.1
            Accept: application/json
            Accept-Language: en-US
            User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko
            Accept-Encoding: gzip, deflate
            Connection: Keep-Alive
            APIAccessKey: <YOUR_API_ACCESS_KEY>
            X-Customer-ID: 123
            Host: api.ecn5.com
             ]]></example>
             <example for="response"><![CDATA[
            HTTP/1.1 200 OK
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Server: Microsoft-IIS/7.5
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Fri, 31 Jul 2015 18:44:12 GMT
            Content-Length: 1268
            
            [
               {
                  "blastID":999999,
                  "sendtime":"2015-07-29T12:06:13.413",
                  "emailsubject":"EmailSubject",
                  "groupname":"GroupName",
                  "FilterName":"",
                  "CampaignName":"CampName",
                  "sendtotal":129,
                  "Delivered":110,
                  "softbouncetotal":9,
                  "hardbouncetotal":5,
                  "OtherBouncetotal":5,
                  "bouncetotal":19,
                  "UniqueOpens":105,
                  "TotalOpens":153,
                  "UniqueClicks":52,
                  "TotalClicks":79,
                  "UnsubscribeTotal":0,
                  "suppressedtotal":0,
                  "MobileOpens":12,
                  "FromEmail":"from@email.com",
                  "CampaignItemName":"CampItemName",
                  "CustomerName":"CustomerName",
                  "Field1":null,
                  "Field2":null,
                  "Field3":null,
                  "Field4":null,
                  "Field5":null,
                  "Abuse":0,
                  "Feedback":0,
                  "SpamCount":0
               },
            ]
             ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.SimpleBlastController.GetBlastOpensReport(System.Int32,EmailMarketing.API.Models.Reports.ClickReportFilterType,System.Boolean)">
             <summary>
             Simple Report of Blast Opens.  Will only return response in JSON format.
             </summary>
             <param name="id">Blast ID</param>
             <param name="filterType">All or Unique</param>
             <param name="withDetail">pass true to get a report including detail</param>
             <returns></returns>
             <example for="request"><![CDATA[
            GET http://api.ecn5.com/api/simpleblast/999999/Report/Opens?filterType=1&withDetail=false HTTP/1.1
            Accept: application/json
            Accept-Language: en-US
            User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko
            Accept-Encoding: gzip, deflate
            Connection: Keep-Alive
            APIAccessKey: <YOUR_API_ACCESS_KEY>
            X-Customer-ID: 123
            Host: api.ecn5.com
             ]]></example>
             
             <example for="response"><![CDATA[
            HTTP/1.1 200 OK
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Server: Microsoft-IIS/7.5
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Mon, 10 Aug 2015 18:57:16 GMT
            Content-Length: 335
            [
               {
                  "OpenTime":"8/7/2015 1:54:26 PM",
                  "EmailAddress":"emailaddress@email.com",
                  "Info":"70.89.199.237 | Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727;
                  .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; Microsoft Outlook 15.0.4737; ms-office; MSOffice 15)"
               }
            ]
             ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.SimpleBlastController.GetBlastReport(System.Int32)">
            <summary>
            Simple blast report given BlastID.  Will only return response in JSON format.
            </summary>
            <param name="id"></param>
            <returns></returns>
            <example for="request"><![CDATA[
            GET http://api.ecn5.com/api/simpleblast/1234567/Report HTTP/1.1
            Accept: application/json
            Accept-Language: en-US
            User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko
            Accept-Encoding: gzip, deflate
            Connection: Keep-Alive
            APIAccessKey: <YOUR-API-KEY-HERE>
            Host: api.ecn5.com
            X-Customer-ID: 77777
            
            ]]></example>
            <example for="response"><![CDATA[
            HTTP/1.1 200 OK
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Server: Microsoft-IIS/7.5
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Sun, 26 Jul 2015 15:48:35 GMT
            Content-Length: 519
            {
               "Sends":{
                  "RowType":"Sends",
                  "DistinctCount":11,
                  "TotalCount":11,
                  "UniquePercent":100.0,
                  "TotalPercent":100.0
               },
               "Opens":{
                  "RowType":"Opens",
                  "DistinctCount":5,
                  "TotalCount":9,
                  "UniquePercent":45.0,
                  "TotalPercent":81.0
               },
               "Bounces":{
                  "RowType":"Bounces",
                  "DistinctCount":0,
                  "TotalCount":0,
                  "UniquePercent":0.0,
                  "TotalPercent":0.0
               },
               "Resends":{
                  "RowType":"Resends",
                  "DistinctCount":0,
                  "TotalCount":0,
                  "UniquePercent":0.0,
                  "TotalPercent":0.0
               },
               "Clicks":{
                  "RowType":"Clicks",
                  "DistinctCount":5,
                  "TotalCount":7,
                  "UniquePercent":71.4,
                  "TotalPercent":63.0
               }
            }
            ]]></example>
            
        </member>
        <member name="M:EmailMarketing.API.Controllers.SimpleBlastController.GetBlastReportByISP(System.Int32,System.String[])">
            <summary>
            Simple Report of Blast detail by ISP.  Will only return response in JSON format.
            </summary>
            <param name="id">Blast ID</param>
            <param name="ISPList">list of ISPs, as strings</param>
            <returns>data table</returns>
            <example for="request"><![CDATA[
            POST http://api.ecn5.com/api/simpleblast/999999/Report/ISP HTTP/1.1
            Accept: application/json
            Accept-Language: en-US
            Content-Type: application/json
            User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko
            Accept-Encoding: gzip, deflate
            Connection: Keep-Alive
            APIAccessKey: <YOUR_API_ACCESS_KEY>
            X-Customer-ID: 123
            Host: api.ecn5.com
            Content-Length: 73
            
            [
               "Comcast",
               "Verizon",
               "Frontier",
            ]
            
            ]]></example>
            <example for="response"><![CDATA[
            HTTP/1.1 200 OK
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Server: Microsoft-IIS/7.5
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Mon, 10 Aug 2015 19:13:15 GMT
            Content-Length: 704
            
            [
               {
                  "ISPs":"Comcast",
                  "Sends":"0",
                  "opens":"0",
                  "clicks":"0",
                  "bounces":"0",
                  "unsubscribes":"0",
                  "resends":"0",
                  "forwards":"0",
                  "feedbackUnsubs":"0"
               },
               {
                  "ISPs":"Frontier",
                  "Sends":"0",
                  "opens":"0",
                  "clicks":"0",
                  "bounces":"0",
                  "unsubscribes":"0",
                  "resends":"0",
                  "forwards":"0"
                  ,"feedbackUnsubs":"0"
               },
               {
                  "ISPs":"Verizon",
                  "Sends":"0",
                  "opens":"0",
                  "clicks":"0",
                  "bounces":"0",
                  "unsubscribes":"0",
                  "resends":"0",
                  "forwards":"0",
                  "feedbackUnsubs":"0"
               }
            ]
            ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.SimpleBlastController.GetBlastUnsubscribeReport(System.Int32)">
            <summary>
            Report blast unsubscribe activity.  Will only return response in JSON format.
            </summary>
            <param name="id">BlastID</param>
            <returns>a data-table, as JSON or XML per Content-Accept header.</returns>
            <example for="request"><![CDATA[
            GET http://api.ecn5.com/api/simpleblast/999999/Report/Unsubscribe HTTP/1.1
            Accept: application/json
            Accept-Language: en-US
            User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko
            Accept-Encoding: gzip, deflate
            Connection: Keep-Alive
            APIAccessKey: <YOUR_API_ACCESS_KEY>
            X-Customer-ID: 123
            Host: api.ecn5.com
            
            
            ]]></example>
            <example for="response"><![CDATA[
            HTTP/1.1 200 OK
            Cache-Control: no-cache
            Pragma: no-cache         
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Server: Microsoft-IIS/7.5
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Mon, 10 Aug 2015 19:21:46 GMT
            Content-Length: 36170
            
            [
               {
                  "EmailAddress":"address@email.com",
                  "UnsubscribeTime":"6/17/2015 2:15:25 PM",
                  "SubscriptionChange":"unsubscribe",
                  "Reason":"UNSUBSCRIBED THRU BLAST: 999999 FOR GROUP: 1234",
                  "Title":"",
                  "FirstName":"First",
                  "LastName":"Last",
                  "FullName":"",
                  "Company":"Knowledge Marketing",
                  "Occupation":"Tester",
                  "Address":""3650 Annapolis Lane North,
                  "Address2":"",
                  "City":"Plymouth",
                  "State":"MN",
                  "Zip":"55447",
                  "Country":"USA",
                  "Voice":"8668446275",
                  "Mobile":"",
                  "Fax":"",
                  "Website":"http://www.knowledgemarketing.com",
                  "Age":"25",
                  "Income":"",
                  "Gender":"F",
                  "User1":"",
                  "User2":"",
                  "User3":"",
                  "User4":"",
                  "User5":"",
                  "User6":"",
                  "Birthdate":"01/01/1990",
                  "UserEvent1":"",
                  "UserEvent1Date":"",
                  "UserEvent2":"",
                  "UserEvent2Date":"",
                  "CreatedOn":"5/4/2015 10:03:27 AM",
                  "LastChanged":"6/17/2015 2:15:25 PM",
                  "FormatTypeCode":"html",
                  "SubscribeTypeCode":"U",
                  "tmp_EmailID":"",
                  "BUSINESS":"",
                  "CAT":"",
                  "Demo10":"",
                  "Demo11":"",
                  "Demo13":"",
                  "Demo9":"",
                  "EmailType":"",
                  "EMPLOYER":"",
                  "ForZip":"",
                  "FUNCTION":"",
                  "FUNCTION1":"",
                  "Job":"",
                  "MailStop":"",
                  "Plus4":"",
                  "PROMOCODE":"",
                  "Pub":"",
                  "PubCode":"",
                  "SubscriberID":"",
                  "XACT":""
               },
            ]
            ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.SimpleBlastController.GetTestBlastLimit">
            <summary>
            Get test blast limit
            </summary>
            <returns></returns>
            <example for="request"><![CDATA[
            GET http://api.ecn5.com/api/simpleblast/methods/TestBlastLimit HTTP/1.1
            Host: api.ecn5.com
            Accept: application/json
            APIAccessKey: <YOUR-API-KEY-HERE>
            X-Customer-ID: 77777
            
            ]]></example>
            <example for="response"><![CDATA[
            HTTP/1.1 200 OK
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Server: Microsoft-IIS/7.5
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Mon, 27 Jul 2015 16:05:11 GMT
            Content-Length: 2
            
            10
            ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.SimpleBlastController.CleanseInputData_ValidateForeignKeys(EmailMarketing.API.Models.SimpleBlast)">
            <summary>
            Validates GroupID, LayoutID, FilterID (if present and greater than zero), determines if a smart-segment is used,
            and validates layout content.  If issues are found, throws <see cref="T:ECN_Framework_Common.Objects.ECNException"/>.
            If LayoutID is invalid neither FilterID nor layout content can be validated.
            LayoutContent validation cannot be completed if content is uses custom fields which have not been defined.
            </summary>
            <param name="model">an API Object</param>
            <returns>An exception is thrown if any validation error is found. Otherwise, true if a smart segment is used.</returns>
        </member>
        <member name="T:EmailMarketing.API.Controllers.FolderController">
            <summary>
            API methods exposing the Email Marketing Folder object model as Resources for Create, Read, 
            Update and Delete via REST.  
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Controllers.FolderController.FrameworkEntity">
            <inheritdoc/>
        </member>
        <member name="P:EmailMarketing.API.Controllers.FolderController.ExposedProperties">
            <summary>
            Lists common properties between the (external) API model and the associated (internal) framework model by this service.
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Controllers.FolderController.Get(System.Int32)">
            <summary>
            Retrieves the Folder resource identified by <pre>id</pre> for groups, content, and messages
            </summary>
            <param name="id">FolderID for the target resource</param>
            <returns>On success, a Folder API model object; otherwise,
            <note>In most cases returns Http Status Code <pre>200 OK</pre>; however, if the target 
            resource doesn't exist --for example, if it has been deleted-- the result is 
            <pre>Error 404 - Not Found.</pre></note> </returns>
            <example for="request"><![CDATA[
            GET http://api.ecn5.com/api/folder/99999 HTTP/1.1
            Accept: application/json
            Accept-Language: en-US
            User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko
            Accept-Encoding: gzip, deflate
            Connection: Keep-Alive
            APIAccessKey: <YOUR-API-ACCESS-KEY-HERE>
            X-Customer-ID: 99999
            Host: api.ecn5.com
            
            ]]></example>
            
            <example for="response"><![CDATA[
            HTTP/1.1 200 OK
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Server: Microsoft-IIS/7.5
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Tue, 09 Jun 2015 19:35:04 GMT
            Content-Length: 158
            
            {
               "FolderID":111,
               "FolderName":"MyFolder",
               "ParentID":0,
               "FolderDescription":"My Folder Description",
               "CreatedDate":null,
               "CreatedUserID":0,
               "UpdatedDate":null,
               "UpdatedUserID":0123
            }
            ]]></example>
            
        </member>
        <member name="M:EmailMarketing.API.Controllers.FolderController.Post(EmailMarketing.API.Models.Folder)">
            <summary>
            Given a Folder model object, add a new resource, assigning unique FolderID attribute (and REST Location 
            property).
            </summary>
            
            <param name="model">Folder model object</param>
            
            <returns>On success, returns the given model object with <pre>FolderID</pre> filled in, 
            as well as a <pre>Folder</pre> header.  In case of validation error(s), 
            Error <pre>400 - Bad Request</pre> is returned along with a message providing further 
            information.</returns>
            
            <header for="request">APIAccessKey</header>
            <header for="response">Location</header>
            
            <example for="request"><![CDATA[
            POST /api/Folder HTTP/1.1
            Accept: application/json
            Accept-Language: en-US
            User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko
            Accept-Encoding: gzip, deflate
            Connection: Keep-Alive
            APIAccessKey: <YOUR-API-ACCESS-KEY-HERE>
            X-Customer-ID: 99999
            Content-Type: application/json
            Host: api.ecn5.com
            
            { 
              "FolderName":"MyFolder",
              "FolderType":"CNT",
              "ParentID":0,
              "FolderDescription":"MyFolderDescription"
            }
            
            ]]></example>
            
            <example for="response"><![CDATA[
            HTTP/1.1 201 Created
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Location: http://api.ecn5.com/api/folder/99999
            Server: Microsoft-IIS/7.5
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Tue, 16 Jun 2015 14:48:54 GMT
            Content-Length: 114
            
            {
            "FolderID":99999,
            "FolderName":"MyFolder",
            "ParentID":0,
            "FolderDescription":"MyFolderDescription",
            "FolderType":"CNT"
            }
            ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.FolderController.Put(System.Int32,EmailMarketing.API.Models.Folder)">
            <summary>
            Updates resource identified by <pre>id</pre> with the given model object
            </summary>
            <param name="id">FolderID for the target resource</param>
            <param name="apiModel">Folder model object</param>
            <returns>On success, returns the given model object as well as a <pre>Location</pre> header.  
            In case of validation error(s), 
            Error <pre>400 - Bad Rquest</pre> is returned along with a message providing further 
            information.</returns>
            <example for="request"><![CDATA[
            PUT http://api.ecn5.com/api/folder/99999 HTTP/1.1
            Accept: application/json
            Accept-Language: en-US
            User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko
            Accept-Encoding: gzip, deflate
            Connection: Keep-Alive
            APIAccessKey: <YOUR-API-ACCESS-KEY-HERE>
            X-Customer-ID: 99999
            Content-Type: application/json
            Host: api.ecn5.com
            
            { 
              "FolderID":99999,
              "FolderName":"MyFolderUpdate",
              "FolderType":"CNT",
              "ParentID":0,
              "FolderDescription":"MyFolderDescription"
            }
            
            ]]></example>
            
            <example for="response"><![CDATA[
            HTTP/1.1 201 Created
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Location: http://api.ecn5.com/api/folder/99999
            Server: Microsoft-IIS/7.5
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Tue, 16 Jun 2015 15:13:40 GMT
            Content-Length: 122
            {
                "FolderID":99999,
                "FolderName":"MyFolderUpdate",
                "ParentID":0,
                "FolderDescription":"MyFolderDescription",
                 "FolderType":"CNT",
                "CreatedDate":null,
                "CreatedUserID":0,
                "UpdatedDate":null,
                "UpdatedUserID":99999
            }
            ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.FolderController.Delete(System.Int32)">
            <summary>
            Removes a Folder resource.
            </summary>
            <param name="id">FolderID of the target resource</param>
            <example for="request"><![CDATA[
            DELETE http://api.ecn5.com/api/folder/99999 HTTP/1.1
            Accept: application/xml
            APIAccessKey: <YOUR-API-ACCESS-KEY-HERE>
            X-Customer-ID: 99999
            Host: api.ecn5.com
            ]]></example>
            
            <example for="response"><![CDATA[
            HTTP/1.1 204 No Content
            Cache-Control: no-cache
            Pragma: no-cache
            Expires: -1
            Server: Microsoft-IIS/7.5
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Tue, 16 Jun 2015 15:21:46 GMT
            ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.FolderController.Search(EmailMarketing.API.Models.SearchBase)">
             <summary>
             Provides search capabilities for Folder resources. Search supports both GET and POST methods; results will be identical.
             Note, <code>Type</code> is always required for folder search.
             </summary>
             <see cref="T:EmailMarketing.API.Models.Folder"/>
             <param name="searchQuery">used to constrain the search</param>
             <returns>a list of matching <see cref="T:EmailMarketing.API.Models.Folder"/> as Folder/API Object pairs.</returns>
             
             <example for="request"><![CDATA[
             
             * All "Content" folders
             
             GET http://api.ecn5.com/api/search/folder HTTP/1.1
             Content-Type: application/json; charset=utf-8
             Accept: application/json
             APIAccessKey: <YOUR-API-ACCESS-KEY-HERE>
             X-Customer-ID: 99999
             Host: api.ecn5.com
             Content-Length: 357
             
             {  
                 "SearchCriteria": [
                 {
                     "Name": "Type",
                     "Comparator": "=",
                     "ValueSet": "CNT"
                 }
                 ]
             }
             
             * All "Group" folders
             
             GET http://api.ecn5.com/api/search/folder HTTP/1.1
             Content-Type: application/json; charset=utf-8
             Accept: application/json
             APIAccessKey: <YOUR-API-ACCESS-KEY-HERE>
             X-Customer-ID: 99999
             Host: api.ecn5.com
             Content-Length: 357
                
             {  
                 "SearchCriteria": [
                 {
                     "Name": "Type",
                     "Comparator": "=",
                     "ValueSet": "GRP"
                 }
                 ]
             }
            
             
             ]]></example>
             
             <example for="response"><![CDATA[
             HTTP/1.1 200 OK
             Cache-Control: no-cache
             Pragma: no-cache
             Content-Type: application/json; charset=utf-8
             Expires: -1
             Server: Microsoft-IIS/7.5
             X-AspNet-Version: 4.0.30319
             X-Powered-By: ASP.NET
             Date: Wed, 17 Jun 2015 18:37:51 GMT
             Content-Length: 427
             
             [  
                {  
                   "ApiObject":
                   {  
                      "FolderID":99998,
                      "FolderName":"MyFolder1",
                      "ParentID":99999,
                      "FolderDescription":"MyDescription1",
                      "FolderType":"CNT"
                   },
                   "Location":"http://api.ecn5.com/api/folder/99999"
                },
                {  
                   "ApiObject":
                   {  
                      "FolderID":99999,
                      "FolderName":"MyFolder2",
                      "ParentID":99999,
                      "FolderDescription":"MyDescription2",
                      "FolderType":"CNT"
                   },
                   "Location":"http://api.ecn5.com/api/folder/99999"
                }
             ]
             ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.FolderController.CleanseInputData(EmailMarketing.API.Models.Folder)">
            <summary>
            Prepares the incoming APIModel from a POST for transformation to Framework model
            </summary>
            <param name="model">The API Model instance provided for insert via HTTP POST</param>
        </member>
        <member name="T:EmailMarketing.API.Controllers.ImageController">
            <summary>
            API methods exposing the Image object model as Resources for Create, Read, 
            Update and Delete via REST.  
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Controllers.ImageController.FrameworkEntity">
            <inheritdoc/>
        </member>
        <member name="P:EmailMarketing.API.Controllers.ImageController.ExposedProperties">
            <summary>
            Lists common properties between the (external) API model and the associated (internal) framework model by this service.
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Controllers.ImageController.Get(System.Int32)">
            <summary>This feature is not implemented</summary>
            <param name="id">ImageID for the target resource</param>
            <returns>On success, a Image API model object; otherwise,
            <note>In most cases returns Http Status Code <pre>200 OK</pre>; however, if the target 
            resource doesn't exist --for example, if it has been deleted-- the result is 
            <pre>Error 404 - Not Found.</pre></note> </returns>
            <example for="request"><![CDATA[
            ]]></example>
            
            <example for="response"><![CDATA[
            ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.ImageController.Post(EmailMarketing.API.Models.Image)">
             <summary>
             Given a Image model object, add a new resource (and REST Location 
             property).
             </summary>
             
             <param name="model">Image model object</param>
             
             <returns>On success, returns the given model object, 
             with a <pre>Location</pre> header.  In case of validation error(s), 
             Error <pre>400 - Bad Request</pre> is returned along with a message providing further 
             information.</returns>
             
             <header for="request">APIAccessKey</header>
             <header for="response">Location</header>
             
             <example for="request"><![CDATA[
             POST /api/image HTTP/1.1
             Content-Type: application/json; charset=utf-8
             Accept: application/json
             APIAccessKey: <YOUR_API_ACCESS_KEY>
             X-Customer-ID: 123
             Host: api.ecn5.com
             Content-Length: 18621
             
             {
                 "FolderName":"MyFolder",
                 "ImageName":"NewImage.jpg",
                 "ImageData":[ <YOUR_BYTE_ARRAY> ] 
             }
             ]]></example>
             
             <example for="response"><![CDATA[
             HTTP/1.1 201 Created
             Cache-Control: no-cache
             Pragma: no-cache
             Content-Type: application/json; charset=utf-8
             Expires: -1
             Location: /api/image/0
             Server: Microsoft-IIS/7.5
             X-AspNet-Version: 4.0.30319
             X-Powered-By: ASP.NET
             Date: Tue, 16 Jun 2015 14:51:01 GMT
             Content-Length: 4731
             
             {
                 "FolderID": 123,
                 "FolderName": "MyFolder",
                 "ImageName": "NewImage.jpg",
                 "ImageID":0,
                 "ImageURL":,
                 "ImageData":[ <YOUR_BYTE_ARRAY> ]
            }
             ]]></example>
             
        </member>
        <member name="M:EmailMarketing.API.Controllers.ImageController.Put(EmailMarketing.API.Models.Image)">
            <summary>
            This feature is not implemented 
            </summary>
            <param name="apiModel">Image model object</param>
            <returns>On success, returns the given model object as well as a <pre>Location</pre> header.  
            In case of validation error(s), 
            Error <pre>400 - Bad Rquest</pre> is returned along with a message providing further 
            information.</returns>
            <example for="request"><![CDATA[
            ]]></example>
            
            <example for="response"><![CDATA[
            ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.ImageController.Delete(EmailMarketing.API.Models.Image)">
             <summary>
             Removes target resource.
             </summary>
             <param name="model">Model containing the ImageName and the FolderName of the target resource</param>
             <example for="request"><![CDATA[
             DELETE /api/image HTTP/1.1
             Content-Type: application/json; charset=utf-8
             Accept: application/json
             APIAccessKey: <YOUR_API_ACCESS_KEY>
             X-Customer-ID: 123
             Host: api.ecn5.com
             
             {
                 "FolderName":"MyFolder",
                 "ImageName":"ImageToBeDeleted.jpg"
             }
             
             ]]></example>
            <example for="response"><![CDATA[
             HTTP/1.1 204 No Content
             Cache-Control: no-cache
             Pragma: no-cache
             Expires: -1
             Server: Microsoft-IIS/7.5
             X-AspNet-Version: 4.0.30319
             X-Powered-By: ASP.NET
             Date: Tue, 16 Jun 2015 16:00:44 GMT
             
             ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.ImageController.Search(EmailMarketing.API.Models.SearchBase)">
             <summary>
             Provides search capabilities for Image resources. Search supports both GET and POST methods; results will be identical.  Note, search does not currently ImageData for the returned images. 
             To retrieve image file content make a separate GET request for ImageURL of a particular image.
             </summary>
             <see cref="T:EmailMarketing.API.Models.Image"/>
             <param name="searchQuery">used to constrain the search</param>
             <returns>a list of matching <see cref="T:EmailMarketing.API.Models.Image"/> as Location/API Object pairs.</returns>
             
             <example for="request"><![CDATA[
             
             Search for "MyImage.jpg" in "MyFolder" and all sub-folders
             
             GET http://api.ecn5.com/api/search/image HTTP/1.1
             Content-Type: application/json; charset=utf-8
             Accept: application/json
             APIAccessKey: <YOUR_API_ACCESS_KEY>
             X-Customer-ID: 123
             Host: api.ecn5.com
             Content-Length: 161
             
            {
                 "SearchCriteria": [
                 {
                     "Name": "ImageName",
                     "Comparator": "=",
                     "ValueSet": "MyImage.jpg"
                 },
                 {
                     "Name": "FolderName",
                     "Comparator": "=",
                     "ValueSet": "MyFolder"
                 },
                 {
                     "Name": "Recursive",
                     "Comparator": "=",
                     "ValueSet": "true"
                 }
                 ]
            }
             
             Search for all images in any folder with a filename containing "MyImage"
             
             GET http://api.ecn5.com/api/search/image HTTP/1.1
             Content-Type: application/json; charset=utf-8
             Accept: application/json
             APIAccessKey: <YOUR_API_ACCESS_KEY>
             X-Customer-ID: 123
             Host: api.ecn5.com
             Content-Length: 87
             
            {
                 "SearchCriteria": [
                 {
                     "Name": "ImageName",
                     "Comparator": "contains",
                     "ValueSet": "MyImage.jpg"
                 },
                 {
                     "Name": "Recursive",
                     "Comparator": "=",
                     "ValueSet": "true"
                 }
                 ]
            }
             
             Search for all images in the folder "MyFolder", not including sub-folders.
             
             GET http://api.ecn5.com/api/search/image HTTP/1.1
             Content-Type: application/json; charset=utf-8
             Accept: application/json
             APIAccessKey: <YOUR_API_ACCESS_KEY>
             X-Customer-ID: 123
             Host: api.ecn5.com
             Content-Length: 68
             
            {
                 "SearchCriteria": [
                 {
                     "Name": "FolderName",
                     "Comparator": "=",
                     "ValueSet": "MyFolder"
                 }
                 ]
            }
             
             Search for images in the images root folder.
             
             GET http://api.ecn5.com/api/search/image HTTP/1.1
             Content-Type: application/json; charset=utf-8
             Accept: application/json
             APIAccessKey: <YOUR_API_ACCESS_KEY>
             X-Customer-ID: 123
             Host: api.ecn5.com
             Content-Length: 2
             
            {
                 "SearchCriteria": []
            }
             
             Search for all images.
             
             GET http://api.ecn5.com/api/search/image HTTP/1.1
             Content-Type: application/json; charset=utf-8
             Accept: application/json
             APIAccessKey: <YOUR_API_ACCESS_KEY>
             X-Customer-ID: 123
             Host: api.ecn5.com
             Content-Length: 64
             
             {  
                "SearchCriteria": [ 
                { 
                      "name":"Recursive",
                      "comparator":"=",
                      "valueSet":"true"
                 }
                 ]
             }
             
             ]]></example>
             
             <example for="response"><![CDATA[
             HTTP/1.1 200 OK
             Cache-Control: no-cache
             Pragma: no-cache
             Content-Type: application/json; charset=utf-8
             Expires: -1
             Server: Microsoft-IIS/7.5
             X-AspNet-Version: 4.0.30319
             X-Powered-By: ASP.NET
             Date: Wed, 17 Jun 2015 17:31:45 GMT
             Content-Length: 286
             
             [  
                {  
                   "ApiObject":{  
                      "FolderName":"F1/F2/F3",
                      "FolderID":-1,
                      "ImageID":0,
                      "ImageName":"MyImage.jgp",
                      "ImageData":,
                      "ImageURL":"http://www.ecn5.com/ecn.images/Customers/123/Images/F1/F2/F3/MyImage.jpg"
                   },
                   "Location":"http://api.ecn5.com/EmailMarketing.API/api/image/0"
                }
             ]
             ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.ImageController.CleanseInputData(EmailMarketing.API.Models.Image)">
            <summary>
            Default data assignment to avoid code breaking errors
            </summary>
            <param name="apiModel">The APIModel that is being acted upon by HTTP PUT or HTTP POST</param>
        </member>
        <member name="M:EmailMarketing.API.Controllers.ImageController.POST_FillFrameworkModelInternalFields(ECN_Framework_Entities.Communicator.Image)">
            <summary>
            Prepares APIModel from a POST for transformation to a FrameworkModel
            </summary>
            <param name="frameworkModel">The API Model instance provided for insert via HTTP POST</param>
        </member>
        <member name="M:EmailMarketing.API.Controllers.ImageController.PUT_FillFrameworkModelInternalFields(ECN_Framework_Entities.Communicator.Image)">
            <summary>
            Prepares APIModel from a PUT for transformation to a FrameworkModel
            </summary>
            <param name="frameworkModel">The APIModel instance provided for update via HTTP PUT</param>
        </member>
        <member name="T:EmailMarketing.API.Controllers.ImageFolderController">
            <summary>
            API methods exposing the Image Folder object model as Resources for Create, Read, 
            Update and Delete via REST.  
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Controllers.ImageFolderController.FrameworkEntity">
            <inheritdoc/>
        </member>
        <member name="M:EmailMarketing.API.Controllers.ImageFolderController.Get(System.Int32)">
            <summary>
            This feature is not implemented
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Controllers.ImageFolderController.Post(EmailMarketing.API.Models.ImageFolder)">
             <summary>
             Create an image folder
             </summary>
             <example for="request"><![CDATA[
             POST http://api.ecn5.com/api/imagefolder HTTP/1.1
             Content-Type: application/json; charset=utf-8
             Accept: application/json
             APIAccessKey: 15bcb4b3-197e-4ad9-9e83-b9ce837e45ab
             X-Customer-ID: 1
             Host: api.ecn5.com
             Content-Length: 35
             
             {
                "FolderName":"ExampleFolderName",
             }
             ]]></example>
            
            <example for="response"><![CDATA[
            HTTP/1.1 201 Created
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Location: http://api.ecn5.com/api/imagefolder/0
            Server: Microsoft-IIS/7.5
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Fri, 14 Aug 2015 23:38:54 GMT
            Content-Length: 153
            
            {
               "FolderID":0,
               "FolderName":"AddedViaAPI\",
               "FolderFullName":"AddedViaAPI\",
               "FolderUrl":"http://www.ecn5.com/ecn.images/Customers/1/Images/AddedViaAPI/"
            }
            ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.ImageFolderController.Put(System.Int32,EmailMarketing.API.Models.ImageFolder)">
            <summary>
            This feature is not implemented
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Controllers.ImageFolderController.Delete(System.Int32)">
            <summary>
            This feature is not implemented
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Controllers.ImageFolderController.Search(EmailMarketing.API.Models.SearchBase)">
             <summary>
             Return information about each Image Folder matching the given search criteria.
             </summary>
             <example for="request"><![CDATA[
             Search for "MySubFolder" within all sub-folders
             
             GET http://api.ecn5.com/api/search/imagefolder HTTP/1.1
             Content-Type: application/json; charset=utf-8
             Accept: application/json
             APIAccessKey: <YOUR_API_ACCESS_KEY>
             X-Customer-ID: 123
             Host: api.ecn5.com
             Content-Length: 161
             
            {
                 "SearchCriteria": [
                 {
                     "Name": "FolderName",
                     "Comparator": "=",
                     "ValueSet": "MySubFolder"
                 },
                 {
                     "Name": "Recursive",
                     "Comparator": "=",
                     "ValueSet": "true"
                 }
                 ]
            }
             
             Search for all folders with a name containing "My" within all sub-folders
             
             GET http://api.ecn5.com/api/search/imagefolder HTTP/1.1
             Content-Type: application/json; charset=utf-8
             Accept: application/json
             APIAccessKey: <YOUR_API_ACCESS_KEY>
             X-Customer-ID: 123
             Host: api.ecn5.com
             Content-Length: 161
             
            {
                 "SearchCriteria": [
                 {
                     "Name": "FolderName",
                     "Comparator": "contains",
                     "ValueSet": "My"
                 },
                 {
                     "Name": "Recursive",
                     "Comparator": "=",
                     "ValueSet": "true"
                 }
                 ]
            }
             
             Search for "MySubFolder", not including sub-folders.
             
             GET http://api.ecn5.com/api/search/imagefolder HTTP/1.1
             Content-Type: application/json; charset=utf-8
             Accept: application/json
             APIAccessKey: <YOUR_API_ACCESS_KEY>
             X-Customer-ID: 123
             Host: api.ecn5.com
             Content-Length: 68
             
            {
                 "SearchCriteria": [
                 {
                     "Name": "FolderName",
                     "Comparator": "=",
                     "ValueSet": "MySubFolder"
                 }
                 ]
            }
             
             Search for sub-folders within the images root folder.
             
             GET http://api.ecn5.com/api/search/imagefolder HTTP/1.1
             Content-Type: application/json; charset=utf-8
             Accept: application/json
             APIAccessKey: <YOUR_API_ACCESS_KEY>
             X-Customer-ID: 123
             Host: api.ecn5.com
             Content-Length: 2
             
            {
                 "SearchCriteria": []
            }
             
             Search for all image folders.
             
             GET http://api.ecn5.com/api/search/imagefolder HTTP/1.1
             Content-Type: application/json; charset=utf-8
             Accept: application/json
             APIAccessKey: <YOUR_API_ACCESS_KEY>
             X-Customer-ID: 123
             Host: api.ecn5.com
             Content-Length: 64
             
            {
                 "SearchCriteria": [
                 {
                     "Name": "Recursive",
                     "Comparator": "=",
                     "ValueSet": "true"
                 }
                 ]
            }
             ]]></example>
             <example for="response"><![CDATA[
             HTTP/1.1 200 OK
             Cache-Control: no-cache
             Pragma: no-cache
             Content-Type: application/json; charset=utf-8
             Expires: -1
             Server: Microsoft-IIS/7.5
             X-AspNet-Version: 4.0.30319
             X-Powered-By: ASP.NET
             Date: Tue, 30 Jun 2015 20:41:51 GMT
             Content-Length: 220
             [
                {
                   "ApiObject":
                   { 
                      "FolderID":0,
                      "FolderName":"myFolder",
                      "FolderFullName":"myFolder",
                      "FolderUrl":"http://api.ecn5.com/ecn.images/Customers/123/Images/myFolder/"
                   },
                   "Location":"http://api.ecn5.com/api/imagefolder/0"
                }
             ]
             ]]></example>
        </member>
        <member name="T:EmailMarketing.API.Controllers.MessageController">
            <summary>
            Methods allowing manipulation of email messages ( "layouts" ) via REST. NOTE: There is a known bug where created and updated dates always show NULL. This will be fixed after 2015 Q3 release.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Controllers.MessageController.FrameworkEntity">
            <inheritdoc/>
        </member>
        <member name="P:EmailMarketing.API.Controllers.MessageController.ExposedProperties">
            <summary>
            Lists common properties between the (external) API model and the associated (internal) framework model by this service.
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Controllers.MessageController.Get(System.Int32)">
            <summary>
            Retrieves the Message resource identified by <pre>id</pre>
            </summary>
            <param name="id">LayoutID for the target resource</param>
            <returns>On success, a Message API model object; otherwise,
            <note>In most cases returns Http Status Code <pre>200 OK</pre>; however, if the target 
            resource doesn't exist --for example, if it has been deleted-- the result is 
            <pre>Error 404 - Not Found.</pre></note> </returns>
            
            
            <example for="request"><![CDATA[
            GET http://api.ecn5.com/api/message/12345 HTTP/1.1
            Host: api.ecn5.com
            APIAccessKey: <YOUR_API_ACCESS_KEY>
            X-Customer-ID: 123
            
            ]]></example>
            
            
            <example for="response"><![CDATA[
            HTTP/1.1 200 OK
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Server: Microsoft-IIS/7.5
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Mon, 08 Jun 2015 15:12:49 GMT
            Content-Length: 488
            
            {  
               "LayoutID":12345,
               "TemplateID":1234,
               "FolderID":0,
               "LayoutName":"Layout Name",
               "ContentSlot1":54321,
               "ContentSlot2":0,
               "ContentSlot3":0,
               "ContentSlot4":0,
               "ContentSlot5":0,
               "ContentSlot6":0,
               "ContentSlot7":0,
               "ContentSlot8":0,
               "ContentSlot9":0,
               "UpdatedDate":null,
               "TableOptions":"border=1 bordercolor=black width=600 cellpadding=0 cellspacing=0",
               "DisplayAddress":"321 Happy St, Tunsasmiles, CA 10101",
               "MessageTypeID":0,
               "CreatedDate":null
            }
            }
            ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.MessageController.Post(EmailMarketing.API.Models.Message)">
            <summary>
            Given a Messagse model object, add a new resource, assigning unique LayoutID attribute (and REST Location 
            property).
            </summary>
            
            <param name="model">Message model object</param>
            
            <returns>On success, returns the given model object with <pre>LayoutID</pre> filled in, 
            as well as a <pre>Location</pre> header.  In case of validation error(s), 
            Error <pre>400 - Bad Request</pre> is returned along with a message providing further 
            information.</returns>
            
            <header for="request">APIAccessKey</header>
            <header for="response">Location</header>
            
            <example for="request"><![CDATA[
            POST http://api.ecn5.com/api/message/ HTTP/1.1
            Host: api.ecn5.com
            APIAccessKey: <YOUR_API_ACCESS_KEY>
            X-Customer-ID: 123
            Content-Type: application/json
            Content-Length: 452
            
             {  
               "TemplateID":1234,
               "FolderID":0,
               "LayoutName":"Layout Name",
               "ContentSlot1":54321,
               "ContentSlot2":0,
               "ContentSlot3":null,
               "ContentSlot4":0,
               "ContentSlot5":null,
               "ContentSlot6":0,
               "ContentSlot7":null,
               "ContentSlot8":0,
               "ContentSlot9":null,
               "TableOptions":"",
               "DisplayAddress":"321 Happy St, Tunsasmiles, CA 10101",
               "MessageTypeID":123,
            }
            ]]></example>
            
            <example for="response"><![CDATA[
            HTTP/1.1 201 Created
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Location: http://api.ecn5.com/api/message/364566
            Server: Microsoft-IIS/7.5
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Mon, 08 Jun 2015 18:38:17 GMT
            Content-Length: 445
            
            {  
               "LayoutID":987654,
               "TemplateID":1234,
               "FolderID":0,
               "LayoutName":"Layout Name",
               "ContentSlot1":54321,
               "ContentSlot2":null,
               "ContentSlot3":null,
               "ContentSlot4":null,
               "ContentSlot5":null,
               "ContentSlot6":null,
               "ContentSlot7":null,
               "ContentSlot8":null,
               "ContentSlot9":null,
               "TableOptions":"",
               "DisplayAddress":"321 Happy St, Tunsasmiles, CA 10101",
               "MessageTypeID":123
                }
            ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.MessageController.Put(System.Int32,EmailMarketing.API.Models.Message)">
            <summary>
            Updates resource identified by <pre>id</pre> with the given model object
            </summary>
            <param name="id">LayoutID for the target resource</param>
            <param name="apiModel">Message model object</param>
            <returns>On success, returns the given model object as well as a <pre>Location</pre> header.  
            In case of validation error(s), 
            Error <pre>400 - Bad Rquest</pre> is returned along with a message providing further 
            information.</returns>
            <example for="request"><![CDATA[
            PUT http://api.ecn5.com/api/message/123456 HTTP/1.1
            Host: api.ecn5.com
            APIAccessKey: <YOUR_API_ACCESS_KEY>
            X-Customer-ID: 123
            Content-Type: application/json
            
            {  
               "TemplateID":1234,
               "FolderID":0,
               "LayoutName":"Layout Name",
               "ContentSlot1":98765,
               "ContentSlot2":12345,
               "ContentSlot3":0,
               "ContentSlot4":null,
               "ContentSlot5":0,
               "ContentSlot6":null,
               "ContentSlot7":0,
               "ContentSlot8":null,
               "ContentSlot9":0,
               "TableOptions":"default",
               "DisplayAddress":"321 Happy St, Tunsasmiles, CA 10101",
               "MessageTypeID":123,
            }
            ]]></example>
            
            <example for="response"><![CDATA[
            HTTP/1.1 201 Created
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Location: http://api.ecn5.com/api/message/123456
            Server: Microsoft-IIS/7.5
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Mon, 08 Jun 2015 18:50:31 GMT
            Content-Length: 515
            
            {  
               "LayoutID":123456,
               "TemplateID":1234,
               "FolderID":0,
               "LayoutName":"Layout Name",
               "ContentSlot1":98765,
               "ContentSlot2":12345,
               "ContentSlot3":null,
               "ContentSlot4":null,
               "ContentSlot5":null,
               "ContentSlot6":null,
               "ContentSlot7":null,
               "ContentSlot8":null,
               "ContentSlot9":null,
               "UpdatedDate":":"2015-12-30T09:23:08.22",
               "TableOptions":"border=1 bordercolor=black width=600 cellpadding=0 cellspacing=0",
               "DisplayAddress":"321 Happy St, Tunsasmiles, CA 10101",
               "MessageTypeID":123,
               "CreatedDate":":"2015-11-30T09:23:08.22
            }
            
            
            }
            ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.MessageController.Delete(System.Int32)">
            <summary>
            Removes target resource.
            </summary>
            <param name="id">LayoutID of the target resource</param>
            <example for="request"><![CDATA[
            DELETE http://api.ecn5.com/api/message/12345 HTTP/1.1
            Host: api.ecn5.com
            APIAccessKey: <YOUR_API_ACCESS_KEY>
            X-Customer-ID: 123
            
            ]]></example>
            
            <example for="response"><![CDATA[
            HTTP/1.1 204 No Content
            Cache-Control: no-cache
            Pragma: no-cache
            Expires: -1
            Server: Microsoft-IIS/7.5
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Fri, 05 Jun 2015 14:50:10 GMT
            
            ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.MessageController.Search(EmailMarketing.API.Models.SearchBase)">
             <summary>
             Provides search capabilities for Message resources. Search supports both GET and POST methods; results will be identical.
             </summary>
             <see cref="T:EmailMarketing.API.Models.Message"/>
             <param name="searchQuery">Used to constrain the search. You may provide one or more of the criteria shown in the example.</param>
             <returns>a list of matching <see cref="T:EmailMarketing.API.Models.Message"/> as Location/API Object pairs.</returns>
             
             <example for="request"><![CDATA[
             GET http://api.ecn5.com/api/search/message HTTP/1.1
             Content-Type: application/json; charset=utf-8
             Accept: application/json
             APIAccessKey: <YOUR_API_ACCESS_KEY>
             X-Customer-ID: 123
             Host: api.ecn5.com
             Content-Length: 357
             
            {
                 "SearchCriteria": [
                 {
                     "Name": "Title",
                     "Comparator": "contains",
                     "ValueSet": "test"
                 },
                 {
                     "Name": "FolderID",
                     "Comparator": "=",
                     "ValueSet": "0"
                 },
                 {
                     "Name": "UpdatedDateFrom",
                     "Comparator": ">=",
                     "ValueSet": "2014-10-17 07:45:00"
                 },
                 {
                     "Name": "UpdatedDateTo",
                     "Comparator": "<=",
                     "ValueSet": "2015-01-01 00:00:00"
                 },
                 {
                     "Name": "LastUpdatedByUser",
                     "Comparator": "=",
                     "ValueSet": "1234"
                 },
                 {   
                     "Name": "Archived",
                     "Comparator": "=",
                     "ValueSet": "false"
                 }
                 ]
            }
             ]]></example>
             
             <example for="response"><![CDATA[
             HTTP/1.1 200 OK
             Cache-Control: no-cache
             Pragma: no-cache
             Content-Type: application/json; charset=utf-8
             Expires: -1
             Server: Microsoft-IIS/7.5
             X-AspNet-Version: 4.0.30319
             X-Powered-By: ASP.NET
             Date: Mon, 08 Jun 2015 19:38:07 GMT
             Content-Length: 2651
             
             [  
                {  
                   "ApiObject":{  
                      "Archived"="False",
                      "LayoutID":-1,
                      "TemplateID":1234,
                      "FolderID":0,
                      "LayoutName":"TestSearch1",
                      "ContentSlot1":123456,
                      "ContentSlot2":null,
                      "ContentSlot3":null,
                      "ContentSlot4":null,
                      "ContentSlot5":null,
                      "ContentSlot6":null,
                      "ContentSlot7":null,
                      "ContentSlot8":null,
                      "ContentSlot9":null,
                      "UpdatedDate":null,
                      "TableOptions":"",
                      "DisplayAddress":"",
                      "MessageTypeID":null,
                      "CreatedDate":null
                   },
                   "Location":"http://api.ecn5.com/api/message/123456"
                },
                {  
                   "ApiObject":{  
                      "Archived=False",
                      "LayoutID":-1,
                      "TemplateID":2468,
                      "FolderID":0,
                      "LayoutName":"TestSearch2",
                      "ContentSlot1":987654,
                      "ContentSlot2":999999,
                      "ContentSlot3":888888,
                      "ContentSlot4":777777,
                      "ContentSlot5":666666,
                      "ContentSlot6":555555,
                      "ContentSlot7":444444,
                      "ContentSlot8":333333,
                      "ContentSlot9":222222,
                      "UpdatedDate":null,
                      "TableOptions":"",
                      "DisplayAddress":"123 Sesame St., New York, NY 12345",
                      "MessageTypeID":123,
                      "CreatedDate":null
                   },
                   "Location":"http://api.ecn5.com/api/message/987654"
                },
                {  
                   "ApiObject":{  
                      "LayoutID":-1,
                      "TemplateID":0369,
                      "FolderID":0,
                      "LayoutName":"TestSearch3",
                      "ContentSlot1":123456,
                      "ContentSlot2":234567,
                      "ContentSlot3":345678,
                      "ContentSlot4":456789,
                      "ContentSlot5":567890,
                      "ContentSlot6":678901,
                      "ContentSlot7":789012,
                      "ContentSlot8":890123,
                      "ContentSlot9":901234,
                      "UpdatedDate":null,
                      "TableOptions":"border=1 bordercolor=black width=600 cellpadding=0 cellspacing=0",
                      "DisplayAddress":"9999 99th St. NW, Ricketts, WA 12345",
                      "MessageTypeID":987,
                      "CreatedDate":null
                   },
                   "Location":"http://api.ecn5.com/api/message/666666"
                }
             ]
             ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.MessageController.PostCleanseInputData(EmailMarketing.API.Models.Message)">
            <summary>
            Data rectification to avoid code breaking errors with POST method
            </summary>
            <param name="apiModel">The APIModel that is being acted upon by POST</param>
        </member>
        <member name="M:EmailMarketing.API.Controllers.MessageController.PutCleanseInputData(System.Int32,EmailMarketing.API.Models.Message)">
            <summary>
            Data rectification to avoid code breaking errors with PUT method
            </summary>
            <param name="id">LayoutID of specified layout/message passed through URL.</param>
            <param name="apiModel">The APIModel that is being acted upon by PUT</param>
        </member>
        <member name="M:EmailMarketing.API.Controllers.MessageController.GeneralCleanseInputData(EmailMarketing.API.Models.Message)">
            <summary>
            Default data assignment to avoid code breaking errors (Intersection of necessary rectification between POST and PUT)
            </summary>
            <param name="apiModel">The APIModel that is being acted upon by HTTP PUT or HTTP POST</param>
        </member>
        <member name="M:EmailMarketing.API.Controllers.MessageController.POST_FillFrameworkModelInternalFields(ECN_Framework_Entities.Communicator.Layout)">
            <summary>
            Prepares APIModel from a POST for transformation to a FrameworkModel
            </summary>
            <param name="frameworkModel">The API Model instance provided for insert via HTTP POST</param>
        </member>
        <member name="M:EmailMarketing.API.Controllers.MessageController.PUT_FillFrameworkModelInternalFields(ECN_Framework_Entities.Communicator.Layout)">
            <summary>
            Prepares APIModel from a PUT for transformation to a FrameworkModel
            </summary>
            <param name="frameworkModel">The APIModel instance provided for update via HTTP PUT</param>
        </member>
        <member name="T:EmailMarketing.API.Controllers.SimpleBlastV2Controller">
            <summary>
            API methods exposing a simplified version of the Blast object model as Resources for Create, Read, 
            Update and Delete via REST, and providing ancillary methods such as for reporting.
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Controllers.SimpleBlastV2Controller.#ctor">
            <summary>
            Constructor, subscribes for AfterTransformation events.
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Controllers.SimpleBlastV2Controller.InternalGet(System.Int32,KMPlatform.Entity.User,System.Boolean)">
            <summary>
            static Getter returns API (SimpleBlast) object via fetch of Framework object and explicit transform to APIModel type
            </summary>
            <param name="blastID">Blast ID</param>
            <param name="user">Framework User entity</param>
            <param name="fetchFiltersAndSmartSegments">if true, populate Filters and SmartSegments list properties</param>
            <returns><code>SimpleBlast</code> object, or null if object not found.</returns>
            <exception cref="T:ECN_Framework_Common.Objects.SecurityException">throw if <code>BlastID</code> exists but is not accessible by <code>user</code>.</exception>
        </member>
        <member name="P:EmailMarketing.API.Controllers.SimpleBlastV2Controller.FrameworkEntity">
            <inheritdoc/>
        </member>
        <member name="M:EmailMarketing.API.Controllers.SimpleBlastV2Controller.OnAfterTransformationInternal(EmailMarketing.API.Controllers.SearchableApiControllerBase{EmailMarketing.API.Models.SimpleBlastV2,ECN_Framework_Entities.Communicator.Blast}.TransformationEventArgs.TransformationDirection,EmailMarketing.API.Models.SimpleBlastV2,ECN_Framework_Entities.Communicator.Blast,KMPlatform.Entity.User,System.Boolean)">
            <summary>
            Provide transformation customization, available from InternalGet (which explicitly calls this) or via API methods in which case
            this method is called from the OnAfterTransformation handler.
            </summary>
            <param name="direction">For ToAPIModel, sets IsTestBlast in ApiModel from TestBlast in Framework model, 
            for ToFramework model, sets TestBlast in Framework model from IsTestBlast in ApiModel</param>
            <param name="apiModel">SimpleBlast</param>
            <param name="frameworkModel">Blast</param>
            <param name="user">Framework User</param>
            <param name="fetchFiltersAndSmartSegemnts">if true, when direction is ToAPIModel, also attempt to populate Filter and SmartSegment 
            arrays by calling <see cref="M:ECN_Framework_BusinessLayer.Communicator.CampaignItemBlast.GetByBlastID(System.Int32,KMPlatform.Entity.User,System.Boolean)"/></param>
        </member>
        <member name="M:EmailMarketing.API.Controllers.SimpleBlastV2Controller.Get(System.Int32)">
             <summary>Get a blast.  If Email Subject contains Emoji's, they will be in Unicode Escaped Format(\uXXXX)</summary>
             <param name="id">Blast ID</param>
             <returns>SimpleBlast API model object</returns>
            <example for="request"><![CDATA[
             GET http://api.ecn5.com/api/simpleblastV2/123456 HTTP/1.1
             Accept: application/json
             Accept-Language: en-US
             User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko
             Accept-Encoding: gzip, deflate
             Connection: Keep-Alive
             APIAccessKey: <YOUR-API-KEY-HERE>
             Host: api.ecn5.com
             X-Customer-ID: 77777
             ]]></example>
             <example for="response"><![CDATA[
             HTTP/1.1 200 OK
             Cache-Control: no-cache
             Pragma: no-cache
             Content-Type: application/json; charset=utf-8
             Expires: -1
             Server: Microsoft-IIS/7.5
             X-AspNet-Version: 4.0.30319
             X-Powered-By: ASP.NET
             Date: Sun, 26 Jul 2015 18:59:54 GMT
             Content-Length: 495
             
             {
                "BlastID":123456,
                "StatusCode":"Sent",
                "BlastType":"HTML",
                "Schedule":null,
                "IsTestBlast":true,
                "LayoutID":123456,
                "GroupID":654321,
                "FilterID":0,
                "SmartSegmentID":null,
                "ReferenceBlasts":null,
                "EmailSubject":"Loams Test",
                "EmailFrom":"info@knowledgemarketing.com",
                "EmailFromName":"knowledge marketing",
                "ReplyTo":"info@knowledgemarketing.com",
                "Filters":[
             
                ],
                "SmartSegments":[
             
                ],
                "SendTime":"2015-03-24T08:28:37",
                "CampaignID":123,
                "CampaignName":"Marketing Campaign",
                "CampaignItemName":"Campaign Item Name",
                "CreatedUserID":4496,
                "CreatedDate":"2015-03-24T08:28:20",
                "UpdatedUserID":null,
                "UpdatedDate":null
             }
             ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.SimpleBlastV2Controller.Post(EmailMarketing.API.Models.SimpleBlastV2)">
            <summary>
            Create a simple blast
            
             **When using XML as the Content-Type, use only '&lt;StartDate&gt;Date&lt;/StartDate&gt;' rather than &lt;Schedule&gt;&lt;StartDate&gt;...&lt;/Schedule&gt; unless you are building a ScheduledBlast.
            </summary>
            <example for="request"><![CDATA[
            POST http://api.ecn5.com/api/simpleblastV2 HTTP/1.1
            Content-Type: application/json; charset=utf-8
            Accept: application/json
            APIAccessKey: <YOUR_API_ACCESS_KEY>
            X-Customer-ID: 123
            Host: api.ecn5.com
            Content-Length: 453
            
            {
              "BlastType": "regular",        
              "Schedule":
              {
                "Type": "OneTime",
                "Recurrence": "OneTime",
                "Split": "Evenly",
                "StartDate": "2015-08-30 12:00:00",
                "EndDate": "2015-08-30 12:00:00",
                "HowManyWeeks": 1,
                "DayOfMonth":3,
                "Day":"Monday",
              },
              "IsTestBlast": false,
              "LayoutID": 654321,
              "GroupID": 123456,
              "CampaignName":"Test Marketing Campaign",
              "CampaignItemName":"Campaign Item Name",
              "EmailSubject": "POSTedBlast",
              "EmailFrom": "info@emailmarketing.com",        
              "EmailFromName": "FromName",
              "ReplyTo": "OmNom@gimme.com",
            }]]></example>
            
            <example for="response"><![CDATA[
            HTTP/1.1 201 Created
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Location: http://api.ecn5.com/api/simpleblastV2/999999
            Server: Microsoft-IIS/7.5
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Mon, 10 Aug 2015 17:03:22 GMT
            Content-Length: 481
            
            {
                "BlastID":999999,
                "StatusCode":"Pending",
                "BlastType":"HTML",
                "Schedule":null,
                "IsTestBlast":false,
                "LayoutID":654321,
                "GroupID":123456,
                "FilterID":null,
                "SmartSegmentID":null,
                "ReferenceBlasts":null,
                "EmailSubject":"POSTedBlast",
                "EmailFrom":"info@emailmarketing.com",
                "EmailFromName":"FromName",
                "CampaignID": 123,
                "CampaignName":"Test Marketing Campaign",
                "CampaignItemName":"Campaign Item Name",
                "ReplyTo":"OmNom@gimme.com",
                "Filters":null,
                "SmartSegments":null,
                "SendTime":"2015-08-30 12:00:00"
            }]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.SimpleBlastV2Controller.Put(System.Int32,EmailMarketing.API.Models.SimpleBlastV2)">
             <summary>
             Simple blast update
             </summary>
             <example for="request"><![CDATA[
            PUT http://api.ecn5.com/api/simpleblastV2/999999 HTTP/1.1
            Content-Type: application/json; charset=utf-8
            Accept: application/json
            APIAccessKey: <YOUR_API_ACCESS_KEY>
            X-Customer-ID: 123
            Host: api.ecn5.com
            Content-Length: 448
            
            {
              "BlastType": "regular",
              "Schedule": {
                "Type": "OneTime",
                "Recurrence": "OneTime",
                "Split": "Evenly",        
                "StartDate": "2015-08-30 12:00:00",
                "EndDate": "2015-08-30 12:00:00",
              },
              "IsTestBlast": false,
              "LayoutID": 123456,
              "GroupID": 654321,
              "EmailSubject": "UpdatedSubject",        
              "EmailFrom": "from@email.com",
              "EmailFromName": "FromName",
              "ReplyTo": "replyto@email.com",
            }
            ]]></example>
             <example for="response"> <![CDATA[
             HTTP/1.1 201 Created
             Cache-Control: no-cache
             Pragma: no-cache
             Content-Type: application/json; charset=utf-8
             Expires: -1
             Location: http://api.ecn5.com/api/simpleblastV2/999999
             Server: Microsoft-IIS/7.5
             X-AspNet-Version: 4.0.30319
             X-Powered-By: ASP.NET
             Date: Mon, 10 Aug 2015 17:04:00 GMT
             Content-Length: 489
             
             {
                "BlastID":999999,
                "StatusCode":"Pending",
                "BlastType":"HTML",
                "Schedule":null,
                "IsTestBlast":false,
                "LayoutID":123456,
                "GroupID":65432,
                "FilterID":null,
                "SmartSegmentID":null,
                "ReferenceBlasts":null,
                "EmailSubject":"UpdatedSubject",
                "EmailFrom":"from@email.com",
                "EmailFromName":"FromName",
                "ReplyTo":"replyto@email.com",
                "Filters":[],
                "SmartSegments":[],
                "SendTime":"2015-08-10T12:04:00",
                "CreatedUserID":1234,
                "CreatedDate":"2015-08-10T12:03:23",
                "UpdatedUserID":4321,
                "UpdatedDate":"2015-08-15T12:04:01"
             }
             ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.SimpleBlastV2Controller.Delete(System.Int32)">
            <summary>
            Simple blast removal
            </summary>       
            <example for="request"><![CDATA[
            DELETE http://api.ecn5.com/api/SimpleBlastV2/999999 HTTP/1.1
            Accept: application/json
            APIAccessKey: <YOUR_API_ACCESS_KEY>
            X-Customer-ID: 123
            Host: api.ecn5.com
            ]]></example>
            <example for="response"><![CDATA[
            HTTP/1.1 204 No Content
            Cache-Control: no-cache
            Pragma: no-cache
            Expires: -1
            Server: Microsoft-IIS/7.5
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Fri, 31 Jul 2015 16:44:15 GMT
            ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.SimpleBlastV2Controller.Search(EmailMarketing.API.Models.SearchBase)">
             <summary>
             Search by EmailSubject, GroupID, IsTest, StatusCode string, CampaignID, CampaignName, CampaignItemName, and/or ModifiedTo and/or ModifiedFrom dates.
             </summary>
             <example for="request"><![CDATA[
             GET http://api.ecn5.com/api/search/SimpleBlastV2 HTTP/1.1
             Accept: application/json
             Content-Type: application/json
             APIAccessKey: <YOUR_API_ACCESS_KEY>
             X-Customer-ID: 123
             Host: api.ecn5.com
             
            {
                 "SearchCriteria": [
                 {
                     "Name": "EmailSubject",
                     "Comparator": "contains",
                     "ValueSet": "test"
                 },
                 {
                     "Name": "GroupID",
                     "Comparator": "=",
                     "ValueSet": "12345"
                 },
                 {
                     "Name": "IsTest",
                     "Comparator": "=",
                     "ValueSet": "false"
                 },
                 {
                     "Name": "StatusCode",
                     "Comparator": "=",
                     "ValueSet": "Sent"
                 },
                 {
                     "Name": "ModifiedTo",
                     "Comparator": "<=",
                     "ValueSet": "2015-09-01"
                 },
                 {
                     "Name": "ModifiedFrom",
                     "Comparator": ">=",
                     "ValueSet": "2015-01-01"
                 },
                 {
                     "Name": "CampaignID",
                     "Comparator": "=",
                     "ValueSet": "123"
                 },
                 {
                     "Name": "CampaignName",
                     "Comparator": "=",
                     "ValueSet":"Marketing Campaign"
                 },
                 {
                     "Name": "CampaignItemName",
                     "Comparator": "=",
                     "ValueSet":"Campaign Item Name"
                 }
                 ] 
            }
             ]]></example>
             <example for="response"><![CDATA[
            HTTP/1.1 200 OK
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Server: Microsoft-IIS/7.5
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Mon, 10 Aug 2015 18:16:45 GMT
            Content-Length: 1765
            
            [
               {
               "ApiObject":
                  {
                     "BlastID":999999,
                     "StatusCode":"Sent",
                     "BlastType":"HTML",
                     "Schedule":null,
                     "IsTestBlast":false,
                     "LayoutID":888888,
                     "GroupID":12345,
                     "FilterID":null,
                     "SmartSegmentID":null,
                     "ReferenceBlasts":null,
                     "EmailSubject":"TestBlast1",
                     "EmailFrom":"from1@email.com",
                     "EmailFromName":"Knowledge Marketing",
                     "ReplyTo":"reply1@email.com",
                     "CampaignID":123,
                     "CampaignName":"Marketing Campaign",
                     "CampaignItemName":"Campaign Item Name",
                     "Filters":null,
                     "SmartSegments":null,
                     "SendTime":"2015-07-02T15:36:41",
                     "CreatedUserID":4444,
                     "CreatedDate":"2015-07-02T15:36:25",
                     "UpdatedUserID":null,
                     "UpdatedDate":null
                  },
                  "Location":"http://test.api.ecn5.com/api/simpleblast/999999"
               },
               {
               "ApiObject":
                  {
                     "BlastID":111111,
                     "StatusCode":"Sent",
                     "BlastType":"HTML",
                     "Schedule":null,
                     "IsTestBlast":false,
                     "LayoutID":222222,
                     "GroupID":12345,
                     "FilterID":null,
                     "SmartSegmentID":null,
                     "ReferenceBlasts":null,
                     "EmailSubject":"TestBlast2",
                     "EmailFrom":"from2@email.com",
                     "EmailFromName":"Knowledge Marketing",
                     "ReplyTo":"reply@email.com",
                     "CampaignID":123,
                     "CampaignName":"Marketing Campaign",
                     "CampaignItemName":"Campaign Item Name",
                     "Filters":null,
                     "SmartSegments":null,
                     "SendTime":"2015-07-23T14:24:00",
                     "CreatedUserID":4444,
                     "CreatedDate":"2015-07-23T14:23:44",
                     "UpdatedUserID":null,
                     "UpdatedDate":null
                  },
                  "Location":"http://test.api.ecn5.com/api/simpleblast/111111"
               }
            ]
            ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.SimpleBlastV2Controller.GetBlastBounceReport(System.Int32,System.Boolean)">
             <summary>
             Simple Report of Blast Bounces.  
             </summary>
             <param name="id">Blast ID</param>
             <param name="withDetail">pass true to get a report including detail</param>
             <returns>data table</returns>
             <example for="request"><![CDATA[
             GET http://api.ecn5.com/api/simpleblastV2/999999/Report/Bounces?withDetail=false HTTP/1.1
             Accept: application/json
             Accept-Language: en-US
             User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko
             Accept-Encoding: gzip, deflate
             Connection: Keep-Alive
             APIAccessKey: <YOUR_API_ACCESS_KEY>
             X-Customer-ID: 123
             Host: api.ecn5.com
             ]]></example>
             
             <example for="response"><![CDATA[
            HTTP/1.1 200 OK
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Server: Microsoft-IIS/7.5
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Mon, 10 Aug 2015 19:07:17 GMT
            Content-Length: 94368
            
            [
               {
                  "BounceTime":"6/21/2015 12:49:07 PM",
                  "EmailAddress":"email1@email.com",
                  "BounceType":"softbounce",
                  "BounceSignature":"unable to connect"
               },
               {
                  "BounceTime":"6/17/2015 10:20:52 PM",
                  "EmailAddress":"email2@email.com",
                  "BounceType":"blocks",
                  "BounceSignature":"smtp; 554 5.7.1 email2@email.com: relay access denied"
               },
               {
                  "BounceTime":"6/17/2015 9:47:16 PM",
                  "EmailAddress":"email3@email.com",
                  "BounceType":"hardbounce",
                  "BounceSignature":"smtp;400 4.4.7 message delayed"
               }
            ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.SimpleBlastV2Controller.GetBlastClicksReport(System.Int32,EmailMarketing.API.Models.Reports.ClickReportFilterType,System.Boolean)">
             <summary>
             Simple Report of Blast Clicks.  
             </summary>
             <param name="id">Blast ID</param>
             <param name="filterType">All or Unique</param>
             <param name="withDetail">pass true to get a report including detail</param>
             <returns></returns>
             <example for="request"><![CDATA[
             GET http://api.ecn5.com/api/SimpleBlastV2/99999/Report/Clicks?filterType=0&withDetail=false HTTP/1.1
             Accept: application/json
             APIAccessKey: <YOUR_API_ACCESS_KEY>
             X-Customer-ID: 123
             Host: api.ecn5.com
             
             ]]></example>
             <example for="response"><![CDATA[
            HTTP/1.1 200 OK
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Server: Microsoft-IIS/7.5
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Mon, 10 Aug 2015 18:43:44 GMT
            Content-Length: 539
            
            [
               {
                  "ClickTime":"7/17/2015 8:59:55 AM",
                  "EmailAddress":"emailaddress1@email.com",
                  "Link":"http://www.knowledgemarketing.com"
               },
               {
                  "ClickTime":"7/16/2015 11:44:41 AM",
                  "EmailAddress":"emailaddress1@email.com",
                  "Link":"http://www.kmlearningcenter.com"
               },
               {
                  "ClickTime":"7/13/2015 12:35:58 PM",
                  "EmailAddress":"emailaddress2@email.com",
                  "Link":"http://www.kmlearningcenter.com"
               }
            ]
             ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.SimpleBlastV2Controller.GetBlastDeliveryReport(System.DateTime,System.DateTime)">
             <summary>
             Simple Report of Blast Delivery detail.  
             </summary>
             <param name="id">Blast ID</param>
             <param name="fromDate">required, inclusive date after which the blast must have been created/updated to be included in the report</param>
             <param name="toDate">required, inclusive date before which the blast must have been created/updated to be included in the report</param>
             <returns>data table</returns>
             <example for="request"><![CDATA[
            GET http://api.ecn5.com/api/simpleblastV2/999999/Report/Delivery?fromDate=2015-07-13&toDate=2015-07-30 HTTP/1.1
            Accept: application/json
            Accept-Language: en-US
            User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko
            Accept-Encoding: gzip, deflate
            Connection: Keep-Alive
            APIAccessKey: <YOUR_API_ACCESS_KEY>
            X-Customer-ID: 123
            Host: api.ecn5.com
             ]]></example>
             <example for="response"><![CDATA[
            HTTP/1.1 200 OK
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Server: Microsoft-IIS/7.5
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Fri, 31 Jul 2015 18:44:12 GMT
            Content-Length: 1268
            
            [
               {
                  "blastID":999999,
                  "sendtime":"2015-07-29T12:06:13.413",
                  "emailsubject":"EmailSubject",
                  "groupname":"GroupName",
                  "FilterName":"",
                  "CampaignName":"CampName",
                  "sendtotal":129,
                  "Delivered":110,
                  "softbouncetotal":9,
                  "hardbouncetotal":5,
                  "OtherBouncetotal":5,
                  "bouncetotal":19,
                  "UniqueOpens":105,
                  "TotalOpens":153,
                  "UniqueClicks":52,
                  "TotalClicks":79,
                  "UnsubscribeTotal":0,
                  "suppressedtotal":0,
                  "MobileOpens":12,
                  "FromEmail":"from@email.com",
                  "CampaignItemName":"CampItemName",
                  "CustomerName":"CustomerName",
                  "Field1":null,
                  "Field2":null,
                  "Field3":null,
                  "Field4":null,
                  "Field5":null,
                  "Abuse":0,
                  "Feedback":0,
                  "SpamCount":0
               },
            ]
             ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.SimpleBlastV2Controller.GetBlastOpensReport(System.Int32,EmailMarketing.API.Models.Reports.ClickReportFilterType,System.Boolean)">
             <summary>
             Simple Report of Blast Opens.  
             </summary>
             <param name="id">Blast ID</param>
             <param name="filterType">All or Unique</param>
             <param name="withDetail">pass true to get a report including detail</param>
             <returns></returns>
             <example for="request"><![CDATA[
            GET http://api.ecn5.com/api/simpleblastV2/999999/Report/Opens?filterType=1&withDetail=false HTTP/1.1
            Accept: application/json
            Accept-Language: en-US
            User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko
            Accept-Encoding: gzip, deflate
            Connection: Keep-Alive
            APIAccessKey: <YOUR_API_ACCESS_KEY>
            X-Customer-ID: 123
            Host: api.ecn5.com
             ]]></example>
             
             <example for="response"><![CDATA[
            HTTP/1.1 200 OK
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Server: Microsoft-IIS/7.5
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Mon, 10 Aug 2015 18:57:16 GMT
            Content-Length: 335
            [
               {
                  "OpenTime":"8/7/2015 1:54:26 PM",
                  "EmailAddress":"emailaddress@email.com",
                  "Info":"70.89.199.237 | Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727;
                  .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; Microsoft Outlook 15.0.4737; ms-office; MSOffice 15)"
               }
            ]
             ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.SimpleBlastV2Controller.GetBlastReport(System.Int32)">
            <summary>
            Simple blast report given BlastID.  
            </summary>
            <param name="id"></param>
            <returns></returns>
            <example for="request"><![CDATA[
            GET http://api.ecn5.com/api/simpleblastV2/1234567/Report HTTP/1.1
            Accept: application/json
            Accept-Language: en-US
            User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko
            Accept-Encoding: gzip, deflate
            Connection: Keep-Alive
            APIAccessKey: <YOUR-API-KEY-HERE>
            Host: api.ecn5.com
            X-Customer-ID: 77777
            
            ]]></example>
            <example for="response"><![CDATA[
            HTTP/1.1 200 OK
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Server: Microsoft-IIS/7.5
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Sun, 26 Jul 2015 15:48:35 GMT
            Content-Length: 519
            {
               "Sends":{
                  "RowType":"Sends",
                  "DistinctCount":11,
                  "TotalCount":11,
                  "UniquePercent":100.0,
                  "TotalPercent":100.0
               },
               "Opens":{
                  "RowType":"Opens",
                  "DistinctCount":5,
                  "TotalCount":9,
                  "UniquePercent":45.0,
                  "TotalPercent":81.0
               },
               "Bounces":{
                  "RowType":"Bounces",
                  "DistinctCount":0,
                  "TotalCount":0,
                  "UniquePercent":0.0,
                  "TotalPercent":0.0
               },
               "Resends":{
                  "RowType":"Resends",
                  "DistinctCount":0,
                  "TotalCount":0,
                  "UniquePercent":0.0,
                  "TotalPercent":0.0
               },
               "Clicks":{
                  "RowType":"Clicks",
                  "DistinctCount":5,
                  "TotalCount":7,
                  "UniquePercent":71.4,
                  "TotalPercent":63.0
               }
            }
            ]]></example>
            
        </member>
        <member name="M:EmailMarketing.API.Controllers.SimpleBlastV2Controller.GetBlastReportByISP(System.Int32,System.String[])">
            <summary>
            Simple Report of Blast detail by ISP.  
            </summary>
            <param name="id">Blast ID</param>
            <param name="ISPList">list of ISPs, as strings</param>
            <returns>data table</returns>
            <example for="request"><![CDATA[
            POST http://api.ecn5.com/api/simpleblastV2/999999/Report/ISP HTTP/1.1
            Accept: application/json
            Accept-Language: en-US
            Content-Type: application/json
            User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko
            Accept-Encoding: gzip, deflate
            Connection: Keep-Alive
            APIAccessKey: <YOUR_API_ACCESS_KEY>
            X-Customer-ID: 123
            Host: api.ecn5.com
            Content-Length: 73
            
            [
               "Comcast",
               "Verizon",
               "Frontier",
            ]
            
            ]]></example>
            <example for="response"><![CDATA[
            HTTP/1.1 200 OK
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Server: Microsoft-IIS/7.5
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Mon, 10 Aug 2015 19:13:15 GMT
            Content-Length: 704
            
            [
               {
                  "ISPs":"Comcast",
                  "Sends":"0",
                  "opens":"0",
                  "clicks":"0",
                  "bounces":"0",
                  "unsubscribes":"0",
                  "resends":"0",
                  "forwards":"0",
                  "feedbackUnsubs":"0"
               },
               {
                  "ISPs":"Frontier",
                  "Sends":"0",
                  "opens":"0",
                  "clicks":"0",
                  "bounces":"0",
                  "unsubscribes":"0",
                  "resends":"0",
                  "forwards":"0"
                  ,"feedbackUnsubs":"0"
               },
               {
                  "ISPs":"Verizon",
                  "Sends":"0",
                  "opens":"0",
                  "clicks":"0",
                  "bounces":"0",
                  "unsubscribes":"0",
                  "resends":"0",
                  "forwards":"0",
                  "feedbackUnsubs":"0"
               }
            ]
            ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.SimpleBlastV2Controller.GetBlastUnsubscribeReport(System.Int32)">
            <summary>
            Report blast unsubscribe activity.  
            </summary>
            <param name="id">BlastID</param>
            <returns>a data-table, as JSON or XML per Content-Accept header.</returns>
            <example for="request"><![CDATA[
            GET http://api.ecn5.com/api/simpleblastV2/999999/Report/Unsubscribe HTTP/1.1
            Accept: application/json
            Accept-Language: en-US
            User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko
            Accept-Encoding: gzip, deflate
            Connection: Keep-Alive
            APIAccessKey: <YOUR_API_ACCESS_KEY>
            X-Customer-ID: 123
            Host: api.ecn5.com
            
            
            ]]></example>
            <example for="response"><![CDATA[
            HTTP/1.1 200 OK
            Cache-Control: no-cache
            Pragma: no-cache         
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Server: Microsoft-IIS/7.5
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Mon, 10 Aug 2015 19:21:46 GMT
            Content-Length: 36170
            
            [
               {
                  "EmailAddress":"address@email.com",
                  "UnsubscribeTime":"6/17/2015 2:15:25 PM",
                  "SubscriptionChange":"unsubscribe",
                  "Reason":"UNSUBSCRIBED THRU BLAST: 999999 FOR GROUP: 1234",
                  "Title":"",
                  "FirstName":"First",
                  "LastName":"Last",
                  "FullName":"",
                  "Company":"Knowledge Marketing",
                  "Occupation":"Tester",
                  "Address":""3650 Annapolis Lane North,
                  "Address2":"",
                  "City":"Plymouth",
                  "State":"MN",
                  "Zip":"55447",
                  "Country":"USA",
                  "Voice":"8668446275",
                  "Mobile":"",
                  "Fax":"",
                  "Website":"http://www.knowledgemarketing.com",
                  "Age":"25",
                  "Income":"",
                  "Gender":"F",
                  "User1":"",
                  "User2":"",
                  "User3":"",
                  "User4":"",
                  "User5":"",
                  "User6":"",
                  "Birthdate":"01/01/1990",
                  "UserEvent1":"",
                  "UserEvent1Date":"",
                  "UserEvent2":"",
                  "UserEvent2Date":"",
                  "CreatedOn":"5/4/2015 10:03:27 AM",
                  "LastChanged":"6/17/2015 2:15:25 PM",
                  "FormatTypeCode":"html",
                  "SubscribeTypeCode":"U",
                  "tmp_EmailID":"",
                  "BUSINESS":"",
                  "CAT":"",
                  "Demo10":"",
                  "Demo11":"",
                  "Demo13":"",
                  "Demo9":"",
                  "EmailType":"",
                  "EMPLOYER":"",
                  "ForZip":"",
                  "FUNCTION":"",
                  "FUNCTION1":"",
                  "Job":"",
                  "MailStop":"",
                  "Plus4":"",
                  "PROMOCODE":"",
                  "Pub":"",
                  "PubCode":"",
                  "SubscriberID":"",
                  "XACT":""
               },
            ]
            ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.SimpleBlastV2Controller.GetTestBlastLimit">
            <summary>
            Get test blast limit
            </summary>
            <returns></returns>
            <example for="request"><![CDATA[
            GET http://api.ecn5.com/api/simpleblastV2/methods/TestBlastLimit HTTP/1.1
            Host: api.ecn5.com
            Accept: application/json
            APIAccessKey: <YOUR-API-KEY-HERE>
            X-Customer-ID: 77777
            
            ]]></example>
            <example for="response"><![CDATA[
            HTTP/1.1 200 OK
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Server: Microsoft-IIS/7.5
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Mon, 27 Jul 2015 16:05:11 GMT
            Content-Length: 2
            
            10
            ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.SimpleBlastV2Controller.CleanseInputData_ValidateForeignKeys(EmailMarketing.API.Models.SimpleBlastV2)">
            <summary>
            Validates GroupID, LayoutID, FilterID (if present and greater than zero), determines if a smart-segment is used,
            and validates layout content.  If issues are found, throws <see cref="T:ECN_Framework_Common.Objects.ECNException"/>.
            If LayoutID is invalid neither FilterID nor layout content can be validated.
            LayoutContent validation cannot be completed if content is uses custom fields which have not been defined.
            </summary>
            <param name="model">an API Object</param>
            <returns>An exception is thrown if any validation error is found. Otherwise, true if a smart segment is used.</returns>
        </member>
        <member name="M:EmailMarketing.API.Controllers.SimpleBlastV2Controller.ConvertEmailSubject(System.String)">
            <summary>
            Converts string if it contains emoji
            </summary>
            <returns>Modified string</returns>
        </member>
        <member name="P:EmailMarketing.API.Controllers.SearchableApiControllerBase`2.ExposedProperties">
            <summary>
            Lists the API Model properties exposed by the controller, generally a subset of those provided by the corresponding Framework model.
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Controllers.SearchableApiControllerBase`2.GetID(`0)">
            <summary>
            When implemented in a derived class, gets the unique ID value for the given object
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:EmailMarketing.API.Controllers.SearchableApiControllerBase`2.GetID(`1)">
            <summary>
            When implemented in a derived class, gets the unique ID value for the given object
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:EmailMarketing.API.Controllers.SearchableApiControllerBase`2.EnsureValidSearchQuery(System.Collections.Generic.List{EmailMarketing.API.Models.SearchProperty})">
            <summary>
            Validates the search criteria for the request against the search configuration for the 
            controller identified via <see cref="!:ControllerName"/>
            </summary>
            <seealso cref="T:EmailMarketing.API.Search.SearchConfigurationGroup"/>
            <param name="query">search criteria</param>
            <exception cref="T:ECN_Framework_Common.Objects.ECNException">Exception raised in the event of an invalid query</exception>
        </member>
        <member name="M:EmailMarketing.API.Controllers.SearchableApiControllerBase`2.EnsureValidSearchQuery(EmailMarketing.API.Search.SearchConfigurationGroup,System.Collections.Generic.List{EmailMarketing.API.Models.SearchProperty})">
            <summary>
            Validates the supplied search property list for the request against given search specifications
            </summary>
            <param name="searchConfiguration">specifics valid search criteria for a controller</param>
            <param name="query">specifications for a search</param>
            <exception cref="T:ECN_Framework_Common.Objects.ECNException">Exception raised in the event of an invalid query</exception>
        </member>
        <member name="P:EmailMarketing.API.Controllers.AuthenticatedUserControllerBase.ControllerName">
            <summary>
            When implemented in a derived class, returns the name of the executing controller
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Controllers.AuthenticatedUserControllerBase.FrameworkEntity">
            <summary>
            When overridden in a derived class, get the framework entity for ECNError. <see cref="M:EmailMarketing.API.Controllers.AuthenticatedUserControllerBase.RaiseInvalidMessageException(System.String)"/>
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Controllers.AuthenticatedUserControllerBase.RaiseInvalidMessageException(System.String)">
            <summary>
            throws a 400 including the given message
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:EmailMarketing.API.Controllers.AuthenticatedUserControllerBase.RaiseInvalidMessageException(System.String,System.Object[])">
            <summary>
            throws a 400 error including a message composed by String.Format 
            replacing <code>args</code> in <code>format</code>
            </summary>
            <param name="format">message with <code>{n}</code> placeholders</param>
            <param name="args">objects to replace into format, calling ToString() on each if necessary</param>
        </member>
        <member name="M:EmailMarketing.API.Controllers.AuthenticatedUserControllerBase.RaiseInternalServerError(System.String)">
            <summary>
            Causes a general 500 error to be returned, given message is passed to the log as "logNote"
            </summary>
            <param name="logMessage"></param>
        </member>
        <member name="M:EmailMarketing.API.Controllers.AuthenticatedUserControllerBase.RaiseInternalServerError(System.String,System.Object[])">
            <summary>
            Format arguments using String.Format to construct the logMessage
            </summary>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:EmailMarketing.API.Controllers.AuthenticatedUserControllerBase.RaiseNotFoundException(System.Int32,System.String)">
            <summary>
            Causes a standard <code>404 Not Found</code> error to be returned including the given resource type (e.g. "blast")
            and the ID of a resource of that type that does not exist.
            </summary>
            <param name="resourceID">ID of missing resource</param>
            <param name="resourceTypeName">defaults to the value returned by <see cref="P:EmailMarketing.API.Controllers.AuthenticatedUserControllerBase.ControllerName"/></param>
        </member>
        <member name="M:EmailMarketing.API.Controllers.AuthenticatedUserControllerBase.RaiseNotFoundExceptionViaDirectThrow(System.Int32,System.String)">
            <summary>
            Causes a standard <code>404 Not Found</code> error to be returned including the given resource type (e.g. "blast")
            and the ID of a resource of that type that does not exist.  NOTE: this version should be used only
            if RaseNotFoundException() results in a 500 (rather than 404 expected.)
            </summary>
            <param name="resourceID">ID of missing resource</param>
            <param name="resourceTypeName">defaults to the value returned by <see cref="P:EmailMarketing.API.Controllers.AuthenticatedUserControllerBase.ControllerName"/></param>
        </member>
        <member name="P:EmailMarketing.API.Controllers.AuthenticatedUserControllerBase.APIAccessKey">
            <summary>
            Get the APIAccessKey extracted from HTTP Headers
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Controllers.AuthenticatedUserControllerBase.CustomerID">
            <summary>
            Get the ID of the customer extracted from HTTP Headers
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Controllers.AuthenticatedUserControllerBase.APIBaseChannel">
            <summary>
            Get the APIAccessKey extracted from HTTP Headers
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Controllers.AuthenticatedUserControllerBase.APIUser">
            <summary>
            Get the current Framework user object inferred from HTTP Headers
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Controllers.AuthenticatedUserControllerBase.APICustomer">
            <summary>
            Get the current Framework customer object inferred from HTTP headers
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Controllers.AuthenticatedUserControllerBase.CommonErrorLogID">
            <summary>
            Get/Set the ErrorLogID written during this request, if any.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Controllers.AuthenticatedUserControllerBase.MethodName">
            <summary>
            The name of the invoked method
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Controllers.AuthenticatedUserControllerBase.RouteDataControllerName">
            <summary>
            Returns the name of the controller responding to the current request from routing data.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Controllers.AuthenticatedUserControllerBase.SubjectID">
            <summary>
            Returns the ID value for the subject of the current request from routing data
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Controllers.AuthenticatedUserControllerBase.GetRouteDataStringValueOrEmpty(System.String)">
            <summary>
            Retrieve the value of a particular key from the route data of the current request
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="F:EmailMarketing.API.Controllers.AuthenticatedUserControllerBase.Logger">
            <summary>
            Exposes the logging instance for this controller
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Controllers.AuthenticatedUserControllerBase.RequestSignatureXML">
            <summary>
            (TODO)  extracts interesting datapoints from the request/environment and returns an XML string for logging
            </summary>
            <returns>XML as string</returns>
        </member>
        <member name="P:EmailMarketing.API.Controllers.AuthenticatedUserControllerBase.RequestSignatureString">
            <summary>
            Translates selected request properties into an API "method signature" for logging
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Controllers.AuthenticatedUserControllerBase.CheckLicense">
            <summary>
            Verifies the license and raise invalid exception message of no license available
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Controllers.AuthenticatedUserControllerBase.LogError(System.Int32,System.Exception,System.String)">
            <summary>
            Emits a log message out to the database and DOES update the master log record for this request.
            </summary>
            <param name="severity">error is deemed critical if 1 (one) is passed</param>
            <param name="Ex">An exception object</param>
            <param name="httpErrorReason">The "ReasonPhrase" associated with the HTTP status code returned for this request.</param>
        </member>
        <member name="M:EmailMarketing.API.Controllers.AuthenticatedUserControllerBase.UpdateLog">
            <summary>
            Updates the application log entry, appending <see cref="P:EmailMarketing.API.Controllers.AuthenticatedUserControllerBase.CommonErrorLogID"/> if
            an error was recorded in the common ErrorLog during this request.
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Controllers.AuthenticatedUserControllerBase.UpdateLog(System.Nullable{System.Int32})">
            <summary>
            Used to update the application log entry for the current request.
            </summary>
            <param name="ErrorLogID">Log ID for the error record associated with the current request, or NULL if no error occured.</param>
        </member>
        <member name="M:EmailMarketing.API.Controllers.AuthenticatedUserControllerBase.CreateResponseWithLocation``1(System.Net.HttpStatusCode,``0,System.Int32,System.String)">
            <summary>
            Convenience method, creates an HttpResponseMessage from a
            </summary>
            <param name="statusCode"></param>
            <param name="model"></param>
            <param name="routeName"></param>
            <returns></returns>
        </member>
        <member name="T:EmailMarketing.API.Controllers.ContentController">
            <summary>
            API methods exposing the Email Marketing Content object model as Resources for Create, Read, 
            Update and Delete via REST.  
            </summary>
            <remarks>For more information on REST, try this 
            <a href="http://en.wikipedia.org/wiki/Representational_state_transfer">Wikipedia article</a>.</remarks>
        </member>
        <member name="P:EmailMarketing.API.Controllers.ContentController.FrameworkEntity">
            <inheritdoc/>
        </member>
        <member name="P:EmailMarketing.API.Controllers.ContentController.ExposedProperties">
            <summary>
            Lists common properties between the (external) API model and the associated (internal) framework model by this service.
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Controllers.ContentController.Get(System.Int32)">
            <summary>
            Retrieves the Content resource identified by <pre>id</pre>
            </summary>
            <param name="id">ContentID for the target resource</param>
            <returns>On success, a Content API model object; otherwise,
            <note>In most cases returns Http Status Code <pre>200 OK</pre>; however, if the target 
            resource doesn't exist --for example, if it has been deleted-- the result is 
            <pre>Error 404 - Not Found.</pre></note> </returns>
            <example for="request"><![CDATA[
            GET http://api.ecn5.com/api/content/456789 HTTP/1.1
            Accept: application/xml
            Accept-Language: en-US
            User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko
            Accept-Encoding: gzip, deflate
            Connection: Keep-Alive
            APIAccessKey: <YOUR-API-ACCESS-KEY-HERE>
            X-Customer-ID: 99999
            Host: api.ecn5.com
            
            ]]></example>
            
            <example for="response"><![CDATA[
            HTTP/1.1 200 OK
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Server: Microsoft-IIS/8.0
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Fri, 10 Apr 2015 19:27:41 GMT
            Content-Length: 259
            
                {  
                     "ContentID":456789,
                     "FolderID":123,
                     "ContentSource":"<html><head><title>Email Title</title></head><body>Email HTML content here...</body></html>",
                     "ContentText":"Email text content here....",
                     "ContentTitle":"test bull",
                     "UpdatedDate":"2015-08-14"
                }
            ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.ContentController.Post(EmailMarketing.API.Models.Content)">
            <summary>
            Given a Content model object, add a new resource, assigning unique ContentID attribute (and REST Location 
            property).
            </summary>
            
            <param name="model">Content model object</param>
            
            <returns>On success, returns the given model object with <pre>ContentID</pre> filled in, 
            as well as a <pre>Location</pre> header.  In case of validation error(s), 
            Error <pre>400 - Bad Request</pre> is returned along with a message providing further 
            information.</returns>
            
            <header for="request">APIAccessKey</header>
            <header for="response">Location</header>
            
            <example for="request"><![CDATA[
            POST http://api.ecn5.com/api/content HTTP/1.1
            Content-Type: application/json; charset=utf-8
            APIAccessKey: <YOUR-API-ACCESS-KEY-HERE>
            X-Customer-ID: 99999
            Host: api.ecn5.com
            Content-Length: 237
            
                {  
                     "FolderID":123,
                     "ContentSource":"<html><head><title>Email Title</title></head><body>Email HTML content here...</body></html>",
                     "ContentText":"Email text content here....",
                     "ContentTitle":"test bull",
                }
            ]]></example>
            
            <example for="response"><![CDATA[
            HTTP/1.1 201 Created
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Location: http://api.ecn5.com/api/content/456789
            Server: Microsoft-IIS/8.0
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Tue, 14 Apr 2015 16:43:57 GMT
            Content-Length: 259
            
                {  
                     "ContentID":456789,
                     "FolderID":123,
                     "ContentSource":"<html><head><title>Email Title</title></head><body>Email HTML content here...</body></html>",
                     "ContentText":"Email text content here....",
                     "ContentTitle":"test bull",
                     "UpdatedDate":"2015-08-14"
                }
            ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.ContentController.Put(System.Int32,EmailMarketing.API.Models.Content)">
            <summary>
            Updates resource identified by <pre>id</pre> with the given model object
            </summary>
            <param name="id">ContentID for the target resource</param>
            <param name="apiModel">Content model object</param>
            <returns>On success, returns the given model object as well as a <pre>Location</pre> header.  
            In case of validation error(s), 
            Error <pre>400 - Bad Rquest</pre> is returned along with a message providing further 
            information.</returns>
            <example for="request"><![CDATA[
            PUT http://api.ecn5.com/api/content/456789 HTTP/1.1
            Content-Type: application/json; charset=utf-8
            APIAccessKey: <YOUR-API-ACCESS-KEY-HERE>
            X-Customer-ID: 99999
            Host: api.ecn5.com
            Content-Length: 259
            
                {  
                     "ContentID":456789,
                     "FolderID":123,
                     "ContentSource":"<html><head><title>Email Title</title></head><body>Email HTML content here...</body></html>",
                     "ContentText":"Email text content here....",
                     "ContentTitle":"new title"
                }
            ]]></example>
            
            <example for="response"><![CDATA[
            HTTP/1.1 200 OK
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Location: http://api.ecn5.com/api/content/456789
            Server: Microsoft-IIS/8.0
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Tue, 14 Apr 2015 16:43:57 GMT
            Content-Length: 259
            
                {  
                     "ContentID":456789,
                     "FolderID":123,
                     "ContentSource":"<html><head><title>Email Title</title></head><body>Email HTML content here...</body></html>",
                     "ContentText":"Email text content here....",
                     "ContentTitle":"new title",
                     "UpdatedDate":"2015-08-14"
                }
            ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.ContentController.Delete(System.Int32)">
            <summary>
            Removes a Content resource.
            </summary>
            <param name="id">ContentID of the target resource</param>
            <example for="request"><![CDATA[
            DELETE http://api.ecn5.com/api/content/456789 HTTP/1.1
            Accept: application/xml
            APIAccessKey: <YOUR-API-ACCESS-KEY-HERE>
            X-Customer-ID: 99999
            Host: api.ecn5.com
            ]]></example>
            
            <example for="response"><![CDATA[
            HTTP/1.1 204 No Content
            Cache-Control: no-cache
            Pragma: no-cache
            Expires: -1
            Server: Microsoft-IIS/8.0
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Tue, 14 Apr 2015 18:52:35 GMT
            ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.ContentController.Search(EmailMarketing.API.Models.SearchBase)">
             <summary>
             Provides search capabilities for Content resources. Search supports both GET and POST methods; results will be identical.
             </summary>
             <see cref="T:EmailMarketing.API.Models.Content"/>
             <param name="searchQuery">used to constrain the search</param>
             <returns>a list of matching <see cref="T:EmailMarketing.API.Models.Content"/> as Location/API Object pairs.</returns>
             
             <example for="request"><![CDATA[
              GET http://api.ecn5.com/api/search/content HTTP/1.1
              Content-Type: application/json; charset=utf-8
              Accept: application/json
              APIAccessKey: <YOUR-API-ACCESS-KEY-HERE>
              X-Customer-ID: 99999
              Host: api.ecn5.com
              Content-Length: 422
              
            {
                 "SearchCriteria": [
                 {
                     "Name": "Title",
                     "Comparator": "contains",
                     "ValueSet": "test"
                 },
                 {   
                     "Name": "FolderID",
                     "Comparator": "=",
                     "ValueSet": "123"
                 },
                 {   
                     "Name": "UpdatedDateFrom",
                     "Comparator": ">=",
                     "ValueSet": "2014-10-17 07:45:00"
                 },
                 {   
                     "Name": "UpdatedDateTo",
                     "Comparator": "<=",
                     "ValueSet": "2015-01-01 00:00:00"
                 },
                  {   
                     "Name": "Archived",
                     "Comparator": "=",
                     "ValueSet": "false"
                 }
                 
                 ]
             }
             
             
             ]]></example>
             
             <example for="response"><![CDATA[
               HTTP/1.1 200 OK
               Cache-Control: no-cache
               Pragma: no-cache
               Content-Type: application/json; charset=utf-8
               Expires: -1
               Server: Microsoft-IIS/8.0
               X-AspNet-Version: 4.0.30319
               X-Powered-By: ASP.NET
               Date: Tue, 21 Apr 2015 14:27:56 GMT
               Content-Length: 420
               
               [  
                 {  
                   "ApiObject":{  
                      "Archived=False",
                      "ContentID":456789,
                      "FolderID":123,
                      "ContentSource":"Please use Location property to retrieve Content Source",
                      "ContentText":"Please use Location property to retrieve Content Text",
                      "ContentTitle":"test bull",
                      "UseWYSIWYGeditor":null
                  },
                  "Location":"http://api.ecn5.com/api/content/456789"
                 }
               ]
             ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.ContentController.CleanseInputData(EmailMarketing.API.Models.Content)">
            <summary>
            Prepares the incoming APIModel from a POST for transformation to Framework model
            </summary>
            <param name="model">The API Model instance provided for insert via HTTP POST</param>
        </member>
        <member name="T:EmailMarketing.API.Controllers.CustomFieldController">
            <summary>
            API methods exposing the Email Marketing CustomField object model as Resources for Read, Create, and Search.
            </summary>
            <remarks>For more information on REST, try this 
            <a href="http://en.wikipedia.org/wiki/Representational_state_transfer">Wikipedia article</a>.</remarks>
        </member>
        <member name="P:EmailMarketing.API.Controllers.CustomFieldController.FrameworkEntity">
            <inheritdoc/>
        </member>
        <member name="M:EmailMarketing.API.Controllers.CustomFieldController.Get(System.Int32)">
            <summary>
            Retrieves the Custom Field resource identified by <pre>id</pre>
            </summary>
            <param name="id">GroupDataFieldID for the target resource</param>
            <returns>On success, a CustomField API model object; otherwise,
            <note>In most cases returns Http Status Code <pre>200 OK</pre>; however, if the target 
            resource doesn't exist --for example, if it has been deleted-- the result is 
            <pre>Error 404 - Not Found.</pre></note> </returns>
            <example for="request"><![CDATA[
            GET http://api.ecn5.com/api/customfield/456789 HTTP/1.1
            Accept: application/xml
            Accept-Language: en-US
            User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko
            Accept-Encoding: gzip, deflate
            Connection: Keep-Alive
            APIAccessKey: <YOUR-API-ACCESS-KEY-HERE>
            X-Customer-ID: 99999
            Host: api.ecn5.com
            
            ]]></example>
            
            <example for="response"><![CDATA[
            HTTP/1.1 200 OK
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Server: Microsoft-IIS/8.0
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Fri, 10 Apr 2015 19:27:41 GMT
            Content-Length: 259
            
                {  
                     "GroupDataFieldsID":456789,
                     "GroupID":123,
                     "ShortName":"MyField",
                     "LongName":"This is my custom field description",
                     "IsPublic":"Y"
                }
            ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.CustomFieldController.Post(EmailMarketing.API.Models.CustomField)">
            <summary>
            Given a CustomField model object, add a new resource, assigning unique GroupDataFieldsID attribute (and REST Location 
            property).
            </summary>
            
            <param name="model">CustomField model object</param>
            
            <returns>On success, returns the given model object with <pre>GroupDataFieldsID</pre> filled in, 
            as well as a <pre>Location</pre> header.  In case of validation error(s), 
            Error <pre>400 - Bad Request</pre> is returned along with a message providing further 
            information.</returns>
            
            <header for="request">APIAccessKey</header>
            <header for="response">Location</header>
            
            <example for="request"><![CDATA[
            POST http://api.ecn5.com/api/customfield HTTP/1.1
            Content-Type: application/json; charset=utf-8
            APIAccessKey: <YOUR-API-ACCESS-KEY-HERE>
            X-Customer-ID: 99999
            Host: api.ecn5.com
            Content-Length: 237
            
                {  
                     "GroupID":123,
                     "ShortName":"MyField",
                     "LongName":"This is my custom field description",
                     "IsPublic":"Y"
                }
            ]]></example>
            
            <example for="response"><![CDATA[
            HTTP/1.1 201 Created
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Location: http://api.ecn5.com/api/customfield/456789
            Server: Microsoft-IIS/8.0
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Tue, 14 Apr 2015 16:43:57 GMT
            Content-Length: 259
            
                {  
                     "GroupDataFieldsID":456789,
                     "GroupID":123,
                     "ShortName":"MyField",
                     "LongName":"This is my custom field description",
                     "IsPublic":"Y"
                }
            ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.CustomFieldController.Put(System.Int32,EmailMarketing.API.Models.CustomField)">
            <summary>
            This feature is not implemented
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Controllers.CustomFieldController.Delete(System.Int32)">
            <summary>
            This feature is not implemented
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Controllers.CustomFieldController.Search(EmailMarketing.API.Models.SearchBase)">
            <summary>
            Provides search capabilities for CustomField resources.  Search supports both GET and POST methods; results will be identical.
            </summary>
            <see cref="T:EmailMarketing.API.Models.CustomField"/>
            <param name="query">used to constrain the search</param>
            <returns>a list of matching <see cref="T:EmailMarketing.API.Models.CustomField"/> as Location/API Object pairs.</returns>
            
            <example for="request"><![CDATA[
             GET http://api.ecn5.com/api/search/customfield HTTP/1.1
             Content-Type: application/json; charset=utf-8
             Accept: application/json
             APIAccessKey: <YOUR-API-ACCESS-KEY-HERE>
             X-Customer-ID: 99999
             Host: api.ecn5.com
             Content-Length: 422
             
             {
                "SearchCriteria": [
                {
                    "Name": "GroupID",
                    "Comparator": "=",
                    "ValueSet": "123"  
                }
                ]
             }
             ]]></example>
            <example for="response"><![CDATA[
              HTTP/1.1 200 OK
              Cache-Control: no-cache
              Pragma: no-cache
              Content-Type: application/json; charset=utf-8
              Expires: -1
              Server: Microsoft-IIS/8.0
              X-AspNet-Version: 4.0.30319
              X-Powered-By: ASP.NET
              Date: Tue, 21 Apr 2015 14:27:56 GMT
              Content-Length: 420
              
              [  
                {  
                  "ApiObject":{  
                     "GroupDataFieldsID":456789,
                     "GroupID":123,
                     "ShortName":"MyField",
                     "LongName":"This is my custom field description",
                     "IsPublic":"Y"
                 },
                 "Location":"http://api.ecn5.com/api/customfield/456789"
                }
              ]
            ]]></example>
        </member>
        <member name="T:EmailMarketing.API.Controllers.EmailGroupController">
            <summary>
            API methods exposing email group subscription management
            </summary>
        </member>
        <member name="F:EmailMarketing.API.Controllers.EmailGroupController.ALLOW_MULTIGROUP_PROFILE_MANAGEMENT">
            <summary>
            When false, a request to manage profiles specifying more than a single group will raise an exception
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Controllers.EmailGroupController.FrameworkEntity">
            <inheritdoc/>
        </member>
        <member name="M:EmailMarketing.API.Controllers.EmailGroupController.ManageSubscribersWithProfile(EmailMarketing.API.Models.EmailGroup.ManageProfile)">
             <summary>
            Add one or more subscriber profiles (Email Address, Name, Custom Fields, etc.) to a single group.  If the Email Address already exists the profile data will be updated.
            <b>Note: To update an Email Address please use the UpdateEmailAddress method.</b>
             </summary>
             <param name="profileList"></param>
             <returns></returns>
            <example for="request"><![CDATA[
             POST http://api.ecn5.com/api/emailgroup/methods/ManageSubscriberWithProfile HTTP/1.1
             Accept: application/json
             Content-type: application/json
             APIAccessKey: <YOUR-API-KEY-HERE>
             X-Customer-ID: 77777
             Host: api.ecn5.com
             Content-Length: 1352
            
                 {
                     "GroupID":123456,
                     "Format":"HTML",
                     "SubscribeType":"U",
                     "Profiles":[
                     {
                         "EmailAddress":"someone@nowhere.com",
                         "Title":"Mr",
                         "FirstName":"Som",
                         "LastName":"eone",
                         "FullName":"Som Eone",
                         "Company":"A Fine Place",
                         "Occupation":"Stuff and things",
                         "Address":"123 My Street",
                         "Address2":"Schweet Sweet Suite",
                         "City":"A Little Place",
                         "State":"Confused",
                         "Zip":"90210",
                         "Country":"UWF",
                         "Voice":"612.555.1212",
                         "Mobile":"651.555.1212",
                         "Fax":"952.555.1212",
                         "Website":"http://www.ecn5.com",
                         "Age":"18",
                         "Income":"19",
                         "Gender":"20",
                         "User1":"sample string 21",
                         "User2":"sample string 22",
                         "User3":"sample string 23",
                         "User4":"sample string 24",
                         "User5":"sample string 25",
                         "User6":"sample string 26",
                         "UserEvent1":"sample string 27",
                         "UserEvent1Date":"2015-06-16",
                         "UserEvent2":"sample string 28",
                         "UserEvent2Date":"2015-06-17",
                         "Birthdate":"1915-06-18",
                         "Notes":"a note can be placed here",
                         "Password":"a password could be stored here",
                         "SubscribeType": "S",
                         "Format":"HTML",
                         "CustomFields": [
                         {
                             "Name": "sample string 1",
                             "Value": "sample string 2"
                         },
                         {
                             "Name": "sample string 1",
                             "Value": "sample string 2"
                         }
                         ]
                      },
                      {
                         "EmailAddress":"testing@nowhere.com",
                         "Title":"Mr",
                         "FirstName":"Som",
                         "LastName":"eone",
                         "FullName":"Som Eone",
                         "Company":"A Fine Place",
                         "Occupation":"Stuff and things",
                         "Address":"123 My Street",
                         "Address2":"Schweet Sweet Suite",
                         "City":"A Little Place",
                         "State":"Confused",
                         "Zip":"90210",
                         "Country":"UWF",
                         "Voice":"612.555.1212",
                         "Mobile":"651.555.1212",
                         "Fax":"952.555.1212",
                         "Website":"http://www.ecn5.com",
                         "Age":"18",
                         "Income":"19",
                         "Gender":"20",
                         "User1":"sample string 21",
                         "User2":"sample string 22",
                         "User3":"sample string 23",
                         "User4":"sample string 24",
                         "User5":"sample string 25",
                         "User6":"sample string 26",
                         "UserEvent1":"sample string 27",
                         "UserEvent1Date":"2015-06-16",
                         "UserEvent2":"sample string 28",
                         "UserEvent2Date":"2015-06-17",
                         "Birthdate":"1915-06-18",
                         "Notes":"a note can be placed here",
                         "Password":"a password could be stored here",
                         "SubscribeType":"S",
                         "Format":"HTML",
                         "CustomFields": [
                         {
                             "Name": "sample string 1",
                             "Value": "sample string 2"
                         },
                         {
                             "Name": "sample string 1",
                             "Value": "sample string 2"
                         }
                         ]
                     }
                     ]
                 }
            ]]></example>
            <example for="response"><![CDATA[
             HTTP/1.1 200 OK
             Cache-Control: no-cache
             Pragma: no-cache
             Content-Type: application/json; charset=utf-8
             Expires: -1
             Server: Microsoft-IIS/7.5
             X-AspNet-Version: 4.0.30319
             X-Powered-By: ASP.NET
             Date: Fri, 19 Jun 2015 22:09:31 GMT
             Content-Length: 117
            
             {
                "New":2,
                "Updated":0,
                "Skipped":0,
                "Duplicate":0,
                "MasterSuppressed":0,
                "Total":2
             }
             ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.EmailGroupController.ManageSubscriberWithProfileAndTrigger(EmailMarketing.API.Models.EmailGroup.ManageProfileAndTrigger)">
            <summary>
            - This is the same as the existing ManageSubscriberWithProfile with an additional parameter of TriggerID.
            - This TriggerID needs to make it all the way to the Eventer as an optional parameter.If it is passed to the Eventer we would check to see if we have that in the database as a LayoutPlanID.If we do, we use that trigger.  If we don't we follow the normal path and look for any other triggers on that group.
            - This method should not appear in the online documentation.
            - This method replaces the old AddSubscriberUsingSmartForm.
            </summary>
            <param name="profileList"></param>
            <param name="TriggerID"></param>
            <returns></returns>
        </member>
        <member name="M:EmailMarketing.API.Controllers.EmailGroupController.ManageSubscriberWithDupeAndTrigger(EmailMarketing.API.Models.EmailGroup.ManageProfileWithDupeAndTrigger)">
            <summary>
            - This is the same as the existing ManageSubscriberWithProfile with an additional parameter of TriggerID.  It also must incorporate any logic necessary from the old web service we are replacing.
            - This TriggerID needs to make it all the way to the Eventer as an optional parameter.If it is passed to the Eventer we would check to see if we have that in the database as a LayoutPlanID.If we do, we use that trigger.  If we don't we follow the normal path and look for any other triggers on that group.
            - This method should not appear in the online documentation.
            - This method replaces the old AddSubscriberWithDupesUsingSmartForm.
            </summary>
            <param name="profileList"></param>
            <param name="TriggerID"></param>
            <param name="compositeKey"></param>
            <returns></returns>
        </member>
        <member name="M:EmailMarketing.API.Controllers.EmailGroupController.UpdateEmailAddressForGroup(EmailMarketing.API.Models.EmailGroup.UpdateEmailAddressForGroup)">
             <summary>
            Updates a subscriber’s Email Address and profile data across the entire customer account.
            <b>Note: Under normal circumstances please use UpdateEmailAddress to update a subscriber’s Email Address or ManageSubscriberWithProfile to update a subscriber’s profile data and check with your Digital Specialist before using this method as it may have unintended results.</b>
             </summary>
             <param name="profileList">list of subscriber profiles requiring change of email address</param>
             <returns>subscription result</returns>
             <example for="request"><![CDATA[
             POST http://api.ecn5.com/api/emailgroup/methods/UpdateEmailAddressForGroup HTTP/1.1
             Host: api.ecn5.com
             Content-Length: 531
             Content-type: application/json
             Accept: application/json
             APIAccessKey: <YOUR-API-ACCESS-KEY-HERE>
             X-Customer-ID: 99999
            
            
              {
                 "OldEmailAddress": "sample string 1",
                 "GroupID": 2,
                 "EmailAddress": "sample string 3",
                 "Title": "sample string 4",
                 "FirstName": "sample string 5",
                 "LastName": "sample string 6",
                 "FullName": "sample string 7",
                 "Company": "sample string 8",
                 "Occupation": "sample string 9",
                 "Address": "sample string 10",
                 "Address2": "sample string 11",
                 "City": "sample string 12",
                 "State": "sample string 13",
                 "Zip": "sample string 14",
                 "Country": "sample string 15",
                 "Voice": "sample string 16",
                 "Mobile": "sample string 17",
                 "Fax": "sample string 18",
                 "Website": "sample string 19",
                 "Age": "sample string 20",
                 "Income": "sample string 21",
                 "Gender": "sample string 22",
                 "User1": "sample string 23",
                 "User2": "sample string 24",
                 "User3": "sample string 25",
                 "User4": "sample string 26",
                 "User5": "sample string 27",
                 "User6": "sample string 28",
                 "Birthdate": "2015-12-10T11:47:32.0098991-06:00",
                 "UserEvent1": "sample string 29",
                 "UserEvent1Date": "2015-12-10T11:47:32.0098991-06:00",
                 "UserEvent2": "sample string 30",
                 "UserEvent2Date": "2015-12-10T11:47:32.0098991-06:00",
                 "Notes": "sample string 31",
                 "Password": "sample string 32",
                 "SubscribeType": "Subscribe",
                 "Format": "HTML",
                 "CustomFields": [
                 {
                     "Name": "sample string 1",
                     "Value": "sample string 2"
                 },
                 {
                     "Name": "sample string 1",
                     "Value": "sample string 2"
                 }
                 ]
              }
             ]]></example>
            <example for="response"><![CDATA[
             HTTP/1.1 200 OK
             Cache-Control: no-cache
             Pragma: no-cache
             Content-Type: application/json; charset=utf-8
             Expires: -1
             Server: Microsoft-IIS/7.5
             X-AspNet-Version: 4.0.30319
             X-Powered-By: ASP.NET
             Date: Tue, 03 Nov 2015 17:55:43 GMT
             Connection: close
             Content-Length: 124
            
             {
                "New":1,
                "Updated":0,
                "Skipped":0,
                "Duplicate":0,
                "MasterSuppressed":0,
                "Total":1
             }
             ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.EmailGroupController.UpdateEmailAddress(EmailMarketing.API.Models.EmailGroup.UpdateEmailAddress)">
             <summary>
            Updates a subscriber’s Email Address by Master Suppressing the old Email Address and creating a new Email Address record with the old profile data.
            <b>Note: This functions the same as the Email Marketing web site with the exception that this update is limited in scope to the Customer as opposed to the Base Channel.
            When you submit the request an email is sent to the old email address asking them to confirm the change to their new email address. Until the recipient verifies the change the email address will not be updated in ECN.</b>
             </summary>
             <param name="update"></param>
             <returns></returns>
             <example for="request"><![CDATA[
             POST http://api.ecn5.com/api/emailgroup/methods/UpdateEmailAddress HTTP/1.0
             Host: api.ecn5.com
             Content-Length: 531
             Content-type: application/json
             Accept: application/json
             APIAccessKey: <YOUR-API-ACCESS-KEY-HERE>
             X-Customer-ID: 99999
            
                 {
                     "OldEmailAddress": "prior@email-address.com",
                     "NewEmailAddress": "new@email-address.com"
                 }
             ]]></example>
            
            <example for="response"><![CDATA[
             HTTP/1.1 200 OK
             Cache-Control: no-cache
             Pragma: no-cache
             Content-Type: application/json; charset=utf-8
             Expires: -1
             Server: Microsoft-IIS/7.5
             X-AspNet-Version: 4.0.30319
             X-Powered-By: ASP.NET
             Date: Tue, 03 Nov 2015 17:55:43 GMT
             Connection: close
             Content-Length: 124
            
            
                {
                     "New":1,
                     "Updated":0,
                     "Skipped":0,
                     "MasterSuppressed":0,
                     "Duplicate":0,
                     "Total":1
                }
            
             ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.EmailGroupController.CountSubscribers(System.Int32)">
             <summary>
             Provides the number of subscribers associated with a given group.
             </summary>
             <param name="id">Group ID</param>
             <returns>the number of subscribers as an integer</returns>
             <example for="request"><![CDATA[
             GET /api/emailgroup/456789/Count HTTP/1.1
             Accept: application/json
             Accept-Language: en-US
             User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko
             Accept-Encoding: gzip, deflate
             Connection: Keep-Alive
             APIAccessKey: <YOUR-API-ACCESS-KEY-HERE>
             X-Customer-ID: 99999
             Host: api.ecn5.com
            
             ]]></example>
            
             <example for="response"><![CDATA[
            HTTP/1.1 200 OK
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Server: Microsoft-IIS/7.5
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Mon, 10 Aug 2015 17:15:33 GMT
            Content-Length: 1
            
            {
             "Result": 4
            }
             ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.EmailGroupController.AddToMasterSuppressionList(System.String[])">
             <summary>
             Add subscribers to the master suppression list.
             </summary>
             <param name="emailAddresses">email addresses to be master suppressed, specified in the request body a list strings</param>
             <example for="request"><![CDATA[
             POST /api/emailGroup/methods/MasterSuppress HTTP/1.1
             Content-Type: application/json
             Accept: application/json
             APIAccessKey: <PUT-YOUR-API-ACCESS-KEY-HERE>
             X-Customer-ID: 55555
             Host: api.ecn5.com
             Content-Length: 28
            
             [ "foo-suppressed@bar.com" ]
             ]]></example>
             <example for="response">
             HTTP/1.1 200 OK
             Cache-Control: no-cache
             Pragma: no-cache
             Content-Type: application/json; charset=utf-8
             Expires: -1
             Server: Microsoft-IIS/7.5
             X-AspNet-Version: 4.0.30319
             X-Powered-By: ASP.NET
             Date: Wed, 02 Sep 2015 23:35:37 GMT
             Content-Length: 119
             [{"GroupID":93708,"EmailID":303284124,"EmailAddress":"foo-suppressed@bar.com","Status":"S","Result":"New, Subscribed"}]
             </example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.EmailGroupController.DeleteSubscriber(System.Int32,System.String)">
             <summary>
             Delete a subscriber from an Email Group by Email Address
             </summary>
             <param name="id">an Email Group ID</param>
             <param name="emailAddress">a subscriber Email Address</param>
             <example for="request"><![CDATA[
             DELETE http://api.ecn5.com/api/emailGroup/49195/DeleteByEmailAddress HTTP/1.1
             Content-Type: application/json
             Accept: application/json
             APIAccessKey: <PUT-YOUR-API-ACCESS-KEY-HERE>
             X-Customer-ID: 55555
             Host: api.ecn5.com
             Content-Length: 23
            
             "someone@somewhere.com"
             ]]></example>
             <example for="response"><![CDATA[
             HTTP/1.1 204 No Content
             Cache-Control: no-cache
             Pragma: no-cache
             Expires: -1
             Server: Microsoft-IIS/7.5
             X-AspNet-Version: 4.0.30319
             X-Powered-By: ASP.NET
             Date: Thu, 03 Sep 2015 00:22:24 GMT
            
             ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.EmailGroupController.GetBestProfileForEmailAddress(System.Int32,System.String)">
             <summary>
             Get the profile information for a given email address within a customer for a specific group.
             If the email address is associated with the given group we will return standard profile fields
             as well as their relationship to the group and any UDF data.  If the email address exists within
             the customer but is not associated with the given group we will only return standard profile
             information.  If the email address is not associated with the customer we will return a null/empty
             result set.
             </summary>
             <param name="id">Email Group ID</param>
             <param name="emailAddress">Email Address</param>
             <returns>Profile Information as a collection of key/value pairs</returns>
             <summary>
             Get Profile information including UDF for subscribers with the given email address
             </summary>
             <param name="id">Email Group ID</param>
             <param name="emailAddress">Email Address</param>
             <returns>Profile Information as a collection of key/value pair sets for each subscriber</returns>
             <example for="request"><![CDATA[
             GET /api/emailGroup/123245/BestProfileForEmailAddress HTTP/1.1
             Content-Type: application/json
             Accept: application/json
             APIAccessKey: <PUT-YOUR-API-ACCESS-KEY-HERE>
             X-Customer-ID: 55555
             Host: api.ecn5.com
             Content-Length: 35
            
             "someone@somewhere.com"
             ]]></example>
             <example for="response"><![CDATA[
             HTTP/1.1 200 OK
             Cache-Control: no-cache
             Pragma: no-cache
             Content-Type: application/json; charset=utf-8
             Expires: -1
             Server: Microsoft-IIS/7.5
             X-AspNet-Version: 4.0.30319
             X-Powered-By: ASP.NET
             Date: Wed, 02 Sep 2015 23:27:05 GMT
             Content-Length: 1224
             [
                {
                   "EmailID":"123456789",
                   "EmailAddress":"someone@somewhere.com",
                   "Title":"RestTest1",
                   "FirstName":"Jim",
                   "LastName":"Bob",
                   "FullName":"Jim Bob",
                   "Company":"ABC",
                   "Occupation":"",
                   "Address":"",
                   "Address2":"",
                   "City":"",
                   "State":"",
                   "Zip":"",
                   "Country":"USA",
                   "Voice":"",
                   "Mobile":"",
                   "Fax":"",
                   "Website":"",
                   "Age":"",
                   "Income":"",
                   "Gender":"",
                   "User1":"a",
                   "User2":"125.25",
                   "User3":"",
                   "User4":"",
                   "User5":"",
                   "User6":"",
                   "Birthdate":"",
                   "UserEvent1":"",
                   "UserEvent1Date":"",
                   "UserEvent2":"",
                   "UserEvent2Date":"",
                   "password":"",
                   "CreatedOn":"2/2/2011 2:37:05 PM",
                   "LastChanged":"12/8/2014 12:47:41 PM",
                   "FormatTypeCode":"html",
                   "SubscribeTypeCode":"S",
                   "GroupID":"123245",
                   "SMSEnabled":"true",
                   "MyUDF":"a value for my custom field"
                }
             ]
             /// ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.EmailGroupController.GetProfilesByEmailAddress(System.Int32,System.String)">
             <summary>
             Get Profile information including UDF for subscribers with the given email address
             </summary>
             <param name="id">Email Group ID</param>
             <param name="emailAddress">Email Address</param>
             <returns>Profile Information as a collection of key/value pair sets for each subscription of the given email address to the given group</returns>
             <example for="request"><![CDATA[
             GET http://api.ecn5.com/api/emailGroup/49195/ProfilesByEmailAddress HTTP/1.1
             Content-Type: application/json
             Accept: application/json
             APIAccessKey: <PUT-YOUR-API-ACCESS-KEY-HERE>
             X-Customer-ID: 55555
             Host: api.ecn5.com
             Content-Length: 35
            
             "someone@somewhere.com"
             ]]></example>
             <example for="response"><![CDATA[
             HTTP/1.1 200 OK
             Cache-Control: no-cache
             Pragma: no-cache
             Content-Type: application/json; charset=utf-8
             Expires: -1
             Server: Microsoft-IIS/7.5
             X-AspNet-Version: 4.0.30319
             X-Powered-By: ASP.NET
             Date: Wed, 02 Sep 2015 23:27:05 GMT
             Content-Length: 1224
                {
                   "EmailID":"123456789",
                   "EmailAddress":"someone@somewhere.com",
                   "Title":"RestTest1",
                   "FirstName":"Jim",
                   "LastName":"Bob",
                   "FullName":"Jim Bob",
                   "Company":"ABC",
                   "Occupation":"",
                   "Address":"",
                   "Address2":"",
                   "City":"",
                   "State":"",
                   "Zip":"",
                   "Country":"USA",
                   "Voice":"",
                   "Mobile":"",
                   "Fax":"",
                   "Website":"",
                   "Age":"",
                   "Income":"",
                   "Gender":"",
                   "User1":"a",
                   "User2":"125.25",
                   "User3":"",
                   "User4":"",
                   "User5":"",
                   "User6":"",
                   "Birthdate":"",
                   "UserEvent1":"",
                   "UserEvent1Date":"",
                   "UserEvent2":"",
                   "UserEvent2Date":"",
                   "password":"",
                   "CreatedOn":"2/2/2011 2:37:05 PM",
                   "LastChanged":"12/8/2014 12:47:41 PM",
                   "GroupID":"49195",
                   "FormatTypeCode":"html",
                   "SubscribeTypeCode":"S",
                   "MyUDF":"a value for my custom field"
                }
             /// ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.EmailGroupController.GetSubscriberStatus(System.String)">
             <summary>
             Get group subscription status
             </summary>
             <param name="emailAddress">Email Address</param>
             <returns>a list of subscriptions for <code>emailAddress</code> containing GroupID, GroupName and SubscribeTypeCode</returns>
             <example for="request"><![CDATA[
             GET /api/emailGroup/methods/StatusByEmailAddress HTTP/1.1
             Content-Type: application/json
             Accept: application/json
             APIAccessKey: <PUT-YOUR-API-ACCESS-KEY-HERE>
             X-Customer-ID: 55555
             Host: api.ecn5.com
             Content-Length: 26
            
             "someone@somwhere.com"
             ]]></example>
             <example for="response"><![CDATA[
             HTTP/1.1 200 OK
             Cache-Control: no-cache
             Pragma: no-cache
             Content-Type: application/json; charset=utf-8
             Expires: -1
             Server: Microsoft-IIS/7.5
             X-AspNet-Version: 4.0.30319
             X-Powered-By: ASP.NET
             Date: Wed, 02 Sep 2015 20:06:57 GMT
             Content-Length: 169
            
             [
                {
                   "GroupID":"123",
                   "GroupName":"First Group",
                   "SubscribeTypeCode":"S"
                },
                {
                   "GroupID":"456",
                   "GroupName":"Second Group",
                   "SubscribeTypeCode":"U"
                }
             ]
             /// ]]></example>
        </member>
        <member name="T:EmailMarketing.API.Controllers.FilterController">
            <summary>
            API methods exposing the Email Marketing Filter object model as Resources for Create, Read, 
            Update and Delete via REST.  
            </summary>
            <remarks>For more information on REST, try this 
            <a href="http://en.wikipedia.org/wiki/Representational_state_transfer">Wikipedia article</a>.</remarks>
        </member>
        <member name="P:EmailMarketing.API.Controllers.FilterController.FrameworkEntity">
            <inheritdoc/>
        </member>
        <member name="M:EmailMarketing.API.Controllers.FilterController.Get(System.Int32)">
            <summary>
            This feature is not implemented
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Controllers.FilterController.Post(EmailMarketing.API.Models.Filter)">
            <summary>
            This feature is not implemented
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Controllers.FilterController.Put(System.Int32,EmailMarketing.API.Models.Filter)">
            <summary>
            This feature is not implemented
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Controllers.FilterController.Delete(System.Int32)">
            <summary>
            This feature is not implemented
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Controllers.FilterController.Search(EmailMarketing.API.Models.SearchBase)">
            <summary>
            Provides search capabilities for Filter resources. Search supports both GET and POST methods; results will be identical.
            </summary>
            <see cref="T:EmailMarketing.API.Models.Filter"/>
            <param name="searchQuery">used to constrain the search</param>
            <returns>a list of matching <see cref="T:EmailMarketing.API.Models.Filter"/> as Location/API Object pairs.</returns>
            
            <example for="request"><![CDATA[
             GET http://api.ecn5.com/api/search/filter HTTP/1.1
             Content-Type: application/json; charset=utf-8
             Accept: application/json
             APIAccessKey: <YOUR-API-ACCESS-KEY-HERE>
             X-Customer-ID: 99999
             Host: api.ecn5.com
             Content-Length: 422
             
             {
                "SearchCriteria": [
                {
                    "Name": "GroupID",
                    "Comparator": "=",
                    "ValueSet": "123"
                },
                {   
                    "Name": "Archived",
                    "Comparator": "=",
                    "ValueSet": "false"
                }
                ]
            }    
            ]]></example>
            
            <example for="response"><![CDATA[
              HTTP/1.1 200 OK
              Cache-Control: no-cache
              Pragma: no-cache
              Content-Type: application/json; charset=utf-8
              Expires: -1
              Server: Microsoft-IIS/8.0
              X-AspNet-Version: 4.0.30319
              X-Powered-By: ASP.NET
              Date: Tue, 21 Apr 2015 14:27:56 GMT
              Content-Length: 420
              
              [  
                {  
                  "ApiObject":{  
                     "GroupID = 321417"
                     "Archived=False",
                     "FilterID":456789,
                     "FilterName":"My Filter"
                 },
                 "Location":"http://api.ecn5.com/api/filter/456789"
                }
              ]
            ]]></example>
        </member>
        <member name="T:EmailMarketing.API.Controllers.GroupController">
            <summary>
            API methods exposing the Email Marketing Group object model as Resources for Create, Read, 
            Update and Delete via REST.  
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Controllers.GroupController.FrameworkEntity">
            <inheritdoc/>
        </member>
        <member name="M:EmailMarketing.API.Controllers.GroupController.Get(System.Int32)">
            <summary>
            Retrieves the Group resource identified by <pre>id</pre>
            </summary>
            <param name="id">GroupID for the target resource</param>
            <returns>On success, a Group API model object; otherwise,
            <note>In most cases returns Http Status Code <pre>200 OK</pre>; however, if the target 
            resource doesn't exist --for example, if it has been deleted-- the result is 
            <pre>Error 404 - Not Found.</pre></note> </returns>
            <example for="request"><![CDATA[
            GET http://api.ecn5.com/api/group/456789 HTTP/1.1
            Accept: application/xml
            Accept-Language: en-US
            User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko
            Accept-Encoding: gzip, deflate
            Connection: Keep-Alive
            APIAccessKey: <YOUR-API-ACCESS-KEY-HERE>
            X-Customer-ID: 99999
            Host: api.ecn5.com
            
            ]]></example>
            
            <example for="response"><![CDATA[
            HTTP/1.1 200 OK
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Server: Microsoft-IIS/8.0
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Fri, 10 Apr 2015 19:27:41 GMT
            Content-Length: 259
            
                {  
                     "GroupID":456789,
                     "FolderID":123,
                     "GroupName":"My Group",
                     "GroupDescription":"This is my group description"
                }
            ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.GroupController.Post(EmailMarketing.API.Models.Group)">
            <summary>
            Given a Group model object, add a new resource, assigning unique GroupID attribute (and REST Location 
            property).
            </summary>
            
            <param name="model">Group model object</param>
            
            <returns>On success, returns the given model object with <pre>GroupID</pre> filled in, 
            as well as a <pre>Location</pre> header.  In case of validation error(s), 
            Error <pre>400 - Bad Request</pre> is returned along with a message providing further 
            information.</returns>
            
            <header for="request">APIAccessKey</header>
            <header for="response">Location</header>
            
            <example for="request"><![CDATA[
            POST http://api.ecn5.com/api/group HTTP/1.1
            Content-Type: application/json; charset=utf-8
            APIAccessKey: <YOUR-API-ACCESS-KEY-HERE>
            X-Customer-ID: 99999
            Host: api.ecn5.com
            Content-Length: 237
            
                {  
                     "FolderID":123,
                     "GroupName":"My Group",
                     "GroupDescription":"This is my group description"
                }
            ]]></example>
            
            <example for="response"><![CDATA[
            HTTP/1.1 201 Created
            Cache-Control: no-cache
            Pragma: no-cache
            Content-Type: application/json; charset=utf-8
            Expires: -1
            Location: http://api.ecn5.com/api/group/456789
            Server: Microsoft-IIS/8.0
            X-AspNet-Version: 4.0.30319
            X-Powered-By: ASP.NET
            Date: Tue, 14 Apr 2015 16:43:57 GMT
            Content-Length: 259
            
                {  
                     "GroupID":456789,
                     "FolderID":123,
                     "GroupName":"My Group",
                     "GroupDescription":"This is my group description"
                }
            ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.GroupController.Put(System.Int32,EmailMarketing.API.Models.Group)">
            <summary>
            This feature is not implemented
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Controllers.GroupController.Delete(System.Int32)">
            <summary>
            This feature is not implemented
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Controllers.GroupController.Search(EmailMarketing.API.Models.SearchBase)">
            <summary>
            Provides search capabilities for Group resources. Search supports both GET and POST methods; results will be identical.
            </summary>
            <see cref="T:EmailMarketing.API.Models.Group"/>
            <param name="query">used to constrain the search.  You may provide either or both support criteria, or no parameters to get all.</param>
            <returns>a list of matching <see cref="T:EmailMarketing.API.Models.Group"/> as Location/API Object pairs.</returns>
            
            <example for="request"><![CDATA[
             POST http://api.ecn5.com/api/search/group HTTP/1.1
             Content-Type: application/json; charset=utf-8
             Accept: application/json
             APIAccessKey: <YOUR-API-ACCESS-KEY-HERE>
             X-Customer-ID: 99999
             Host: api.ecn5.com
             Content-Length: 422
             
             {
                "SearchCriteria": [
                {
                    "Name": "Name",
                    "Comparator": "contains",
                    "ValueSet": "test"
                },
                {
                    "Name": "FolderID",
                    "Comparator": "=",
                    "ValueSet": "123"
                },
                {   
                    "Name": "Archived",
                    "Comparator": "=",
                    "ValueSet": "false"
                }
                ]
             }
             
             OR pass no parameters to get all
             
             POST http://api.ecn5.com/api/search/group HTTP/1.1
             Content-Type: application/json; charset=utf-8
             Accept: application/json
             APIAccessKey: <YOUR-API-ACCESS-KEY-HERE>
             X-Customer-ID: 99999
             Host: api.ecn5.com
             Content-Length: 0
             
            {
             "SearchCriteria": []
            }
            
            ]]></example>
            
            <example for="response"><![CDATA[
              HTTP/1.1 200 OK
              Cache-Control: no-cache
              Pragma: no-cache
              Content-Type: application/json; charset=utf-8
              Expires: -1
              Server: Microsoft-IIS/8.0
              X-AspNet-Version: 4.0.30319
              X-Powered-By: ASP.NET
              Date: Tue, 21 Apr 2015 14:27:56 GMT
              Content-Length: 420
              
              [  
                {  
                  "ApiObject":{  
                     "Archived=False",
                     "GroupID":456789,
                     "GroupName":"test",
                     "FolderID":456789,
                     "GroupDescription":"test description",
                 },
                 "Location":"http://api.ecn5.com/api/group/456789"
                }
              ]
            ]]></example>
        </member>
        <member name="M:EmailMarketing.API.Controllers.GroupController.CleanseInputData(EmailMarketing.API.Models.Group)">
            <summary>
            Prepares the incoming APIModel from a POST for transformation to Framework model
            </summary>
            <param name="model">The API Model instance provided for insert via HTTP POST</param>
        </member>
        <member name="T:EmailMarketing.API.Exceptions.ExceptionConfiguration`1">
            <summary>
            Generics version of the <see cref="T:EmailMarketing.API.Exceptions.ExceptionConfiguration"/>
            </summary>
            <typeparam name="T">Exception Type</typeparam>
        </member>
        <member name="T:EmailMarketing.API.Exceptions.ExceptionConfiguration">
            <summary>
            Maps internal errors to outward profiles by adding a friendly name and (optionally) an error code and reference link.
            </summary>
        </member>
        <member name="T:EmailMarketing.API.Exceptions.APIResourceNotFoundException">
            <summary>
            Wrapper around HttpResponseException(HttpStatusCode.NotFound) to simplify
            customization of error responses.  <see cref="T:EmailMarketing.API.Exceptions.ExceptionConfiguration"/>
            and <see cref="T:EmailMarketing.API.Exceptions.ExceptionConfigurationLibrary"/> 
            and <see cref="T:EmailMarketing.API.Attributes.FriendlyExceptionsAttribute"/>
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Exceptions.APIResourceNotFoundException.Factory(System.String,System.Nullable{System.Int32})">
            <summary>
             Raises a 404/Not Found such that we'll reach the Exception Filter pipeline
            </summary>
            <param name="resource">names the type of resource we didn't fine (e.g. ControllerName)</param>
            <param name="id">ID value for the unmatched resource</param>
            <returns></returns>
        </member>
        <member name="M:EmailMarketing.API.ExtentionMethods.HttpRequestBaseExtensions.ToRaw(System.Web.HttpRequest)">
            <summary>
            Dump the raw HTTP request to a string. 
            </summary>
            <param name="request">The <see cref="T:System.Web.HttpRequest"/> that should be dumped.       </param>
            <returns>The raw HTTP request.</returns>
        </member>
        <member name="M:EmailMarketing.API.ExtentionMethods.ObjectExtensionMethods.ToXml2(System.Object)">
            <summary>
            Converts an anonymous type to an XElement.
            </summary>
            <param name="input">The input.</param>
            <returns>Returns the object as it's XML representation in an XElement.</returns>
        </member>
        <member name="M:EmailMarketing.API.ExtentionMethods.ObjectExtensionMethods.ToXml2(System.Object,System.String)">
            <summary>
            Converts an anonymous type to an XElement.
            </summary>
            <param name="input">The input.</param>
            <param name="element">The element name.</param>
            <returns>Returns the object as it's XML representation in an XElement.</returns>
        </member>
        <member name="T:EmailMarketing.API.ExtentionMethods.StringExtentionMethods">
            <summary>
            Extension methods providing additional capabilities for <see cref="T:System.String"/>
            </summary>
        </member>
        <member name="M:EmailMarketing.API.ExtentionMethods.StringExtentionMethods.ToUpperFirst(System.String)">
            <summary>
            Returns the <code>context</code> string with the first letter converted to upper-case.
            </summary>
            <param name="context">a <code>System.String</code></param>
            <returns>the content of <code>context</code> with the first letter converted to upper-case.</returns>
        </member>
        <member name="T:EmailMarketing.API.ExtentionMethods.TypeExtentionMethods">
            <summary>
            Extension methods providing additional capabilities for <see cref="T:System.Type"/>
            </summary>
        </member>
        <member name="M:EmailMarketing.API.ExtentionMethods.TypeExtentionMethods.IsInstanceOrSubclassOf(System.Type,System.Type)">
            <summary>
            Determines if Type <code>subject</code> is the same or class or a subclass of type <code>context</code>.
            </summary>
            <param name="context">a System.Type</param>
            <param name="subject">another System.Type</param>
            <returns>true of Type <code>subject</code> is the same or a class inheriting from Type <code>context</code></returns>
        </member>
        <member name="T:EmailMarketing.API.Infrastructure.Authentication.AccessKeyRequestHeaderParserBase`1">
            <summary>
            Implements the general pattern for derived classes to parse specific types of API Access Keys (e.g. User Access Key, etc.)
            </summary>
            <typeparam name="FrameworkObjectT"></typeparam>
        </member>
        <member name="P:EmailMarketing.API.Infrastructure.Authentication.AccessKeyRequestHeaderParserBase`1.HttpHeader">
            <inheritdoc/>
        </member>
        <member name="P:EmailMarketing.API.Infrastructure.Authentication.AccessKeyRequestHeaderParserBase`1.HeaderValueFriendlyName">
            <inheritdoc/>
        </member>
        <member name="M:EmailMarketing.API.Infrastructure.Authentication.AccessKeyRequestHeaderParserBase`1.TryParseHeaderValue(System.Web.Http.Controllers.HttpActionContext,System.String,System.Guid@)">
            <inheritdoc/>
        </member>
        <member name="T:EmailMarketing.API.Infrastructure.Authentication.AuthenticationProvider">
            <summary>
            Provides the high-level logic for authentication.
            </summary>
        </member>
        <member name="T:EmailMarketing.API.Infrastructure.Authentication.AuthenticationProvider.Settings">
            <summary>Provides authentication configuration settings</summary>
        </member>
        <member name="T:EmailMarketing.API.Infrastructure.Authentication.AuthenticationProvider.Settings.AccessKeyType">
            <summary>
            Specifies what level of AccessKey will be required, if any.
            </summary>
        </member>
        <member name="F:EmailMarketing.API.Infrastructure.Authentication.AuthenticationProvider.Settings.AccessKeyType.None">
            <summary>
            no AccessKey is required
            </summary>
        </member>
        <member name="F:EmailMarketing.API.Infrastructure.Authentication.AuthenticationProvider.Settings.AccessKeyType.User">
            <summary>
            a User level AccessKey is required
            </summary>
        </member>
        <member name="F:EmailMarketing.API.Infrastructure.Authentication.AuthenticationProvider.Settings.AccessKeyType.Customer">
            <summary>
            a Customer level AccessKey is required
            </summary>
        </member>
        <member name="F:EmailMarketing.API.Infrastructure.Authentication.AuthenticationProvider.Settings.AccessKeyType.BaseChannel">
            <summary>
            a BaseChannel level AccessKey is required
            </summary>
        </member>
        <member name="F:EmailMarketing.API.Infrastructure.Authentication.AuthenticationProvider.Settings.AccessKeyType.Any">
            <summary>
            a valid AccessKey of any level will be accepted
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Infrastructure.Authentication.AuthenticationProvider.Settings.CustomerIDRequired">
            <summary>
            If true, a CustomerID must be provided.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Infrastructure.Authentication.AuthenticationProvider.Settings.AccessKeyRequired">
            <summary>
            Indicates the level of AccessKey will be required, if any.
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Infrastructure.Authentication.AuthenticationProvider.Authenticate(EmailMarketing.API.Infrastructure.Authentication.AuthenticationProvider.Settings,System.Web.Http.Controllers.HttpActionContext)">
            <summary>
            Ensured that the current action context is authenticated base on the given settings
            </summary>
            <param name="actionContext">the context for the current request</param>
        </member>
        <member name="P:EmailMarketing.API.Infrastructure.Authentication.BaseChannelAccessKeyRequestHeaderParser.FrameworkObjectFriendlyName">
            <inheritdoc/>
        </member>
        <member name="P:EmailMarketing.API.Infrastructure.Authentication.BaseChannelAccessKeyRequestHeaderParser.FrameworkObjectStashKey">
            <inheritdoc/>
        </member>
        <member name="M:EmailMarketing.API.Infrastructure.Authentication.BaseChannelAccessKeyRequestHeaderParser.TryGetFrameworkObject(System.Web.Http.Controllers.HttpActionContext,System.Guid,ECN_Framework_Entities.Accounts.BaseChannel@)">
            <inheritdoc/>
        </member>
        <member name="T:EmailMarketing.API.Infrastructure.Authentication.CustomerIdRequestHeaderParser">
            <summary>
            provides methods to parse the Customer ID header and create a Customer object
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Infrastructure.Authentication.CustomerIdRequestHeaderParser.HttpHeader">
            <inheritdoc/>
        </member>
        <member name="P:EmailMarketing.API.Infrastructure.Authentication.CustomerIdRequestHeaderParser.HeaderValueFriendlyName">
            <inheritdoc/>
        </member>
        <member name="P:EmailMarketing.API.Infrastructure.Authentication.CustomerIdRequestHeaderParser.FrameworkObjectFriendlyName">
            <inheritdoc/>
        </member>
        <member name="P:EmailMarketing.API.Infrastructure.Authentication.CustomerIdRequestHeaderParser.FrameworkObjectStashKey">
            <inheritdoc/>
        </member>
        <member name="M:EmailMarketing.API.Infrastructure.Authentication.CustomerIdRequestHeaderParser.TryParseHeaderValue(System.Web.Http.Controllers.HttpActionContext,System.String,System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:EmailMarketing.API.Infrastructure.Authentication.CustomerIdRequestHeaderParser.TryGetFrameworkObject(System.Web.Http.Controllers.HttpActionContext,System.Int32,ECN_Framework_Entities.Accounts.Customer@)">
            <inheritdoc/>
        </member>
        <member name="T:EmailMarketing.API.Infrastructure.Authentication.RequestHeaderParserBase`2">
            <summary>
            Base class for authenticating HTTP requests by parsing an HTTP header to create a Framework Object
            </summary>
            <typeparam name="HeaderValueT">Type for the HTTPHeader value, once it has been parsed</typeparam>
            <typeparam name="FrameworkObjectT">Type for the Framework Object</typeparam>
        </member>
        <member name="P:EmailMarketing.API.Infrastructure.Authentication.RequestHeaderParserBase`2.HttpHeader">
            <summary>The HTTPHeader to be parsed, as a string</summary>
        </member>
        <member name="P:EmailMarketing.API.Infrastructure.Authentication.RequestHeaderParserBase`2.HeaderValueFriendlyName">
            <summary>A friendly name for the HTTPHeader (e.g. "authentication token")</summary>
        </member>
        <member name="P:EmailMarketing.API.Infrastructure.Authentication.RequestHeaderParserBase`2.FrameworkObjectFriendlyName">
            <summary>A friendly name for the Framework Object (e.g. "User")</summary>
        </member>
        <member name="P:EmailMarketing.API.Infrastructure.Authentication.RequestHeaderParserBase`2.FrameworkObjectStashKey">
            <summary>The Request.Properties key in which to store the Framework Object created</summary>
        </member>
        <member name="M:EmailMarketing.API.Infrastructure.Authentication.RequestHeaderParserBase`2.TryParseHeaderValue(System.Web.Http.Controllers.HttpActionContext,System.String,`0@)">
            <summary>When overridden in a derived class, attempts to create a strongly typed value from the string value 
            of the HTTP header</summary>
            <param name="headerValue">HTTP header value, as a string</param>
            <param name="parsedHeaderValue">strongly type HTTP header value</param>
            <returns>True if the string value of the HTTP header was successfully parsed into a strongly typed value, otherwise false.</returns>
        </member>
        <member name="M:EmailMarketing.API.Infrastructure.Authentication.RequestHeaderParserBase`2.TryGetFrameworkObject(System.Web.Http.Controllers.HttpActionContext,`0,`1@)">
            <summary>When overridden in a derived class, attempts to create a Framework object from the parsed header value</summary>
            <param name="parsedHeaderValue">The strongly typed value from the HTTP header</param>
            <param name="frameworkObject">An object into which the created framework object will be stored.</param>
            <returns>True if a framework object was successfully created, otherwise false.</returns>
        </member>
        <member name="M:EmailMarketing.API.Infrastructure.Authentication.RequestHeaderParserBase`2.ValidateRequestHeader(System.Web.Http.Controllers.HttpActionContext)">
            <summary>
            Provides a uniform method for extracting an HTTP header value as a string, parsing that into a strongly typed value
            and using the strongly typed value to create a Framework object and storing this for use by API Controllers.
            If this cannot be done (for example, because the header is not valid or not provided), uniform error handling is 
            provided to ensure API users understand the specific error conditions causing authentication failure (e.g. returning
            a message describing the specific problem in addition to a <code>401 Unauthorized</code> Error to the client.)
            </summary>
            <param name="actionContext">the action context associated with the current request.</param>
        </member>
        <member name="M:EmailMarketing.API.Infrastructure.Authentication.RequestHeaderParserBase`2.StoreProperties(System.Web.Http.Controllers.HttpActionContext,`0,`1)">
            <summary>
            Responsible for stashing away the parsed header value and framework object for later use
            </summary>
            <param name="actionContext"></param>
            <param name="parsedHeaderValue"></param>
            <param name="frameworkObject"></param>
        </member>
        <member name="M:EmailMarketing.API.Infrastructure.Authentication.RequestHeaderParserBase`2.RaiseException(System.String[])">
            <summary>
            Responsible for raising authentication exceptions
            </summary>
            <param name="messages"></param>
        </member>
        <member name="M:EmailMarketing.API.Infrastructure.Authentication.RequestHeaderParserBase`2.TryValidateRequestHeader(System.Web.Http.Controllers.HttpActionContext,System.String@,System.String@,`0@,`1@)">
            <summary>
            Responsible for validating and parsing the header and creating the framework object or, in
            failure cases, generating the failure message.
            </summary>
            <param name="actionContext">action context for the current request</param>
            <param name="failureMessage">if unsuccessful, this will describe the reason for failure, otherwise null</param>
            <param name="headerValue">set to the string value of the HTTP header, if present, otherwise null.</param>
            <param name="parsedHeaderValue">set to the strongly typed value of the HTTP header if the header can be parsed, otherwise set to the default value of HeaderValueT</param>
            <param name="frameworkObject">set to the framework object created/retrieved if successful, otherwise null.</param>
            <returns>true if the header is present, and be parsed, and yields a framework object; otherwise and failureMessage is set to a non-null value.</returns>
        </member>
        <member name="T:EmailMarketing.API.Infrastructure.Authentication.UserAccessKeyRequestHeaderParser">
            <summary>
            Provides methods to validate a User level API Access Key from request headers
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Infrastructure.Authentication.UserAccessKeyRequestHeaderParser.FrameworkObjectFriendlyName">
            <inheritdoc/>
        </member>
        <member name="P:EmailMarketing.API.Infrastructure.Authentication.UserAccessKeyRequestHeaderParser.FrameworkObjectStashKey">
            <inheritdoc/>
        </member>
        <member name="M:EmailMarketing.API.Infrastructure.Authentication.UserAccessKeyRequestHeaderParser.TryGetFrameworkObject(System.Web.Http.Controllers.HttpActionContext,System.Guid,KMPlatform.Entity.User@)">
            <inheritdoc/>
        </member>
        <member name="M:EmailMarketing.API.Infrastructure.Framework.ImageUtil.SearchImages(System.Int32,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Placeholder for Business Layer implementation of search of customer images by imageName, folderName, both, or neither.
            </summary>
            <param name="customerID">id of the customer which images are to be searched</param>
            <param name="imageName">(optional) constrain the search to images with a particular name</param>
            <param name="folderName">(optional) constrain the search to images within a particular folder.  folder name 
            should be relative to the base-path for images for the customer</param>
            <returns>an enumeration of framework image objects</returns>
        </member>
        <member name="P:EmailMarketing.API.Models.BaseChannel.BaseChannelID">
            <summary>
            Unique Base Channel Identification Number
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.BaseChannel.BaseChannelName">
            <summary>
            Unique Name for Base Channel
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.BaseChannel.AccessKey">
            <summary>
            Base Channel Level API Access Key
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.BlastBase.CreatedUserID">
            <summary>
            ID of the User who created the blast,
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.BlastBase.CreatedDate">
            <summary>
            Date the blast was created
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.BlastBase.UpdatedUserID">
            <summary>
            If updated, the user to put the change.  Otherwise null.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.BlastBase.UpdatedDate">
            <summary>
            If updated, the date of the change.  Otherwise null.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.BlastBase.BlastID">
            <summary>
            ID for blast. This value is assigned by ECN when new blasts are posted.  
            Required, except for post and search where ignored.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.BlastBase.StatusCode">
            <summary>
            Read-only, current status of the blast
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.BlastBase.BlastType">
            <summary>Only standard blasts are supported by SimpleBlast</summary>
        </member>
        <member name="P:EmailMarketing.API.Models.BlastBase.LayoutID">
            <summary>Required, the ID of an existing layout</summary>
        </member>
        <member name="P:EmailMarketing.API.Models.BlastBase.GroupID">
            <summary>
            Required, the ID of a recipient email group.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.BlastBase.FilterID">
            <summary>
            Optional, ID of a filter already posted to ECN.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.BlastBase.EmailSubject">
            <summary>Required, Subject line.  If passing emojis, they should be in unicode escape format(\uXXXX)</summary>
        </member>
        <member name="P:EmailMarketing.API.Models.BlastBase.EmailFrom">
            <summary>Required, From e-mail address</summary>
        </member>
        <member name="P:EmailMarketing.API.Models.BlastBase.EmailFromName">
            <summary>Required, From e-mail name</summary>
        </member>
        <member name="P:EmailMarketing.API.Models.BlastBase.ReplyTo">
            <summary>Required, Blast Reply To e-mail address</summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.ImportResult.New">
            <summary>
            New emails added to group
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.ImportResult.Updated">
            <summary>
            Emails updated
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.ImportResult.Duplicate">
            <summary>
            Duplicate emails in request
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.ImportResult.MasterSuppressed">
            <summary>
            Emails that are master suppressed
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.ImportResult.Total">
            <summary>
            Total emails in request
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.ImportResult.Skipped">
            <summary>
            Emails skipped
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.ManageProfile.GroupID">
            <summary>
            The GroupID 
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.ManageProfile.Format">
            <summary>
            The format type code
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.ManageProfile.SubscribeType">
            <summary>
            The subscribe type code
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.ManageProfile.Profiles">
            <summary>
            List of one or many profiles
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.ManageProfileAndTrigger.TriggerID">
            <summary>
            The TriggerID
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.ManageProfileWithDupeAndTrigger.CompositeKey">
            <summary>
            The Composite Key
            </summary>
        </member>
        <member name="T:EmailMarketing.API.Models.EmailGroup.UpdateEmailAddress">
            <summary>
            The model for updating an email address across a customer
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.UpdateEmailAddress.OldEmailAddress">
            <summary>
            The old email address
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.UpdateEmailAddress.NewEmailAddress">
            <summary>
            The new email address
            </summary>
        </member>
        <member name="T:EmailMarketing.API.Models.EmailGroup.UpdateEmailAddressForGroup">
            <Summary>
            Model for updating an email address and profile data.
            Inherits from Profile
            </Summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.UpdateEmailAddressForGroup.OldEmailAddress">
            <summary>
            The old email address
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.UpdateEmailAddressForGroup.GroupID">
            <summary>
            The group id the email address is in
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Models.EmailGroup.Email.#ctor">
            <summary>
            default/parameterless constructor
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.Email.EmailAddress">
            <summary>
            Address to add
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.Email.GroupId">
            <summary>
            Group to add address to
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.Email.SubscribeType">
            <summary>
            Subscription type to add the address as
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.Profile.EmailAddress">
            <summary>
            Email Address for subscriber
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.Profile.Title">
            <summary>
            Job title
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.Profile.FirstName">
            <summary>
            Subscribers first name
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.Profile.LastName">
            <summary>
            Subscribers last name
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.Profile.FullName">
            <summary>
            Subscribers full name
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.Profile.Company">
            <summary>
            Subscribers company
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.Profile.Occupation">
            <summary>
            Subscribers current occupation
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.Profile.Address">
            <summary>
            Subscribers address
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.Profile.Address2">
            <summary>
            Subscribers extra address info
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.Profile.City">
            <summary>
            Subscribers city that they live in
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.Profile.State">
            <summary>
            Subscribers state that they live in
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.Profile.Zip">
            <summary>
            Subscribers zip code 
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.Profile.Country">
            <summary>
            Subscribers country that they live in
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.Profile.Voice">
            <summary>
            Subscribers home phone number
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.Profile.Mobile">
            <summary>
            Subscribers mobile number
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.Profile.Fax">
            <summary>
            Subscribers fax number
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.Profile.Website">
            <summary>
            Subscribers website url for the company they work at
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.Profile.Age">
            <summary>
            Subscribers age
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.Profile.Income">
            <summary>
            Subscribers income
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.Profile.Gender">
            <summary>
            Subscribers gender
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.Profile.User1">
            <summary>
            Subscribers user1 info
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.Profile.User2">
            <summary>
            Subscribers user2 info
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.Profile.User3">
            <summary>
            Subscribers user3 info
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.Profile.User4">
            <summary>
            Subscribers user4 info
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.Profile.User5">
            <summary>
            Subscribers user5 info
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.Profile.User6">
            <summary>
            Subscribers user6 info
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.Profile.Birthdate">
            <summary>
            Subscribers birthday
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.Profile.UserEvent1">
            <summary>
            Subscribers user event 1
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.Profile.UserEvent1Date">
            <summary>
            Subscribers user event 1 date
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.Profile.UserEvent2">
            <summary>
            Subscribers user event 2
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.Profile.UserEvent2Date">
            <summary>
            Subscribers user event 2 date
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.Profile.Notes">
            <summary>
            Subscribers notes
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.Profile.Password">
            <summary>
            Subscribers password
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.Profile.SubscribeType">
            <summary>
            Subscribers subscribe type 
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.Profile.Format">
            <summary>
            Subscribers format type
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailGroup.Profile.CustomFields">
            <summary>
            Subscribers UDF data
            </summary>
        </member>
        <member name="F:EmailMarketing.API.Models.EmailGroup.Statuses.Unknown">
            <summary>Indicates failure due to an unknown issue.</summary>
        </member>
        <member name="F:EmailMarketing.API.Models.EmailGroup.Statuses.New">
            <summary>Indicates the subscriber was successfully added</summary>
        </member>
        <member name="F:EmailMarketing.API.Models.EmailGroup.Statuses.Updated">
            <summary>Indicates an existing subscriber record was successfully modified</summary>
        </member>
        <member name="F:EmailMarketing.API.Models.EmailGroup.Statuses.Skipped">
            <summary>Indicates the subscriber record could not be added due to an issue with the request.</summary>
        </member>
        <member name="F:EmailMarketing.API.Models.EmailGroup.Statuses.Subscribed">
            <summary>Indicates the subscriber is a member of the group</summary>
        </member>
        <member name="F:EmailMarketing.API.Models.EmailGroup.Statuses.Unsubscribed">
            <summary>Indicates the subscriber is unsubscribed from the group</summary>
        </member>
        <member name="F:EmailMarketing.API.Models.EmailGroup.Statuses.Duplicate">
            <summary>Indicates failure because completing the requested action would duplicate the email address within the group.</summary>
        </member>
        <member name="F:EmailMarketing.API.Models.EmailGroup.Statuses.MasterSuppressed">
            <summary>Indicates the email address is (or as a result of this request was added to) the Master Suppression list.</summary>
        </member>
        <member name="F:EmailMarketing.API.Models.EmailGroup.Statuses.InvalidEmailAddress">
            <summary>Indicates failure due to an email address which is not valid or is incorrectly formatted</summary>
        </member>
        <member name="F:EmailMarketing.API.Models.EmailGroup.Statuses.InvalidGroupId">
            <summary>Indicates failure due to an invalid or unknown GroupID</summary>
        </member>
        <member name="F:EmailMarketing.API.Models.EmailGroup.Statuses.InvalidSubscribeTypeCode">
            <summary>Indicates failure due to an unknown SubscribeTypeCode.</summary>
        </member>
        <member name="F:EmailMarketing.API.Models.EmailGroup.Statuses.InvalidFormatTypeCode">
            <summary>Indicates failure due to an unknown FormatTypeCode</summary>
        </member>
        <member name="F:EmailMarketing.API.Models.EmailGroup.Statuses.UnknownSubscriber">
            <summary>Indicates failure to unsubscribe due to the subscriber not being found in association with the Group.</summary>
        </member>
        <member name="F:EmailMarketing.API.Models.EmailGroup.Statuses.UnknownCustomField">
            <summary>Indicates failure due to one or more custom fields not being found in association with the Group.</summary>
        </member>
        <member name="F:EmailMarketing.API.Models.EmailGroup.Statuses.UnknownTransactionalField">
            <summary>Indicates failure due to one or more transactional custom fields not being found in association with the Group.</summary>
        </member>
        <member name="F:EmailMarketing.API.Models.EmailGroup.Statuses.MissingTransactionalPrimaryKeyField">
            <summary>Indicates failure due to one or more custom field transactional field sets not supplying a value for the primary key field.</summary>
        </member>
        <member name="F:EmailMarketing.API.Models.EmailGroup.Statuses.DuplicateEmailAddress">
            <summary>Indicates failure of a method that does not support duplicate email addresses due to an email address already having
            been defined in the target group multiple times.</summary>
        </member>
        <member name="F:EmailMarketing.API.Models.EmailGroup.SubscribeTypes.S">
            <summary>
            Short hand for "Subscribe"
            </summary>
        </member>
        <member name="F:EmailMarketing.API.Models.EmailGroup.SubscribeTypes.Subscribe">
            <summary>For requests, directs the API to add the subscriber to the Group.  For result, 
            indicates the subscriber is subscribed to the group</summary>
        </member>
        <member name="F:EmailMarketing.API.Models.EmailGroup.SubscribeTypes.Unsubscribe">
            <summary>For requests, directs the API to unsubscribe the subscriber from the Group.  For result, 
            indicates the subscriber is subscribed to the group</summary>
        </member>
        <member name="F:EmailMarketing.API.Models.EmailGroup.SubscribeTypes.U">
            <summary>Shorthand for "Unsubscribe"</summary>
        </member>
        <member name="F:EmailMarketing.API.Models.EmailGroup.SubscribeTypes.P">
            <summary>Shorthand for "Pending"</summary>
        </member>
        <member name="F:EmailMarketing.API.Models.EmailGroup.SubscribeTypes.Pending">
            <summary>Legacy, do not use.  Previously used to indicate a subscription event was pending.</summary>
        </member>
        <member name="F:EmailMarketing.API.Models.EmailGroup.SubscribeTypes.M">
            <summary>Shorthand for "MasterSupress"</summary>
        </member>
        <member name="F:EmailMarketing.API.Models.EmailGroup.SubscribeTypes.MasterSuppress">
            <summary>For requests, directs the API to add the subscriber to the Master Suppression group.  
            For result, indicates the subscriber is a member of the Master Suppression group.</summary>
        </member>
        <member name="P:EmailMarketing.API.Models.FolderBase.FolderID">
            <summary>
            Unique Folder identification number
            </summary>
            <remarks>
            Property ignored when passed as parameter in PUT or POST request. 
            </remarks>
        </member>
        <member name="P:EmailMarketing.API.Models.FolderBase.CreatedDate">
            <summary>
            Date created
            </summary> 
        </member>
        <member name="P:EmailMarketing.API.Models.FolderBase.CreatedUserID">
            <summary>
            ID of User who created this folder
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.FolderBase.UpdatedDate">
            <summary>
            Date last updated
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.FolderBase.UpdatedUserID">
            <summary>
            ID of User who last updated
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Models.PersonalizationBlast.#ctor">
            <summary>
            Create a Personalization Blast
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.PersonalizationBlast.CampaignName">
            <summary>
            Provide a Campaign Name to create a new campaign for your blast
            Will be ignored on PUT requests.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.PersonalizationBlast.CampaignItemName">
            <summary>
            Pass a CampaignItemName to customize the name of your CampaignItem.
            Pass an empty string to use the standard CampaignItemName generation of EmailSubject and current date
            Will be ignored on PUT requests.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.PersonalizationBlast.BlastField1">
            <summary>
            Blast Field 1
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.PersonalizationBlast.BlastField2">
            <summary>
            Blast Field 2
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.PersonalizationBlast.BlastField3">
            <summary>
            Blast Field 3
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.PersonalizationBlast.BlastField4">
            <summary>
            Blast Field 4
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.PersonalizationBlast.BlastField5">
            <summary>
            Blast Field 5
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.PersonalizationBlast.OptOutGroupID">
            <summary>
            Optional, GroupID for Group that subscriber will be unsubscribed from along with the Group that the Blast was sent to
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.PersonalizationBlast.SuppressionGroupID">
            <summary>
            Optional, GroupID for Group that will be used as a suppression group
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.PersonalizationBlast.SuppressionGroupFilterID">
            <summary>
            Optional, Filter to use on Suppression group
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.PersonalizationBlast.SendTime">
            <summary>
            Send time for Personalization Blast
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.PersonalizationBlast.CampaignID">
            <summary>
            Provide a CampaignID to create a new simple blast under a specific campaign.  
            Pass 0 to create/associate the simple blast under your "Marketing Campaign" campaign.
            Will be ignored on PUT requests.
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Models.PersonalizationContent.#ctor">
            <summary>
            Create a PersonalizationContent
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.PersonalizationContent.BlastID">
            <summary>
            Blast ID for the Personalization Blast
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.PersonalizationContent.Emails">
            <summary>
            List of Emails with content and email subject
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Models.PersonalizationEmail.#ctor">
            <summary>
            Container for Personalization emails
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.PersonalizationEmail.EmailAddress">
            <summary>
            Email address of the subscriber
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.PersonalizationEmail.HTMLContent">
            <summary>
            Personalized HTML content for the subscriber
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.PersonalizationEmail.TextContent">
            <summary>
            Personalized Text content for the subscriber
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.PersonalizationEmail.EmailSubject">
            <summary>
            Personalized Email Subject for the subscriber
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Models.PersonalizationContentErrorCodes.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.PersonalizationContentErrorCodes.ErrorCode">
            <summary>
            ID for the Error
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.PersonalizationContentErrorCodes.ErrorMessage">
            <summary>
            Friendly error message
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.PersonalizationContentResponse.Created">
            <summary>
            Personalized Content created successfully
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.PersonalizationContentResponse.Failed">
            <summary>
            Personalized Content that failed
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.PersonalizationContentResponse.Total">
            <summary>
            Total 
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.FailedContent.Total">
            <summary>
            Total failures
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.FailedContent.Failures">
            <summary>
            List of Emails and their Error codes
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.FailedEmail.EmailAddress">
            <summary>
            Email Address
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.FailedEmail.ErrorCode">
            <summary>
            Error code
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Models.QuickTestBlast.#ctor">
            <summary>
            Create a Quick Test Blast
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.QuickTestBlast.EmailAddress">
            <summary>
            Email Addresses to send test blast to
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.QuickTestBlast.LayoutID">
            <summary>
            Required, the ID of an existing layout
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.QuickTestBlast.EmailPreview">
            <summary>
            Required, pass true to use Email Preview
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.QuickTestBlast.EmailFrom">
            <summary>
            Required, Blast From e-mail address
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.QuickTestBlast.ReplyTo">
            <summary>
            Required, Blast Reply To e-mail address
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.QuickTestBlast.EmailFromName">
            <summary>
            Required, Blast From e-mail name
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.QuickTestBlast.EmailSubject">
            <summary>
            Required, Subject line.  If passing emojis, they should be in unicode escape format(\uXXXX)
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.QuickTestBlast.GroupID">
            <summary>
            Optional, group to send test blast to
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.QuickTestBlast.GroupName">
            <summary>
            Optional, name for new Group
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.QuickTestBlast.CampaignItemID">
            <summary>
            Optional, CampaignItemID to associate this test blast with
            If you pass CampaignItemID, do not pass CampaignID or CampaignItemName
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.QuickTestBlast.CampaignItemName">
            <summary>
            Optional, CampaignItemName for new CampaignItem
            If you pass CampaignItemName, do not pass CampaignItemID
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.QuickTestBlast.CampaignID">
            <summary>
            Optional, CampaignID to associate new CampaignItem
            If you pass CampaignID, do not pass CampaignName
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.QuickTestBlast.CampaignName">
            <summary>
            Optional, CampaignName for new CampaignName
            If you pass CampaignName, do not pass CampaignID or CampaignItemID
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.QuickTestBlast.EnableCacheBuster">
            <summary>
            Required, set to true to enable the Google Cache Buster
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.QuickTestBlast.SendText">
            <summary>
            Required, set to true to also send a text version
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.QuickTestBlast.BlastID">
            <summary>
            New Quick Test Blast ID
            Do not send when creating a new Quick Test Blast.  
            This field will be populated in the return object.
            </summary>
        </member>
        <member name="T:EmailMarketing.API.Models.Reports.Blast.UnsubscribeReport">
            <summary>
            The Email Marketing Unsubscribe API object model.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Reports.Blast.UnsubscribeReport.EmailAddress">
            <summary>
            Unsubscriber's email address
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Reports.Blast.UnsubscribeReport.UnsubscribeTime">
            <summary>
            The time the Unsubscriber unsubscribed
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Reports.Blast.UnsubscribeReport.SubscriptionChange">
            <summary> 
            The subscription change
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Reports.Blast.UnsubscribeReport.Reason">
            <summary> 
            Why the user unsubscribed
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Reports.Blast.UnsubscribeReport.Title">
            <summary> 
            The user's title
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Reports.Blast.UnsubscribeReport.FirstName">
            <summary> 
            User's first name
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Reports.Blast.UnsubscribeReport.LastName">
            <summary> 
            User's last name
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Reports.Blast.UnsubscribeReport.FullName">
            <summary> 
            User's full name
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Reports.Blast.UnsubscribeReport.Company">
            <summary> 
            The user's company affiliation
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Reports.Blast.UnsubscribeReport.Occupation">
            <summary> 
            The user's occupation
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Reports.Blast.UnsubscribeReport.Address">
            <summary> 
            The user's residential/professional address
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Reports.Blast.UnsubscribeReport.Address2">
            <summary> 
            A second address
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Reports.Blast.UnsubscribeReport.City">
            <summary> 
            The city the user is located in
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Reports.Blast.UnsubscribeReport.State">
            <summary> 
            The state the user is located in
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Reports.Blast.UnsubscribeReport.Zip">
            <summary> 
            The zip code of the user's location
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Reports.Blast.UnsubscribeReport.Country">
            <summary> 
            The country the user is located in.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Reports.Blast.UnsubscribeReport.Voice">
            <summary> 
            The user's phone number
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Reports.Blast.UnsubscribeReport.Mobile">
            <summary> 
            The user's mobile phone number
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Reports.Blast.UnsubscribeReport.Fax">
            <summary> 
            The user's fax number
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Reports.Blast.UnsubscribeReport.Website">
            <summary> 
            The user's website url
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Reports.Blast.UnsubscribeReport.Age">
            <summary> 
            The user's age
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Reports.Blast.UnsubscribeReport.Income">
            <summary> 
            The user's income
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Reports.Blast.UnsubscribeReport.Gender">
            <summary> 
            The user's gender
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Reports.Blast.UnsubscribeReport.User1">
            <summary> 
            
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Reports.Blast.UnsubscribeReport.User2">
             <summary> 
            
             </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Reports.Blast.UnsubscribeReport.User3">
             <summary> 
            
             </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Reports.Blast.UnsubscribeReport.User4">
             <summary> 
            
             </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Reports.Blast.UnsubscribeReport.User5">
             <summary> 
            
             </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Reports.Blast.UnsubscribeReport.User6">
             <summary> 
            
             </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Reports.Blast.UnsubscribeReport.Birthdate">
            <summary> 
            The user's birthdate
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Reports.Blast.UnsubscribeReport.UserEvent1">
             <summary> 
            
             </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Reports.Blast.UnsubscribeReport.UserEvent1Date">
             <summary> 
            
             </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Reports.Blast.UnsubscribeReport.UserEvent2">
             <summary> 
            
             </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Reports.Blast.UnsubscribeReport.UserEvent2Date">
             <summary> 
            
             </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Reports.Blast.UnsubscribeReport.CreatedOn">
            <summary> 
            The date the user's account was created
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Reports.Blast.UnsubscribeReport.LastChanged">
            <summary> 
            The last date the user's account was updated
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Reports.Blast.UnsubscribeReport.FormatTypeCode">
             <summary> 
            
             </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Reports.Blast.UnsubscribeReport.SubscribeTypeCode">
             <summary> 
            
             </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Reports.Blast.UnsubscribeReport.tmp_EmailID">
             <summary> 
            
             </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Reports.Blast.UnsubscribeReport.NickName">
             <summary> 
            
             </summary>
        </member>
        <member name="T:EmailMarketing.API.Models.SearchBase">
            <summary>
            SearchBase model 
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.SearchBase.SearchCriteria">
            <summary>
            List of SeachProperty objects
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Models.SimpleBlast.#ctor">
            <summary>
            Create a SimpleBlast
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.SimpleBlast.IsTestBlast">
            <summary>
            supply true to create a test blast, otherwise a standard blast will be created.
            </summary>  
        </member>
        <member name="P:EmailMarketing.API.Models.SimpleBlast.SmartSegmentID">
            <summary>
            Read-only, Smart Segment ID filled by ECN when a SimpleBlast is posted.
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Models.SimpleBlast.SetSmartSegmentID(System.Int32)">
            <summary>
            allow internal components the ability to set the smart segment ID
            </summary>
            <param name="smartSegmentID"></param>
        </member>
        <member name="P:EmailMarketing.API.Models.SimpleBlast.ReferenceBlasts">
            <summary>
            Optional, for SmartSegments an array of ID values for reference blasts.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.SimpleBlast.Filters">
            <summary>
            Blasts returned by Get or Search may fill this.  Blasts created by simple blast may 
            select a filter by setting FilterID.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.SimpleBlast.SmartSegments">
            <summary>
            Blasts returned by Get or Search may fill this.  Blasts created by simple blast may 
            select a filter by setting FilterID.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.SimpleBlast.SendTime">
            <summary>
            SimpleBlasts are sent immediately.
            </summary>
        </member>
        <member name="T:EmailMarketing.API.Models.Content">
            <summary>
            The Email Marketing Content API object model.
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Models.Content.#ctor">
            <summary>
            Default/parameterless constructor
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Content.ContentID">
            <summary>
            unique <code>id</code> for a Content object, Property ignored when passed as parameter in PUT or POST request. 
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Content.FolderID">
            <summary>
            unique <code>id</code> for a Folder categorizing a Content object
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Content.UseWYSIWYGeditor">
            <summary>
            Supply to the POST method to specify whether the WYSIWYG editor should
            be used when creating Content. Once Content is created this setting cannot be changed using the PUT method. 
            Property ignored when passed as parameter in PUT METHOD.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Content.ContentSource">
            <summary>
            Formatted source data for the ContentObject, typically represented as HTML.  Will not be returned in Search requests.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Content.ContentText">
            <summary>
            Plain text source data for the Content object. If NULL is passed, the property defaults to ContentSource - html version.
            Will not be returned in Search requests.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Content.ContentTitle">
            <summary>
            Title for the Content object.
            </summary>
            <remarks>
            Test Content Title
            </remarks>
        </member>
        <member name="P:EmailMarketing.API.Models.Content.Archived">
            <summary>
            Is Content Archived
            </summary>
            <remarks>
            Is Content Archived
            </remarks>
        </member>
        <member name="P:EmailMarketing.API.Models.Content.UpdatedDate">
            <summary>
            Date/Time of the last update to the Content object. Property ignored when passed as parameter in request. 
            </summary>
        </member>
        <member name="T:EmailMarketing.API.Models.CustomField">
            <summary>
            The Email Marketing CustomField API object model.
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Models.CustomField.#ctor">
            <summary>
            Default/parameterless constructor
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.CustomField.GroupDataFieldsID">
            <summary>
            Unique <code>id</code> for a CustomField object. Property ignored when passed as parameter in PUT or POST request
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.CustomField.GroupID">
            <summary>
            Group ID for a CustomField object, 
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.CustomField.ShortName">
            <summary>
            Name for the CustomField object (Cannot contain spaces).
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.CustomField.LongName">
            <summary>
            Description for the CustomField object.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.CustomField.IsPublic">
            <summary>
            Public property for the CustomField object ("Y"/"N").
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailDirectMessage.EmailDirectID">
            <summary>
            Identification Number for your EmailDirect Message;
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailDirectMessage.Source">
            <summary>
            Where this EmailDirect message was sent from;
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailDirectMessage.EmailAddress">
            <summary>
            Who you're sending this EmailDirect message to;
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailDirectMessage.FromName">
            <summary>
            Name this EmailDirect message will be sent from;
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailDirectMessage.FromEmailAddress">
            <summary>
            Where this EmailDirect message will be sent from;
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailDirectMessage.ReplyEmailAddress">
            <summary>
            Who the recipient should reply to;
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailDirectMessage.EmailSubject">
            <summary>
            Subject line of this EmailDirect message;
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.EmailDirectMessage.Content">
            <summary>
            Body of this EmailDirect message;
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Error.LogID">
            <summary>
            Identification number for this Error
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Error.ApplicationID">
            <summary>
            
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Error.SeverityID">
            <summary>
            Integer for assigning Severity
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Error.SourceMethod">
            <summary>
            The method where this error originated
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Error.Exception">
            <summary>
            System exception
            </summary>
        </member>
        <member name="T:EmailMarketing.API.Models.Filter">
            <summary>
            The Email Marketing Filter API object model.
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Models.Filter.#ctor">
            <summary>
            Default/parameterless constructor
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Filter.FilterID">
            <summary>
            unique <code>id</code> for a Filter object, Property ignored when passed as parameter in PUT or POST request. 
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Filter.FilterName">
            <summary>
            Name for the Filter object.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Filter.GroupID">
            <summary>
            Group the Filter is applied to  
            </summary>
            <remarks>
            What Group Filter is associated with 
            </remarks>
        </member>
        <member name="P:EmailMarketing.API.Models.Filter.Archived">
            <summary>
            Is Filter Archived
            </summary>
            <remarks>
            Is Filter Archived
            </remarks>
        </member>
        <member name="P:EmailMarketing.API.Models.FormsCustomer.CustomerID">
            <summary>
            The CustomerID value of the Forms Customer
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.FormsCustomer.CustomerName">
            <summary>
            The CustomerName of the Forms Customer
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.FormsCustomer.AccessKey">
            <summary>
            The AccessKey for use by the forms application when access data related to the Forms Customer
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Folder.FolderName">
            <summary>
            Unique folder name
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Folder.ParentID">
            <summary>
            ID of parent folder
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Folder.FolderDescription">
            <summary>
            Short user-defined description of folder
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Folder.FolderType">
            <summary>
            Options: "CNT", "GRP" ...
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Folder.CustomerID">
            <summary>
            Identifier for Customer
            </summary>
        </member>
        <member name="T:EmailMarketing.API.Models.Group">
            <summary>
            The Email Marketing Group API object model.
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Models.Group.#ctor">
            <summary>
            Default/parameterless constructor
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Group.GroupID">
            <summary>
            unique <code>id</code> for a Group object, Property ignored when passed in PUT or POST method
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Group.GroupName">
            <summary>
            Name for the Group object.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Group.FolderID">
            <summary>
            unique <code>id</code> for a Folder categorizing a Group object
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Group.GroupDescription">
            <summary>
            Description for the Group object.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Group.Archived">
            <summary>
            Is Content Archived
            </summary>
            <remarks>
            Is Content Archived
            </remarks>
        </member>
        <member name="P:EmailMarketing.API.Models.Image.FolderName">
            <summary>
            <code>FolderName</code> for an Image object, 
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Image.FolderID">
            <summary>
            <code>FolderID</code> for an Image object, 
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Image.ImageID">
            <summary>
             unique <code>ImageID</code> for an Image object,
             </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Image.ImageName">
            <summary>
            unique <code>ImageName</code> for an Image object, 
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Image.ImageData">
            <summary>
            <code>ImageData</code> for an Image object, 
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:EmailMarketing.API.Models.Image.ImageURL" -->
        <member name="T:EmailMarketing.API.Models.ImageFolder">
            <summary>
            Represents an folder containing customer images
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.ImageFolder.FolderID">
            <summary>
            Unique identifier for an image folder.  Note: this is currently always 0 (zero).
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.ImageFolder.FolderName">
            <summary>
            Name of the image folder, not including any path information.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.ImageFolder.FolderFullName">
            <summary>
            Name of the image folder including the full path.  Full path is relative to the root folder for customer images; 
            ignored when creating new folders.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.ImageFolder.FolderUrl">
            <summary>
            A URI suitable for creating a link to the image folder.
            </summary>
        </member>
        <member name="T:EmailMarketing.API.Models.Message">
            <summary>
            The Email Marketing Layout API object model.
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Models.Message.#ctor">
            <summary>
            Default/parameterless constructor
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Message.LayoutID">
            <summary>
            Unique <code>id</code> for a Layout object, Property ignored when passed in PUT or POST method
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Message.TemplateID">
            <summary>
            Unique <code>id</code> for a Template object, 
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Message.LayoutName">
            <summary>
            Unique <code>name</code> for a Layout object, 
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Message.ContentSlot1">
            <summary>
            Unique <code>id</code> for a Content object, 
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Message.ContentSlot2">
            <summary>
            Unique <code>id</code> for a Content object, 
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Message.ContentSlot3">
            <summary>
            Unique <code>id</code> for a Content object, 
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Message.ContentSlot4">
            <summary>
            Unique <code>id</code> for a Content object, 
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Message.ContentSlot5">
            <summary>
            Unique <code>id</code> for a Content object, 
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Message.ContentSlot6">
            <summary>
            Unique <code>id</code> for a Content object, 
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Message.ContentSlot7">
            <summary>
            Unique <code>id</code> for a Content object, 
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Message.ContentSlot8">
            <summary>
            Unique <code>id</code> for a Content object, 
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Message.ContentSlot9">
            <summary>
            Unique <code>id</code> for a Content object, 
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Message.TableOptions">
            <summary>
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Message.DisplayAddress">
            <summary>
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Message.MessageTypeID">
            <summary>
            Identifier for the Message Type
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.Message.Archived">
            <remarks>
            Is Content Archived
            </remarks>
        </member>
        <member name="T:EmailMarketing.API.Models.SearchProperty">
            <summary>
            The Email Marketing Search API object model for composing queries. 
            A valid query includes one or more search properties, each composed
            per this model.  Please see individual object model.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.SearchProperty.Name">
            <summary>
            Name of a property that will be used to constrain the search.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.SearchProperty.Comparator">
            <summary>Operation to be used in comparing the named properties to. The valid values are "&gt;" , "&lt;" ,  "=" and "contains".<see cref="P:EmailMarketing.API.Models.SearchProperty.ValueSet"/></summary>
        </member>
        <member name="P:EmailMarketing.API.Models.SearchProperty.ValueSet">
            <summary>
            A value to be considered per <see cref="P:EmailMarketing.API.Models.SearchProperty.Comparator"/>
            </summary>
        </member>
        <member name="T:EmailMarketing.API.Models.SearchResult`1">
            <summary>
            The Email Marketing Search Result API object model.
            </summary>
            <typeparam name="T">API object model of result constituents (e.g. Models.Content, 
            when searching Content)</typeparam>
        </member>
        <member name="P:EmailMarketing.API.Models.SearchResult`1.ApiObject">
            <summary>
            An API model object 
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.SearchResult`1.Location">
            <summary>
            URI for direct access to <see cref="P:EmailMarketing.API.Models.SearchResult`1.ApiObject"/>
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Models.SimpleBlastV2.#ctor">
            <summary>
            Create a SimpleBlast
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.SimpleBlastV2.CampaignName">
            <summary>
            Provide a Campaign Name to create a new campaign for your blast
            Will be ignored on PUT requests.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.SimpleBlastV2.CampaignItemName">
            <summary>
            Pass a CampaignItemName to customize the name of your CampaignItem.
            Pass an empty string to use the standard CampaignItemName generation of EmailSubject and current date
            Will be ignored on PUT requests.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.SimpleBlastV2.IsTestBlast">
            <summary>
            supply true to create a test blast, otherwise a standard blast will be created.
            </summary>  
        </member>
        <member name="P:EmailMarketing.API.Models.SimpleBlastV2.SmartSegmentID">
            <summary>
            Read-only, Smart Segment ID filled by ECN when a SimpleBlast is posted.
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Models.SimpleBlastV2.SetSmartSegmentID(System.Int32)">
            <summary>
            allow internal components the ability to set the smart segment ID
            </summary>
            <param name="smartSegmentID"></param>
        </member>
        <member name="P:EmailMarketing.API.Models.SimpleBlastV2.ReferenceBlasts">
            <summary>
            Optional, for SmartSegments an array of ID values for reference blasts.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.SimpleBlastV2.Filters">
            <summary>
            Blasts returned by Get or Search may fill this.  Blasts created by simple blast may 
            select a filter by setting FilterID.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.SimpleBlastV2.SmartSegments">
            <summary>
            Blasts returned by Get or Search may fill this.  Blasts created by simple blast may 
            select a filter by setting FilterID.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.SimpleBlastV2.SendTime">
            <summary>
            SimpleBlasts are sent immediately.
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Models.SimpleBlastV2.CampaignID">
            <summary>
            Provide a CampaignID to create a new simple blast under a specific campaign.  
            Pass 0 to create/associate the simple blast under your "Marketing Campaign" campaign.
            Will be ignored on PUT requests.
            </summary>
        </member>
        <member name="T:EmailMarketing.API.Models.Utility.Transformer`2">
            <summary>
            Utility class providing transformation from a type <code>SourceT</code> to another type <code>DestinationT</code>
            by performing name based copying of properties from a given SourceT object to a TargetT object.
            </summary>
            <typeparam name="SourceT">A <see cref="T:System.Type"/> implementing a parameterless constructor.</typeparam>
            <typeparam name="DestinationT">A <see cref="T:System.Type"/> implementing a parameterless constructor.</typeparam>
        </member>
        <member name="M:EmailMarketing.API.Models.Utility.Transformer`2.Transform(`0,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Transforms a object of type SourceT into a <b>new</b> object of type DestinationT
            </summary>
            <param name="source">instance object of type SourceT</param>
            <param name="propertyNames">property names to copy as an enumerable of strings</param>
            <returns>new instance of DestinationT</returns>
        </member>
        <member name="M:EmailMarketing.API.Models.Utility.Transformer`2.Transform(`0,`1,System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Transforms a object of type SourceT into a given object of type DestinationT by copying property values
            </summary>
            <param name="source"></param>
            <param name="destination"></param>
            <param name="propertyNames"></param>
            <returns></returns>
        </member>
        <member name="M:EmailMarketing.API.Models.Utility.Transformer`2.GetPropertiesByName(System.Collections.Generic.IEnumerable{System.String},System.Type)">
            <summary>
            Extract <code>Type</code>'s property info for all existent properties named
            </summary>
            <param name="propertyNames">properties to be extracted as an enumeration of strings</param>
            <param name="type">Type from which to extract PropertyInfo</param>
            <returns>Array of PropertyInfo</returns>
        </member>
        <member name="F:EmailMarketing.API.Search.SearchConfiguration.Library">
            <summary>
            Collection of controller search registrations, singleton.
            </summary>
        </member>
        <member name="T:EmailMarketing.API.Search.SearchConfigurationItem.ValidationDelegate">
            <summary>
            A method for validating a search criterion.
            </summary>
            <param name="g">Group containing the configuration item being validated</param>
            <param name="q">the complete search query property set of which the current property value is a member</param>
            <param name="c">Configuration item being validated</param>
            <param name="p">property value supplied for the configuration item being validated</param>
            <returns>true if property value provides supported search criteria</returns>
        </member>
        <member name="T:EmailMarketing.API.Search.SearchConfigurationItem.BasicValidationMethods">
            <summary>
            Collection of methods to provide basic property validation
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Search.SearchConfigurationItem.ExceptionEntity">
            <summary>
            The ECN_Framework_Common.Objects.Enums.Entity to be associated in case of validation issues
            </summary>
        </member>
        <member name="T:EmailMarketing.API.Search.SearchConfigurationGroup">
            <summary>
            contains search configuration items organized by search property name
            </summary>
        </member>
        <member name="F:EmailMarketing.API.Search.SearchConfigurationGroup.AllowEmptySearchDefault">
            <summary>
            Provides a default value for whether to allow empty queries (e.g. search without constraints)
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Search.SearchConfigurationGroup.AllowEmptySearch">
            <summary>
            If false, empty queries (e.g. searches without any constraints) will cause an exception.
            </summary>
            <seealso cref="F:EmailMarketing.API.Search.SearchConfigurationGroup.AllowEmptySearchDefault"/>
        </member>
        <member name="P:EmailMarketing.API.Search.SearchConfigurationGroup.ExceptionEntity">
            <summary>
            The ECN_Framework_Common.Objects.Enums.Entity to be associated in case of validation issues
            </summary>
        </member>
        <member name="P:EmailMarketing.API.Search.SearchConfigurationGroup.ExceptionMethod">
            <summary>
            The ECN_Framework_Common.Objects.Enums.Method to be associated in case of validation issues
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Search.SearchConfigurationGroup.#ctor(System.Boolean,ECN_Framework_Common.Objects.Enums.Entity,ECN_Framework_Common.Objects.Enums.Method)">
            <summary>
            Creates an SearchConfigurationLibrary, optionally setting the Exception Entity  and Exception Method
            to be associated with any exceptions raised while validating the search query.
            </summary>
            <param name="exceptionEntity">Entity associated with exceptions raised while validation the search query</param>
            <param name="exceptionMethod">Methods associated with exceptions raised while validation the search query</param>
        </member>
        <member name="T:EmailMarketing.API.Search.SearchConfigurationLibrary">
            <summary>
            Contains groups of search configuration organized by controller name.
            </summary>
        </member>
        <member name="T:EmailMarketing.API.Strings">
            <summary>
            Statically defined strings, such as for naming Request Properties (e.g. "Stash" buckets).
            </summary>
        </member>
        <member name="M:EmailMarketing.API.Strings.Format(System.String,System.Object[])">
            <summary>
            Formats errors and other messages using <see cref="M:System.String.Format(System.String,System.Object)"/>
            </summary>
            <param name="message">Message for to be formatted.</param>
            <param name="args">positional replacement token values</param>
            <returns></returns>
        </member>
        <member name="T:EmailMarketing.API.Strings.Routing">
            <summary>
            String constants related to HTTP request routing.
            </summary>
        </member>
        <member name="T:EmailMarketing.API.Strings.Headers">
            <summary>
            String constants related to HTTP headers and header processing.
            </summary>
        </member>
        <member name="F:EmailMarketing.API.Strings.Headers.APIAccessKeyHeader">
            <summary>
            HTTP header used to pass in the APIAccessKey
            </summary>
        </member>
        <member name="F:EmailMarketing.API.Strings.Headers.CustomerIdHeader">
            <summary>
            HTTP header used to pass in the CustomerID
            </summary>
        </member>
        <member name="T:EmailMarketing.API.Strings.Properties">
            <summary>
            Strings used as Keys in the request scoped Properties "stash"
            </summary>
        </member>
        <member name="F:EmailMarketing.API.Strings.Properties.APIUserStashKey">
            <summary>
            Stash property used to store Business User object once derived from APIAccessKey
            </summary>
        </member>
        <member name="F:EmailMarketing.API.Strings.Properties.APIBaseChannelStashKey">
            <summary>
            Stash property used to store BaseChannel object once derived from APIAccessKey
            </summary>
        </member>
        <member name="F:EmailMarketing.API.Strings.Properties.APICustomerStashKey">
            <summary>
            Stash property used to store Business Customer object once derived from CustomerIdHeader
            </summary>
        </member>
        <member name="T:EmailMarketing.API.Strings.BusinessDefaultValues">
            <summary>
            Business facing string constants
            </summary>
        </member>
        <member name="F:EmailMarketing.API.Strings.BusinessDefaultValues.ContentTitle">
            <summary>
            Default title for new content when we receive a POST request with no (or empty) ContentTitle
            </summary>
        </member>
        <member name="F:EmailMarketing.API.Strings.BusinessDefaultValues.ProcessName">
            <summary>
            Default process name, used for internal tracking of which high-level process initiated an activity.
            </summary>
        </member>
        <member name="F:EmailMarketing.API.Strings.BusinessDefaultValues.EmailFromAddress">
            <summary>
            Default FROM address when sending (or enqueuing send of) email from API methods
            </summary>
        </member>
        <member name="F:EmailMarketing.API.Strings.BusinessDefaultValues.EmailFromName">
            <summary>
            Default FROM Name when sending (or enqueuing send of) email from API methods
            </summary>
        </member>
        <member name="F:EmailMarketing.API.Strings.BusinessDefaultValues.FormsUserName">
            <summary>
            The UserName for the forms user
            </summary>
        </member>
        <member name="T:EmailMarketing.API.Strings.Errors">
            <summary>
            String constants related to error, such as exception messages and internal error data storage.
            </summary>
        </member>
        <member name="F:EmailMarketing.API.Strings.Errors.ErrorCodeKey">
            <summary>
            Exception Message attribute key for Error Code
            </summary>
        </member>
        <member name="F:EmailMarketing.API.Strings.Errors.ErrorReferenceKey">
            <summary>
            Exception Message attribute key for Error Reference
            </summary>
        </member>
        <member name="T:EmailMarketing.API.Strings.Errors.FriendlyMessages">
            <summary>
            String constants exposed to API users in the event errors occur.
            </summary>
        </member>
        <member name="T:EmailMarketing.API.Strings.Errors.FriendlyMessages.Authentication">
            <summary>
            String constants related to errors during authentication.
            </summary>
        </member>
    </members>
</doc>
