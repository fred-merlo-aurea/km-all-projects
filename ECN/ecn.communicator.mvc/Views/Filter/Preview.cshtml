@model List<ecn.communicator.mvc.Models.Email>
@{
    ViewBag.Title = "Filter Preview";
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <title>@ViewBag.Title</title>
    <link href="@Url.Content("~/Content/kendo/2017.1.223/kendo.common.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/kendo/2017.1.223/kendo.default.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/fonts/frontello/css/kmform.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/kendo/2017.1.223/kendo.km.min.css")" rel="stylesheet" type="text/css" />
    <link href='http://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,600,700,300italic,400italic,600italic,700italic' rel='stylesheet' type='text/css'>
    <link href="@Url.Content("~/Content/Site.css")" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="http://test.ecn5.com/ecn.communicator/MasterPages/ECN_MainMenu.css" />
    <link rel="stylesheet" href="http://test.ecn5.com/ecn.communicator/MasterPages/ECN_Controls.css" />
    <link href="@Url.Content("~/Content/kendo/2017.1.223/kendo.dataviz.default.min.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Scripts/kendo/2017.1.223/jquery.min.js")"></script>
    <script src="@Url.Content("~/Scripts/kendo/2017.1.223/kendo.all.min.js")"></script>
    <script src="@Url.Content("~/Scripts/kendo/2017.1.223/kendo.aspnetmvc.min.js")"></script>
    <script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/clipboard.min.js")"></script>
    <script src="@Url.Content("~/Scripts/extensions.js")"></script>
    <script src="@Url.Content("~/Scripts/main.js")"></script>
    <script src="@Url.Content("~/Scripts/editor.js")"></script>
    <script src="@Url.Content("~/Scripts/jquery.blockUI.js")"></script>
    <script src="@Url.Content("~/Infrastructure/ActionMenu.js")"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-cookie/1.4.1/jquery.cookie.min.js"></script>
</head>
<body>
    @Html.Partial("Partials/_LoadingBox")
    <script>
        function downloadEmails() {
            var searchModel = {
                channelID : "",
                customerID: '@ViewBag.CustomerID',
                groupID: '@ViewBag.GroupID',
                fileType: $('#downloadType').val(),
                subType : "S",
                srchType : "",
                srchEm : "",
                filterID: '@ViewBag.FilterID'
            }
            var form = $('#modelForm');
            form.attr('method', 'POST');
            form.attr('action', '@Url.Action("downloadFile", "Filter")' + '?' + $.param(searchModel));
            form.submit();
        }

        var targetUrl = '@Url.Action("PreviewEmails_Read", "Filter")';
        var firstGridLoad = true;
        function filterDataBound() {

            if (firstGridLoad) {

                firstGridLoad = false;
                SetPagerWidget("firstpage");

            }
        }

        $(document).ready(function () {
            $("#ddPageSize").kendoDropDownList({
                dataTextField: "text",
                dataValueField: "value",
                value: 10,
                dataSource: [
                  { text: "5", value: "5" },
                  { text: "10", value: "10" },
                  { text: "15", value: "15" },
                  { text: "20", value: "20" }
                ]
            });

        });

        //Events - When First , Lats Previous and Next Buttons clicked on Pager.
        function GoToPage(e) {

            SetPagerWidget(e.target.id);
            var data = filterGridParams();
            ReBindGrid(data)

        }
        //Events - Triggers the Search using Search Criteria
        function Search() {
            SetPagerWidget("firstpage");
            firstGridLoad = true;
            var data = filterGridParams();
            ReBindGrid(data);
        }

        //Data Sends with DataSourceRequest- Parameters that needs to be passed to the server
        function filterGridParams() {

            return {
                filterID: '@ViewBag.FilterID',
                GroupID: parseInt('@ViewBag.GroupID'),
                PageNumber: $("#pagerInputPageNumber").val(),
                PageSize: $("#ddPageSize").val()
            };

        }

        //Rebinds the Grid with data sends with DataSourceRequest
        function ReBindGrid(obj) {
            var grid = $("#filterEmailsGrid").data("kendoGrid");
            var options = grid.getOptions();
            var dataSource = new kendo.data.DataSource({
                transport: {
                    read: {
                        url: targetUrl,
                        dataType: "json",
                        data: obj
                    }
                }
            });
            options.dataSource.data = dataSource.data;
            options.dataSource.pageSize = obj.PageSize;
            grid.setOptions(options);


        }
        //Function - Rebinds the Grid on Page Number input chnaged or Page size changed
        function RebindOnPageOrSizeChange() {

            if (parseInt($("#pagerInputPageNumber").val()) > 0 && !isNaN(parseInt($("#pagerInputPageNumber").val())) && $("#pagerInputPageNumber").val() <= parseInt($("#pagerTotalItems").text())) {
                SetPagerWidget($("#pagerInputPageNumber").val());
                var data = filterGridParams();
                ReBindGrid(data);
            }
            else {
                showMessage({
                    type: 'Error',
                    text: 'Please enter valid page number.',
                    autoClose: false
                });

            }

        }
        //This drives the server side paging by getting current page and setting all Pager messages
        function SetPagerWidget(id) {
            var totalrecordCount = 0;
            var grid = $("#filterEmailsGrid").data("kendoGrid");
            if (grid.dataSource.view()[0]) {
                totalrecordCount = parseInt(grid.dataSource.view()[0].TotalCount);
            }
            var pagesize = parseInt($("#ddPageSize").val());
            var currentpage = parseInt($("#pagerInputPageNumber").val());
            var lastpage = parseInt(totalrecordCount / pagesize) + 1;

            var firstpage = 1;

            if (id == "firstpage") {
                if (currentpage == firstpage)
                    currentpage = currentpage;
                else {
                    currentpage = firstpage;

                }
            }
            else if (id == "prevpage") {
                if (currentpage == firstpage)
                    currentpage = currentpage;
                else
                    currentpage = currentpage - 1;
            }
            else if (id == "nextpage") {
                if (currentpage == lastpage)
                    currentpage = currentpage;
                else
                    currentpage = currentpage + 1;

            }
            else if (id == "lastpage") {
                if (currentpage == lastpage)
                    currentpage = currentpage;
                else
                    currentpage = lastpage;

            }
            else {
                currentpage = parseInt(id);
            }
            var start = ((currentpage - 1) * pagesize + 1);
            var end = (currentpage * pagesize) < totalrecordCount ? (currentpage * pagesize) : totalrecordCount;
            var displaymessage = start + " - " + end + " of " + totalrecordCount + " items";

            $("#currentpage").text(currentpage);
            $("#pagerDisplay").text(displaymessage);
            $("#pagerTotalItems").text(lastpage);
            $("#pagerInputPageNumber").val(currentpage);

        }

        function checkChange(e) {
            RebindOnPageOrSizeChange()
        }

    </script>
    <div style="padding:10px;">
        <div id="panelFilterExport">
            <table>
                <tr>
                    <td> Export this view to </td>
                    <td>
                        @Html.DropDownList("downloadType", new List<SelectListItem> {
                    new SelectListItem { Text = "XML [.xml]", Value = ".xml" },
                    new SelectListItem { Text = "EXCEL [.xls]", Value = ".xls", Selected = true },
                    new SelectListItem { Text = "CSV [.csv]", Value = ".csv" },
                    new SelectListItem { Text = "TXT [.txt]", Value = ".txt" }
                    })
                    </td>
                    <td> <button type="button" class="btn k-button" id="btnExport" onclick="downloadEmails()"> Export </button></td>
                </tr>
            </table>
            <form id="modelForm"></form>
        </div>
        <hr />
        @(Html.Kendo()
        .Grid(Model)
        .Name("filterEmailsGrid")
        .Events(e => e.DataBound("filterDataBound"))
        .Columns(columns =>
        {
            columns.Bound(e => e.TotalCount).Hidden(true);
            columns.Bound(e => e.EmailID).Filterable(x => x.Cell(c => c.ShowOperators(false))).Sortable(false).Title("EmailID").HtmlAttributes(new { @style = "overflow: hidden; vertical-align:middle; text-align: center;" }).HeaderHtmlAttributes(new { @style = "text-align:center; vertical-align:middle; text-align: center;" });
            columns.Bound(e => e.EmailAddress).Filterable(x => x.Cell(c => c.ShowOperators(false))).Title("EmailAddress").HtmlAttributes(new { @style = "overflow: hidden; vertical-align:middle; text-align: center;" }).HeaderHtmlAttributes(new { @style = "text-align:center; vertical-align:middle; text-align: center;" });
        })
        .Pageable(page => page.Enabled(false))
        .Sortable()
        .DataSource(dataSource => dataSource
             .Ajax() //Specify that Ajax binding is used.        
            .PageSize(10)
            .Read(read => read
            .Action("PreviewEmails_Read", "Filter")
            .Data("filterGridParams")
        ) //Get Data from Server//Set the action method which will return the data in JSON format.
        )
        )
        <div id="pager" class="k-pager-wrap k-grid-pager k-widget k-floatwrap">
            <a class="k-link k-pager-nav k-state-disabled k-pager-first" title="Go to the first page" tabindex="-1">
                <span onclick="GoToPage(event)" id="firstpage" class="k-icon k-i-seek-w">seek-w</span>
            </a>
            <a class="k-link k-pager-nav k-state-disabled" title="Go to the previous page" tabindex="-1">
                <span onclick="GoToPage(event)" id="prevpage" class="k-icon k-i-arrow-w">arrow-w</span>
            </a>

            <ul class="k-pager-numbers k-reset">
                @*<li class="k-current-page"><span class="k-link k-pager-nav">1</span></li>*@
                <li><span class="k-state-selected" id="currentpage">1</span></li>

            </ul>
            <span class="k-pager-input k-label">Page<input class="k-textbox" id="pagerInputPageNumber" onchange="checkChange()">of <span id="pagerTotalItems"></span></span>
            <a class="k-link k-pager-nav" title="Go to the next page" tabindex="-1">
                <span onclick="GoToPage(event)" id="nextpage" class="k-icon k-i-arrow-e">arrow-e</span>
            </a>
            <a class="k-link k-pager-nav k-pager-last k-state-disabled" title="Go to the last page" tabindex="-1">
                <span onclick="GoToPage(event)" id="lastpage" class="k-icon k-i-seek-e">seek-e</span>
            </a>

            <span class="k-pager-sizes k-label">
                <span title="" class="k-widget k-dropdown k-header">
                    <input id="ddPageSize" onchange="checkChange()" />
                </span>items per page
            </span>
            <span class="float-right" style="margin-right:10px;">
                <lable id="pagerDisplay"></lable>
            </span>
        </div>
    </div>
</body>
</html>
