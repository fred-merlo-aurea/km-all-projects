<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ActiveUp.WebControls</name>
    </assembly>
    <members>
        <member name="T:ActiveUp.WebControls.AjaxPanel">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.AjaxPanel"/> object.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.AjaxPanel.SCRIPTKEY">
            <summary>
            Unique client script key.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.AjaxPanel._OK_STATUS_">
            <summary>
            Indicates the status of the http request is ok.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.AjaxPanel._ERROR_STATUS_">
            <summary>
            Indicates the status of the http request contains an error.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.AjaxPanel._PARAMETER_IS_CALLBACK_">
            <summary>
            Indicates if the postback becomes from an ajax panel.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.AjaxPanel._PARAMETER_CLIENT_ID">
            <summary>
            Client id of the callback.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.AjaxPanel.#ctor">
            <summary>
            Create the ajax panel.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.AjaxPanel.ScriptDirectory">
            <summary>
            Gets or sets the relative or absolute path to the directory where the API javascript file is.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.AjaxPanel.ExternalScript">
            <summary>
            Gets or sets the filename of the external script file.
            </summary>
            
        </member>
        <member name="P:ActiveUp.WebControls.AjaxPanel.LoadingDisplay">
            <summary>
            Gets or sets the html display while the user waits for the response.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.AjaxPanel.RefreshInterval">
            <summary>
            Gets or sets the interval (millisecond) to automatically trigger callback.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.AjaxPanel.SaveState">
            <summary>
            Gets or sets the values indicates if you want to save the state of all the forms controls.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.AjaxPanel.UseCache">
            <summary>
            Gets or sets the values indicates if you want to use the cache.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.AjaxPanel.EncodeURIComponent">
            <summary>
            Gets or sets the value indicates if you want to encodes an Uniform Resource Identifier (URI) component by replacing each instance of certain characters by one, two, or three escape sequences representing the UTF-8 encoding of the character. 
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.AjaxPanel.PostPanelOnly">
            <summary>
            Gets or sets the value indicates if you want to post only the panel elements or all the elements from the whole page.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.AjaxPanel.PostId">
            <summary>
            Gets or sets the value indicates the id of the others control you want to post the state.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.AjaxPanel.RequestAutoWidth">
            <summary>
            Gets or sets the value indicates if you want to set the width automatically on callback.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.AjaxPanel.RequestAutoHeight">
            <summary>
            Gets or sets the value indicates if you want to set the height automatically on callback.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.AjaxPanel.OnUnitialized">
            <summary>
            Gets or set the javascript function called after the unitialized state of the xml http request.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.AjaxPanel.OnLoading">
            <summary>
            Gets or sets the javascript function called after the loading state of the xml http request.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.AjaxPanel.OnLoaded">
            <summary>
            Gets or sets the javascript function called after the loaded state of the xml http request.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.AjaxPanel.OnInteractive">
            <summary>
            Gets or sets the javascript function called after the interactive state of the xml http request.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.AjaxPanel.OnAbort">
            <summary>
            Gets or sets the javascript function called after the abort state of the xml http request.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.AjaxPanel.OnError">
            <summary>
            Gets or sets the javascript function called after the error state of the xml http request.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.AjaxPanel.OnComplete">
            <summary>
            Gets or sets the javascript function called after the complete state of the xml http request.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.AjaxPanel.IsCallback">
            <summary>
            Indicates if a callback occurs from the panel.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.AjaxPanel.HttpResponse">
            <summary>
            HTTP response information from the callback.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.AjaxPanel.HttpRequest">
            <summary>
            HTTP request information sent by the client.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.AjaxPanel.RegisterAPIScriptBlock">
            <summary>
            Register the client-side script block in the ASPX page.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.AjaxPanel.OnPreRender(System.EventArgs)">
            <summary>
            Notifies the <see cref="T:ActiveUp.WebControls.Panel"/> control to perform any necessary prerendering steps prior to saving view state and rendering content.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.AjaxPanel.Render(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Render the panel to the output parameter specified.
            </summary>
            <param name="output"> The HTML writer to write out.</param>
        </member>
        <member name="M:ActiveUp.WebControls.AjaxPanel.RenderAjaxPanel(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Render the panel to the output parameter specified.
            </summary>
            <param name="output"> The HTML writer to write out.</param>
        </member>
        <member name="T:ActiveUp.WebControls.AjaxPanel.AjaxPanelEventHandler">
            <summary>
            Event handler fires when a callback occurs on the panel.
            </summary>
        </member>
        <member name="E:ActiveUp.WebControls.AjaxPanel.CallBack">
            <summary>
            Server event occurs when the callback on the panel occurs.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.AjaxPanel.OnCallBack(ActiveUp.WebControls.AjaxPanelEventArgs)">
            <summary>
            Server event occurs when a call back on the panel occurs.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:ActiveUp.WebControls.AjaxPanelDesigner">
            <summary>
            This class is used to render the ajax panel at design time.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.AjaxPanelDesigner.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.AjaxPanelDesigner.GetDesignTimeHtml">
            <summary>
            Gets the design time HTML code.
            </summary>
            <returns>A string containing the HTML to render.</returns>
        </member>
        <member name="T:ActiveUp.WebControls.AjaxPanelEventArgs">
            <summary>
            Class contains event data for callback. 
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.AjaxPanelEventArgs._argument">
            <summary>
            Callback argument.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.AjaxPanelEventArgs._output">
            <summary>
            Renders HTML contents to the client.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.AjaxPanelEventArgs.#ctor(System.String,System.Web.UI.HtmlTextWriter)">
            <summary>
            Creates the event data for the callback.
            </summary>
            <param name="argument">Callback argument.</param>
            <param name="output">HTML contents to the client.</param>
        </member>
        <member name="M:ActiveUp.WebControls.AjaxPanelEventArgs._Init(System.String,System.Web.UI.HtmlTextWriter)">
            <summary>
            Initializes the event data for the callback.
            </summary>
            <param name="argument">Callback argument.</param>
            <param name="output">HTML contents to the client.</param>
        </member>
        <member name="P:ActiveUp.WebControls.AjaxPanelEventArgs.Argument">
            <summary>
            Gets or sets the callback argument.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.AjaxPanelEventArgs.Output">
            <summary>
            Gets or sets the output for rendering HTML contents to the client.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.DataSortOrder">
            <summary>
            The sort order of the suggest box.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.DataSortOrder.Ascending">
            <summary>
            Ascending order.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.DataSortOrder.Descending">
            <summary>
            Descending order.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.DataSortOrder.Disabled">
            <summary>
            The order is not used.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.FilterPosition">
            <summary>
            The filter position of the suggest box.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.FilterPosition.Start">
            <summary>
            Filter the input string at the start of each item.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.FilterPosition.Into">
            <summary>
            Filter the input string anywher of each item.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.AutoSuggest">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.AutoSuggest"/> object.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.AutoSuggest.SCRIPTKEY">
            <summary>
            Unique client script key.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.AutoSuggest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.AutoSuggest"/> class.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.AutoSuggest.SelectedItemForeColor">
            <summary>
            Gets or sets the fore color of the current selected item.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.AutoSuggest.SelectedItemBackColor">
            <summary>
            Gets or sets the background color of the current selected item.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.AutoSuggest.SuggestBackColor">
            <summary>
            Gets or sets the background color of the suggest box.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.AutoSuggest.SuggestCellPadding">
            <summary>
            Gets or sets the cell padding of the suggest box.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.AutoSuggest.SuggestCellSpacing">
            <summary>
            Gets or sets the cell spacing of the suggest box.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.AutoSuggest.SuggestBorderStyle">
            <summary>
            Gets or sets the border style of the suggest box.		
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.AutoSuggest.SuggestBorderWidth">
            <summary>
            Gets or sets the border width of the suggest box.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.AutoSuggest.SuggestBorderColor">
            <summary>
            Gets or sets the border color of the suggest box.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.AutoSuggest.BorderStyle">
            <summary>
            Gets or sets the border style.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.AutoSuggest.IgnoreCase">
            <summary>
            Gets or sets a value indicating if the case must to be ignored.
            </summary>
            <value><c>true</c> if the case must be ignored; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.AutoSuggest.PostAutoSuggestOnly">
            <summary>
            Gets or sets the value indicates if you want to post only the autosuggest elements or all the elements from the whole page.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.AutoSuggest.PostId">
            <summary>
            Gets or sets the value indicates the id of the others control you want to post the state.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.AutoSuggest.BoldSearchPattern">
            <summary>
            Gets or sets a value indicating whether the pattern must be in bold.
            </summary>
            <value><c>true</c> if the pattern must be in bold; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.AutoSuggest.MaxDisplayed">
            <summary>
            Gets or sets the maximum number of items displayed in the suggest box.
            </summary>
            <value>The maximum number of items displayed in the suggest box.</value>
        </member>
        <member name="P:ActiveUp.WebControls.AutoSuggest.DoPostBackAfterSelection">
            <summary>
            Gets or sets a value indicating whether postback must be occurs after the selection of an item.
            </summary>
            <value>
            	<c>true</c> if postback must be occurs after the selection of an item; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ActiveUp.WebControls.AutoSuggest.UseSSL">
            <summary>
            Gets or sets a value indicating whether you have to use it in SSL.
            </summary>
            <value><c>true</c> if you have to use it in SSL; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.AutoSuggest.FilterPosition">
            <summary>
            Gets or sets the filter position.
            </summary>
            <value>The filter position.</value>
        </member>
        <member name="P:ActiveUp.WebControls.AutoSuggest.NoWrap">
            <summary>
            Gets or sets a value indicating whether the items don't have to be wrapped.
            </summary>
            <value><c>true</c> if the items don't have to be wrapped.; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.AutoSuggest.ScriptDirectory">
            <summary>
            Gets or sets the relative or absolute path to the directory where the API javascript file is.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.AutoSuggest.ExternalScript">
            <summary>
            Gets or sets the filename of the external script file.
            </summary>
            
        </member>
        <member name="P:ActiveUp.WebControls.AutoSuggest.Suggests">
            <summary>
            Gets or sets the suggests values.
            </summary>
            <value>The suggests.</value>
        </member>
        <member name="P:ActiveUp.WebControls.AutoSuggest.DataOrder">
            <summary>
            Gets or sets the field for sort order.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.AutoSuggest.DataSort">
            <summary>
            Gets or sets the data source for the sort order.
            </summary>
            <value>The data source for the sort order.</value>
        </member>
        <member name="P:ActiveUp.WebControls.AutoSuggest.DataFilter">
            <summary>
            Gets or sets the date source for the filter.
            </summary>
            <value>The data source for the filter.</value>
        </member>
        <member name="P:ActiveUp.WebControls.AutoSuggest.DataSource">
            <summary>
            Gets or sets the main data source of the suggest.
            </summary>
            <value>The data source.</value>
        </member>
        <member name="M:ActiveUp.WebControls.AutoSuggest.RegisterAPIScriptBlock">
            <summary>
            Register the client-side script block in the ASPX page.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.AutoSuggest.OnPreRender(System.EventArgs)">
            <summary>
            Raises the pre render event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.AutoSuggest.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Adds the attributes to render.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:ActiveUp.WebControls.AutoSuggest.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the specified output.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.AutoSuggest.DataBind">
            <summary>
            Binds a data source the treeview.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.AutoSuggestDesigner.GetDesignTimeHtml">
            <summary>
            Gets the design time HTML code.
            </summary>
            <returns>A string containing the HTML to render.</returns>
        </member>
        <member name="T:ActiveUp.WebControls.I2of5Encoder">
            <summary>
            A class that encodes data into Interleaved 2 of 5 barcodes.
            </summary>
            <remarks>Interleaved 2 of 5 is a symbology that is commonly used in industry.  It is related to
            Standard 2 of 5 (See <see cref="!:Barcodes.S2of5Encoder"/>), except instead of encoding each digit
            as a series of bars of varying widths, Interleaved 2 of 5 encodes pairs of digits as a series of
            bars and spaces.  It is also the basis for ITF14.  Interleaved 2 of 5 can only encode digit strings
            of even length.</remarks>
            <seealso cref="!:Barcodes.I2of5Generator"/>
            <seealso cref="!:Barcodes.I2of5Sizer"/>
        </member>
        <member name="P:ActiveUp.WebControls.I2of5Encoder.Text">
            <summary>
            Gets or sets the data to be encoded in Interleaved 2 of 5, as a text string.
            </summary>
            <value>The text to be encoded.</value>
            <remarks>Interleaved 2 of 5 can only encode even-length digit strings. However, this encoder will accept
            odd-length digit strings.  If the digit string's length is odd, the encoder will add a mod-10 check digit
            the end, to make the completed string even-length.  The checksum is calculated by multiplying the rightmost
            digit by 3, the next digit by 1, the third digit by 3, and so on. The digits are then summed; the check
            digit is the value that must be added to reach the next multiple of ten.</remarks>
            <exception cref="T:System.ArgumentException">The data supplied to the encoder contains non-digit symbols.
            The <see cref="P:System.ArgumentException.ParamName"/> property will be set to "Digit".</exception>
        </member>
        <member name="P:ActiveUp.WebControls.I2of5Encoder.Flags">
            <summary>
            Gets flags that represent the encoder's capabilities.
            </summary>
            <value>Always returns <see cref="!:Barcodes.BarcodeEncoderFlags.Text"/>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.I2of5Encoder.TextSymbols">
            <summary>
            Symbols that are encodable by this encoder.
            </summary>
            <value>Always returns <c>"0123456789"</c>.</value>
            <remarks>This encoder can only encode digits.  If any non-digit symbols are passed in, the encoder will fail.</remarks>
        </member>
        <member name="M:ActiveUp.WebControls.I2of5Encoder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:Barcodes.I2of5Encoder"/> class.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.S2of5Encoder">
            <summary>
            A class that encodes data into Standard (Industrial) 2 of 5 barcodes.
            </summary>
            <remarks>Standard 2 of 5 is a symbology that is commonly used in industry.  It encodes digits in
            patterns consisting of five bars per digit, with two of the five bars thicker than the other three
            (hence, 2 of 5).  While it is larger than Interleaved 2 of 5, it can encode an odd number of digits.</remarks>
            <seealso cref="!:Barcodes.S2of5Generator"/>
            <seealso cref="!:Barcodes.S2of5Sizer"/>
        </member>
        <member name="P:ActiveUp.WebControls.S2of5Encoder.UseChecksum">
            <summary>
            Gets or sets whether a checksum digit should be appended to the barcode.
            </summary>
            <value>True if a checksum digit should be appended, false otherwise.</value>
            <remarks><para>The checksum digit is calculated by weighting the digits in
            odd positions (rightmost, third to rightmost, etc.) with a weight of three,
            and even-positioned digits a weight of one.  The digits are then summed, and
            the check digit is the value that must be added to reach the next multiple of
            ten.</para><para>If the value of this property is changed after the data has
            been set, the data will be re-encoded to include or exclude the check digit.
            </para></remarks>
        </member>
        <member name="P:ActiveUp.WebControls.S2of5Encoder.Text">
            <summary>
            Gets or sets the data to be encoded in Standard (Industrial) 2 of 5, as a text string.
            </summary>
            <value>The text to be encoded.</value>
            <remarks>Standard 2 of 5 can only encode digits. If <see cref="!:Barcodes.S2of5Encoder.UseChecksum"/>
            is true, a checksum digit will be appended.  The checksum is calculated by multiplying the rightmost
            digit by 3, the next digit by 1, the third digit by 3, and so on. The digits are then summed; the check
            digit is the value that must be added to reach the next multiple of ten.</remarks>
            <exception cref="T:System.ArgumentException">The data supplied to the encoder contains non-digit symbols.
            The <see cref="P:System.ArgumentException.ParamName"/> property will be set to "Digit".</exception>
        </member>
        <member name="P:ActiveUp.WebControls.S2of5Encoder.Flags">
            <summary>
            Gets flags that represent the encoder's capabilities.
            </summary>
            <value>Always returns <see cref="!:Barcodes.BarcodeEncoderFlags.Text"/>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.S2of5Encoder.TextSymbols">
            <summary>
            Symbols that are encodable by this encoder.
            </summary>
            <value>Always returns <c>"0123456789"</c>.</value>
            <remarks>The encoder can only encode digits.  If any non-digit symbols are passed in, the encoder will fail.</remarks>
        </member>
        <member name="M:ActiveUp.WebControls.S2of5Encoder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:Barcodes.S2of5Encoder"/> class.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Base2of5Sizer">
            <summary>
            The base sizing class for the two 2 of 5 symbologies.
            </summary>
            <remarks>The two 2 of 5 symbologies' sizing requirements are virtually identical, with
            the only difference being the size of each digit's encoding.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.Base2of5Sizer.ModuleWidth">
            <summary>
            The module width of the barcode, in pixels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Base2of5Sizer.GuardWidth">
            <summary>
            The guard (quiet) zone width, in pixels.
            </summary>
            <remarks>If the <see cref="F:ActiveUp.WebControls.BarcodeRenderMode.Boxed"/> flag is set, this width also includes
            a 5 module wide black stripe, for the left and right sides of the box.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.Base2of5Sizer.Length">
            <summary>
            The length of the encoded data, in digits.
            </summary>
            <remarks>This is used by the derived classes in their implementation of 
            <see cref="!:Barcodes.Base2of5Sizer.WidthWithoutGuards"/>.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.Base2of5Sizer.WidthWithoutGuards">
            <summary>
            The total width of the barcode, excluding any guard (quiet) zones, in pixels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Base2of5Sizer.Width">
            <summary>
            The total width of the barcode, in pixels, given the current DPI and module width.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Base2of5Sizer.FontHeight">
            <summary>
            Gets the font height used for numbering the barcode.
            </summary>
            <value>The font height, in pixels.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Base2of5Sizer.FontHeightAddon">
            <summary>
            The extra space added to the bottom of the barcode, for space to number the barcode.
            </summary>
            <value>The extra space, in pixels, at the bottom of the barcode.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Base2of5Sizer.TopWidth">
            <summary>
            Gets the width of the top bracer bar, if present, in pixels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Base2of5Sizer.BottomWidth">
            <summary>
            Gets the width of the bottom bracer bar, if present, and the numbering, in pixels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Base2of5Sizer.SideBrace">
            <summary>
            Gets the width of the left and right side bracing bars, in pixels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Base2of5Sizer.Height">
            <summary>
            The minimum height of the barcode, in pixels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Base2of5Sizer.ExtraHeight">
            <summary>
            The height of all items added to the barcode.
            </summary>
            <value>The height of all items added to the barcode, in pixels.</value>
            <remarks><para>For 2 of 5 barcodes, the extra height comes from text at the bottom of the barcode, 
            and the optional bracing or boxing of the barcode symbol.</para>
            <para>This property is meant to be used to generate a desired barcode height.  To calculate the height
            of the size to pass to <see cref="!:Barcodes.IBarcodeGenerator.GenerateBarcode"/>, multiply the desired height
            (in inches) by the DPI, and add this number to it.  </para><para>This property's value is potentially impacted by the value of <see cref="!:Barcodes.IBarcodeSizer.Mode"/>.
            The barcode render mode flags should be set before using this value.</para></remarks>
        </member>
        <member name="M:ActiveUp.WebControls.Base2of5Sizer.IsValidSize(System.Drawing.Size)">
            <summary>
            Checks to see if a specified size is valid.
            </summary>
            <param name="size">A size to test for validity.</param>
            <returns>True if this size may be passed to <see cref="!:Barcodes.BarcodeGenerator.GenerateBarcode"/>, false otherwise.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.Base2of5Sizer.GetValidSize(System.Drawing.Size)">
            <summary>
            Given a size, returns the largest valid size contained by that size.
            </summary>
            <param name="size">A maximum size, from which to find a valid size.</param>
            <returns>A valid size which may be passed to the <see cref="!:Barcodes.BarcodeGenerator.GenerateBarcode"/>.</returns>
            <exception cref="T:System.ArgumentException">The specified size is smaller than the minimum size in one or both dimensions.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.Base2of5Sizer.DPI">
            <summary>
            The current DPI (dots-per-inch) of the barcode.
            </summary>
            <value>The current DPI (dots-per-inch) of the barcode.</value>
            <remarks>
            This value represents the DPI that the barcode will be printed at.  This value defaults to zero, which represents "logical" mode.
            In "logical" mode, the generated barcode represents the relative sizing and positioning of barcode elements, but they are not
            necessarily in the proper size for printing.
            
            If the value is greater than zero, the barcode generator will generate a barcode using the specified DPI.
            </remarks>
            <exception cref="T:System.ArgumentException">When setting the DPI, the value specified was less than zero.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.Base2of5Sizer.Mode">
            <summary>
            The rendering mode flags, which control the way the barcode is rendered.
            </summary>
            <value>The flags which control which aspects of the barcode are rendered.</value>
            <remarks>The 2 of 5 encoders recognize all rendering flags except <see cref="!:Barcodes.BarcodeRenderMode.Notched"/>.
            Setting the <see cref="!:Barcodes.BarcodeRenderMode.Boxed"/> flag automatically sets the
            <see cref="!:Barcodes.BarcodeRenderMode.Guarded"/> flag.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.Base2of5Sizer.Module">
            <summary>
            Gets and sets module width of the barcode (in mils).
            </summary>
            <value>The module width of the barcode, in mils (1 mil is 1/1000 of an inch). The default value is 10 mils (.254 mm).</value>
            <remarks>The module width is the width of the narrowest bar.  The widths of spaces,
            wide bars, wide spaces, quiet zones, etc. are multiples of this module width.  Changing the module width of a barcode
            changes the total width of the barcode, as returned by <see cref="!:Barcodes.Base2of5Sizer.Width"/>.</remarks>
            <exception cref="T:System.ArgumentException">The specified module width is less than <see cref="!:Barcodes.Base2of5Sizer.MinimumModule"/>.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.Base2of5Sizer.MinimumModule">
            <summary>
            Gets the minimum module width, in mils.
            </summary>
            <value>The minimum module width, in mils. (1 mil is 1/1000th of an inch, or .025mm). Always returns 7.5 mils (.19 mm).</value>
        </member>
        <member name="T:ActiveUp.WebControls.I2of5Sizer">
            <summary>
            Controls the sizing of Interleaved 2 of 5 barcodes.
            </summary>
            <seealso cref="!:Barcodes.I2of5Encoder"/>
            <seealso cref="!:Barcodes.I2of5Generator"/>
        </member>
        <member name="P:ActiveUp.WebControls.I2of5Sizer.WidthWithoutGuards">
            <summary>
            The total width of the barcode, excluding any guard (quiet) zones, in pixels.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.S2of5Sizer">
            <summary>
            Controls the sizing of Standard (Industrial) 2 of 5 barcodes.
            </summary>
            <seealso cref="!:Barcodes.S2of5Encoder"/>
            <seealso cref="!:Barcodes.S2of5Generator"/>
        </member>
        <member name="P:ActiveUp.WebControls.S2of5Sizer.WidthWithoutGuards">
            <summary>
            The total width of the barcode, excluding any guard (quiet) zones, in pixels.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.I2of5Generator">
            <summary>
            Class which generates Interleaved 2 of 5 barcodes.
            </summary>
            <seealso cref="!:Barcodes.I2of5Encoder"/>
            <seealso cref="!:Barcodes.I2of5Sizer"/>
        </member>
        <member name="P:ActiveUp.WebControls.I2of5Generator.Data">
            <summary>
            Gets or sets the byte array of encoded data used by the generator to generate the barcode.
            </summary>
            <value>The byte array of encoded data.</value>
            <remarks>This data only has very basic validation to ensure that it does not cause exceptions
            when used (such as array overruns). It is not checked for validity.  The user should not set this
            directly, instead, it should be set by an encoder class.  This property does <b>not</b> make a
            copy of the byte array that is supplied to it, it only keeps a reference.  The generator's behavior
            if the underlying byre array is modified, is undefined.</remarks>
            <exception cref="T:System.ArgumentException">The specified byte array is invalid, in either length or content.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.I2of5Generator.Flags">
            <summary>
            Gets the barcode generator capability flags.
            </summary>
            <value>Always returns <see cref="!:Barcodes.BarcodeGeneratorFlags.Linear"/>|<see cref="!:Barcodes.BarcodeGeneratorFlags.VariableLength"/>.</value>
        </member>
        <member name="M:ActiveUp.WebControls.I2of5Generator.GenerateBarcode(System.Drawing.Size)">
            <summary>
            Generates an Inteleaved 2 of 5 barcode of a specified size, using the data that has been set previously by its corresponding
            encoder.
            </summary>
            <param name="size">The size of the barcode to return.</param>
            <returns>A bitmap of the barcode, of the specified size.</returns>
            <exception cref="T:System.ArgumentException">The specified size is invalid.</exception>
            <exception cref="T:System.InvalidOperationException">The data that is to be encoded has not been set yet.</exception>
        </member>
        <member name="M:ActiveUp.WebControls.I2of5Generator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:Barcodes.I2of5Generator"/> class.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.S2of5Generator">
            <summary>
            Class which generates Standard (Industrial) 2 of 5 barcodes.
            </summary>
            <seealso cref="!:Barcodes.S2of5Encoder"/>
            <seealso cref="!:Barcodes.S2of5Sizer"/>
        </member>
        <member name="P:ActiveUp.WebControls.S2of5Generator.Data">
            <summary>
            Gets or sets the byte array of encoded data used by the generator to generate the barcode.
            </summary>
            <value>The byte array of encoded data.</value>
            <remarks>This data only has very basic validation to ensure that it does not cause exceptions
            when used (such as array overruns). It is not checked for validity.  The user should not set this
            directly, instead, it should be set by an encoder class.  This property does <b>not</b> make a
            copy of the byte array that is supplied to it, it only keeps a reference.  The generator's behavior
            if the underlying byre array is modified, is undefined.</remarks>
            <exception cref="T:System.ArgumentException">The specified byte array is invalid, in either length or content.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.S2of5Generator.Flags">
            <summary>
            Gets the barcode generator capability flags.
            </summary>
            <value>Always returns <see cref="!:Barcodes.BarcodeGeneratorFlags.Linear"/>|<see cref="!:Barcodes.BarcodeGeneratorFlags.VariableLength"/>.</value>
        </member>
        <member name="M:ActiveUp.WebControls.S2of5Generator.GenerateBarcode(System.Drawing.Size)">
            <summary>
            Generates a Standard (Industrial) 2 of 5 barcode of a specified size, using the data that has been set previously by its corresponding
            encoder.
            </summary>
            <param name="size">The size of the barcode to return.</param>
            <returns>A bitmap of the barcode, of the specified size.</returns>
            <exception cref="T:System.ArgumentException">The specified size is invalid.</exception>
            <exception cref="T:System.InvalidOperationException">The data that is to be encoded has not been set yet.</exception>
        </member>
        <member name="M:ActiveUp.WebControls.S2of5Generator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:Barcodes.S2of5Generator"/> class.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.BarcodeComponentEditor">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.BarcodeComponentEditor"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.BarcodeControlDesigner.GetDesignTimeHtml">
            <summary>
            Gets the design time HTML code.
            </summary>	
            <returns>A string containing the HTML to render.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.BarcodePropertyBuilderForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.FontHolder">
            <summary>
            A utility class that holds font-related information.  It contains the FontName field, which is the font used
            to decorate the barcodes.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.BarcodeUtilities">
            <summary>
            A utility class that holds barcode related utilities.  It contains the CalculateModuleWidth method, which
            calculates the target module width required to obtain a desired pixel width.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.BarcodeUtilities.CalculateModuleWidth(ActiveUp.WebControls.IBarcodeModularSizer,System.Int32)">
            <summary>
            Calculates the module width for a given barcode, with a default tolerance and approach direction.
            </summary>
            <remarks>
            This routine is the equivilent to a call of
            <c><see cref="!:Barcodes.BarcodeUtilities.CalculateModuleWidth(Barcodes.IBarcodeModularSizer,int, bool, float)"/>(<paramref name="sizer"/>, <paramref name="width"/>, false, .1f)</c>.
            It returns a module width that produces a barcode that is as close to the target as possible, but no larger.</remarks> 
            <param name="sizer">The sizer instance for the barcode to be sized.</param>
            <param name="width">The desired pixel width.</param>
            <returns>A module width which produces a barcode as close to the target as possible, but no larger.</returns>
            <exception cref="T:System.ArgumentException">The specified pixel width <paramref name="width"/> is smaller than the smallest 
            possible width, as calculated with a module width of <see cref="!:Barcodes.IBarcodeModularSizer.MinimumModule"/>.</exception>
            <exception cref="T:System.NullReferenceException">The specified <paramref name="sizer"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">The <see cref="!:Barcodes.IBarcodeSizer.DPI"/> is set to zero.</exception>
        </member>
        <member name="M:ActiveUp.WebControls.BarcodeUtilities.CalculateModuleWidth(ActiveUp.WebControls.IBarcodeModularSizer,System.Int32,System.Boolean)">
            <summary>
            Calculates the module width for a given barcode, with a default tolerance.
            </summary>
            <remarks>
            This routine is the equivilent to a call of
            <c><see cref="!:Barcodes.BarcodeUtilities.CalculateModuleWidth(Barcodes.IBarcodeModularSizer,int, bool, float)"/>(<paramref name="sizer"/>, <paramref name="width"/>, <paramref name="aimHigh"/>, .1f)</c>.
            </remarks>
            <param name="sizer">The sizer instance for the barcode to be sized.</param>
            <param name="width">The desired pixel width.</param>
            <param name="aimHigh">True to return the module width that produces a width as close as possible 
            to but not less than the specified width, false to return a module width as close as possible but
            not greater than the specified width.</param>
            <returns>A module width, which produces a barcode as close to the target as possible, but no larger or smaller, depending on <paramref name="aimHigh"/>.</returns>
            <exception cref="T:System.ArgumentException">The specified pixel width <paramref name="width"/> is smaller than the smallest 
            possible width, as calculated with a module width of <see cref="!:Barcodes.IBarcodeModularSizer.MinimumModule"/>.</exception>
            <exception cref="T:System.NullReferenceException">The specified <paramref name="sizer"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">The <see cref="!:Barcodes.IBarcodeSizer.DPI"/> is set to zero.</exception>
        </member>
        <member name="M:ActiveUp.WebControls.BarcodeUtilities.CalculateModuleWidth(ActiveUp.WebControls.IBarcodeModularSizer,System.Int32,System.Boolean,System.Single)">
            <summary>
            Calculates the module width for a given barcode.
            </summary>
            <param name="sizer">The sizer instance for the barcode to be sized.</param>
            <param name="width">The desired pixel width.</param>
            <param name="aimHigh">True to return the module width that produces a width as close as possible 
            to but not less than the specified width, false to return a module width as close as possible but
            not greater than the specified width.</param>
            <param name="tolerance">The desired module tolerance; once calculations narrow the module rande 
            to a distance lower than this, calculations stop.</param>
            <returns>A module width, which produces a barcode as close to the target as possible, but no larger 
            or smaller, depending on <paramref name="aimHigh"/>.</returns>
            <exception cref="T:System.ArgumentException">The specified pixel width <paramref name="width"/> is smaller than the smallest 
            possible width, as calculated with a module width of <see cref="!:Barcodes.IBarcodeModularSizer.MinimumModule"/>, or 
            <paramref name="tolerance"/> is less than <c>0.01</c>.</exception>
            <exception cref="T:System.NullReferenceException">The specified <paramref name="sizer"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">The <see cref="!:Barcodes.IBarcodeSizer.DPI"/> is set to zero.</exception>
        </member>
        <member name="T:ActiveUp.WebControls.BarcodeGeneratorFlags">
            <summary>
            Flags that specify the capabilities and behaviors of a barcode generator implementing <see cref="!:Barcodes.IBarcodeGenerator"/>.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.BarcodeGeneratorFlags.None">
            <summary>
            No capabilities.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.BarcodeGeneratorFlags.Linear">
            <summary>
            The barcode generated is a 1D linear barcode. This flag and <see cref="!:Barcodes.BarcodeGeneratorFlags.TwoDimensional"/> are mutually exclusive.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.BarcodeGeneratorFlags.TwoDimensional">
            <summary>
            The barcode generated is a 2D barcode. This flag and <see cref="!:Barcodes.BarcodeGeneratorFlags.Linear"/> are mutually exclusive.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.BarcodeGeneratorFlags.HeightDependant">
            <summary>
            The barcode's height is strictly dependant on the barcode's width.  The 
            Height parameter of any size passed to <see cref="M:ActiveUp.WebControls.IBarcodeGenerator.GenerateBarcode(System.Drawing.Size)"/>
            will be ignored.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.BarcodeGeneratorFlags.AspectRatio">
            <summary>
            The barcode has a particular range of aspect ratios, Height/Width, that it must meet, as specified by
            <see cref="P:ActiveUp.WebControls.IBarcodeSizer.AspectRatioMin"/> and <see cref="P:ActiveUp.WebControls.IBarcodeSizer.AspectRatioMax"/>.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.BarcodeGeneratorFlags.VariableLength">
            <summary>
            The barcode's width is dependant upon the data to be encoded. <see cref="P:ActiveUp.WebControls.IBarcodeEncoder.Text"/> or 
            <see cref="P:ActiveUp.WebControls.IBarcodeEncoder.Data"/> must be set before obtaining a width from <see cref="P:ActiveUp.WebControls.IBarcodeSizer.Width"/>.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.BarcodeGeneratorFlags.FixedDimensions">
            <summary>
            The barcode's dimensions are strictly dictated by the standard.  The size passed into 
            <see cref="M:ActiveUp.WebControls.IBarcodeGenerator.GenerateBarcode(System.Drawing.Size)"/> must be the size returned by 
            <see cref="P:ActiveUp.WebControls.IBarcodeSizer.Size"/>.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.BarcodeRenderMode">
            <summary>
            Flags that control rendering options for barcodes.
            </summary>
            <remarks>Certain flags are not used by certain generators.  The flags that are used by a given generator
            will be specified in the generator's documentation.  Furthermore, depending on the generator, setting some
            flags will set other flags.</remarks>
        </member>
        <member name="F:ActiveUp.WebControls.BarcodeRenderMode.None">
            <summary>
            No options.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.BarcodeRenderMode.Guarded">
            <summary>
            Include blank "guard" or "quiet" zones on each end of the barcode.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.BarcodeRenderMode.Notched">
            <summary>
            Include notches in barcode, into which numbers can be drawn.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.BarcodeRenderMode.Numbered">
            <summary>
            Include human-readable barcode information.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.BarcodeRenderMode.Braced">
            <summary>
            Include "bearer bars", two horizontal bars at the top and bottom of the barcode, to prevent partial scans.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.BarcodeRenderMode.Boxed">
            <summary>
            Put the barcode in a box, including guard zones.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.BarcodeEncoderFlags">
            <summary>
            Flags that specifiy the capabilities of an <see cref="!:Barcodes.IBarcodeEncoder"/>.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.BarcodeEncoderFlags.None">
            <summary>
            No flags.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.BarcodeEncoderFlags.Text">
            <summary>
            The barcode can encode strings of particular characters.  The data to be encoded is set in 
            <see cref="P:ActiveUp.WebControls.IBarcodeEncoder.Text"/>. The characters that can be used are specified in 
            <see cref="P:ActiveUp.WebControls.IBarcodeEncoder.TextSymbols"/>.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.BarcodeEncoderFlags.Data">
            <summary>
            The barcode information to be encoded can be set with <see cref="P:ActiveUp.WebControls.IBarcodeEncoder.Data"/>.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.BarcodeEncoderFlags.Binary">
            <summary>
            The barcode can encode arbitrary binary data, set with <see cref="P:ActiveUp.WebControls.IBarcodeEncoder.Data"/>.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.BarcodeEncoderFlags.ExtendedData">
            <summary>
            The barcode encodes multi-byte data codes, set with <see cref="P:ActiveUp.WebControls.IBarcodeEncoder.Data"/>.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.BarcodeEncoderFlags.ASCII">
            <summary>
            The barcode encodes ASCII data (0-127), set with either the <see cref="P:ActiveUp.WebControls.IBarcodeEncoder.Text"/>
            or <see cref="P:ActiveUp.WebControls.IBarcodeEncoder.Data"/>.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.BarcodeEncoderFlags.Composite">
            <summary>
            The barcode encoder is a composite encoder.  The generator used (as returned by <see cref="P:ActiveUp.WebControls.IBarcodeEncoder.Generator"/>) 
            and corresponding sizer, as returned by <see cref="P:ActiveUp.WebControls.IBarcodeEncoder.Sizer"/>, might not set until the data to be encoded 
            has been set, and might change after the data to be encoded changes.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.IBarcodeEncoder">
            <summary>
            The main interface for a barcode encoder.  The encoder encodes plaintext data into codes suitable for
            barcode generation by an <see cref="!:Barcodes.IBarcodeGenerator"/>.
            </summary>
            <remarks>This is the main interface that the library user interacts with.  Under most circumstances,
            classes implementing <see cref="!:Barcodes.IBarcodeGenerator"/> should not be used directly.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.IBarcodeEncoder.Data">
            <summary>
            Gets or sets the data to be encoded by a barcode, as a byte array.
            </summary>
            <value>The byte data to be encoded.</value>
            <exception cref="T:System.NotSupportedException">The encoder does not support directly setting the
            data to be encoded.</exception>
            <exception cref="T:System.ArgumentException">The data supplied to the encoder is invalid, either in length
            or in content.  The message of the exception gives more information.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.IBarcodeEncoder.Text">
            <summary>
            Gets or sets the data to be encoded by a barcode, as a text string.
            </summary>
            <value>The text to be encoded.</value>
            <remarks>The value returned by this property is equal to the value passed in; it might not exactly represent
            the value encoded by the barcode. (For instance, in ISBN barcodes, dashes used to separate the ISBN are not encoded
            but will be retained and returned by this property.)</remarks>
            <exception cref="T:System.NotSupportedException">The encoder does not support directly setting the data
            as a text string.</exception>
            <exception cref="T:System.ArgumentException">The data supplied to the encoder is invalid, either in length
            or in content.  The message of the exception gives more information.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.IBarcodeEncoder.Flags">
            <summary>
            Flags that represent the encoder's capabilities.
            </summary>
            <value>Flags that represent the encoder's capabilities.</value>
        </member>
        <member name="P:ActiveUp.WebControls.IBarcodeEncoder.TextSymbols">
            <summary>
            Symbols that are encodable by this encoder.
            </summary>
            <value>The valid characters that may be encoded.</value>
            <remarks>This returns a string containing all of the valid characters (or characters that might be encoded) appear in 
            a string passed to <see cref="!:Barcodes.IBarcodeEncoder.Text"/>.  This does not mean that any arrangement of such characters are
            necessarily valid, or that other characters will cause an encoding error. (For instance, in <see cref="!:Barcodes.ISBNEncoder"/>,
            the valid characters are <c>"0123456789xX"</c>.  However, passing in an ISBN with dashes in it will not cause
            an error; the dashes are simply ignored.)  The behavior of a given encoder will be described in the documentation of 
            that encoder.  This property is primarily for reference.
            This property only returns a value if the <see cref="!:Barcodes.BarcodeEncoderFlags.Text"/> flag is set in <see cref="!:Barcodes.IBarcodeEncoder.Flags"/>.
            </remarks>
        </member>
        <member name="P:ActiveUp.WebControls.IBarcodeEncoder.Generator">
            <summary>
            Returns the generator being used by this encoder.
            </summary>
            <value>The generator being used by this encoder.</value>
            <remarks>This property might return <c>null</c> if the encoder is a composite encoder and the data has not been set.  The
            <see cref="!:Barcodes.IBarcodeGenerator"/> returned should not be saved, as it might change if the data to be encoded is changed.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.IBarcodeEncoder.Sizer">
            <summary>
            Returns the sizer being used by this encoder.
            </summary>
            <value>The sizer for the generator being used by this encoder.</value>
            <remarks>This property might return <c>null</c> if the encoder is a composite encoder and the data has not been set.  The
            <see cref="!:Barcodes.IBarcodeSizer"/> returned should not be saved, as it might change if the data to be encoded is changed.</remarks>
        </member>
        <member name="T:ActiveUp.WebControls.IBarcodeSizer">
            <summary>
            Interface to the sizing controls of a barcode generator.
            </summary>
            <remarks>This interface contains two properties that directly affect the size of a generated barcode: they are
            <see cref="!:Barcodes.IBarcodeSizer.DPI"/> and <see cref="!:Barcodes.IBarcodeSizer.Mode"/>.</remarks>
            <seealso cref="!:Barcodes.IBarcodeModularSizer"/>
        </member>
        <member name="P:ActiveUp.WebControls.IBarcodeSizer.Width">
            <summary>
            The width of the barcode.
            </summary>
            <value>The width of the barcode, in pixels.</value>
            <remarks>This is a fixed value, in the sense that any generated barcode must have a width equal to this.
            The width can be modified by changing the value of <see cref="!:Barcodes.IBarcodeSizer.DPI"/>, 
            <see cref="!:Barcodes.IBarcodeSizer.Mode"/>, and in the case of sizers implementing <see cref="!:Barcodes.IBarcodeModularSizer"/>,
            <see cref="!:Barcodes.IBarcodeModularSizer.Module"/>.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.IBarcodeSizer.Height">
            <summary>
            The height of the barcode.
            </summary>
            <value>The height of the barcode, in pixels.</value>
            <remarks>This typically represents the minimum height; a size passed to <see cref="!:Barcodes.IBarcodeGenerator.GenerateBarcode"/>
            may (in most cases) have any height greater than or equal to this value.  The height may be constrained by aspect ratio 
            requirements. If the sizer's generator's <see cref="!:Barcodes.IBarcodeGenerator.Flags"/>
            value includes the <see cref="!:Barcodes.BarcodeGeneratorFlags.HeightDependant"/> flag, this value is the one that will be used
            by <see cref="!:Barcodes.IBarcodeGenerator.GenerateBarcode"/>, regardless of the value passed in.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.IBarcodeSizer.ExtraHeight">
            <summary>
            The height of all items added to the barcode.
            </summary>
            <value>The height of all items added to the barcode, in pixels.</value>
            <remarks><para>This property is meant to be used to generate a desired barcode height.  To calculate the height
            of the size to pass to <see cref="!:Barcodes.IBarcodeGenerator.GenerateBarcode"/>, multiply the desired height
            (in inches) by the DPI, and add this number to it.  This is also an important number in aspect ratio 
            calculations; this number is subtracted from the barcode's specified height before the aspect ratio is
            checked, since the aspect ratio is meant for the barcode itself, not the extra text and guards that 
            surround it.</para><para>This property's value is potentially impacted by the value of <see cref="!:Barcodes.IBarcodeSizer.Mode"/>.
            The barcode render mode flags should be set before using this value.</para></remarks>
        </member>
        <member name="P:ActiveUp.WebControls.IBarcodeSizer.Size">
            <summary>
            The current size of the barcode.
            </summary>
            <value>The current size of the barcode.</value>
            <remarks>This varies given the current <see cref="!:Barcodes.IBarcodeSizer.DPI"/>, <see cref="!:Barcodes.IBarcodeSizer.Mode"/>,
            and (if implemented) <see cref="!:Barcodes.IBarcodeModularSizer.Module"/> values.  If the sizer's generator's <see cref="!:Barcodes.IBarcodeGenerator.Flags"/>
            value includes the <see cref="!:Barcodes.BarcodeGeneratorFlags.FixedDimensions"/> flag, this is the only valid size that may be
            passed to <see cref="!:Barcodes.IBarcodeGenerator.GenerateBarcode"/>.
            </remarks>
        </member>
        <member name="P:ActiveUp.WebControls.IBarcodeSizer.DPI">
            <summary>
            The current DPI (dots-per-inch) of the barcode.
            </summary>
            <value>The current DPI (dots-per-inch) of the barcode.</value>
            <remarks>
            This value represents the DPI that the barcode will be printed at.  This value defaults to zero, which represents "logical" mode.
            In "logical" mode, the generated barcode represents the relative sizing and positioning of barcode elements, but they are not
            necessarily in the proper size for printing.
            
            If the value is greater than zero, the barcode generator will generate a barcode using the specified DPI.
            </remarks>
            <exception cref="T:System.ArgumentException">When setting the DPI, the value specified was less than zero, or, in the case of
            barcodes with strict dimensional requirements (such as Postnet), the requirements cannot be met with the specified DPI.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.IBarcodeSizer.AspectRatioMin">
            <summary>
            The minimum ratio of height over width.
            </summary>
            <value>This is the minimum aspect ratio of height over width, or zero if there is no minimum.</value>
        </member>
        <member name="P:ActiveUp.WebControls.IBarcodeSizer.AspectRatioMax">
            <summary>
            The maximum ratio of height over width.
            </summary>
            <value>This is the maximum aspect ratio of height over width, or zero if there is no maximum.</value>
        </member>
        <member name="P:ActiveUp.WebControls.IBarcodeSizer.Mode">
            <summary>
            The rendering mode flags, which control the way the barcode is rendered.
            </summary>
            <value>The flags which control which aspects of the barcode are rendered.</value>
            <remarks>The particular flags available depends on the barcode being generated.  Any flags that are not available
            to a given barcode are ignored.  Some barcode encoders may set default flags, depending on the standard.  Some
            generators may set extra flags if certain flags are specified.</remarks>
        </member>
        <member name="M:ActiveUp.WebControls.IBarcodeSizer.IsValidSize(System.Drawing.Size)">
            <summary>
            Checks to see if a specified size is valid.
            </summary>
            <param name="size">A size to test for validity.</param>
            <returns>True if this size may be passed to <see cref="!:Barcodes.IBarcodeGenerator.GenerateBarcode"/>, false otherwise.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.IBarcodeSizer.GetValidSize(System.Drawing.Size)">
            <summary>
            Given a size, returns the largest valid size contained by that size.
            </summary>
            <param name="size">A maximum size, from which to find a valid size.</param>
            <returns>A valid size which may be passed to <see cref="!:Barcodes.IBarcodeGenerator.GenerateBarcode"/>.</returns>
            <exception cref="T:System.ArgumentException">The specified size is smaller than the minimum size in one or both dimensions.</exception>
        </member>
        <member name="T:ActiveUp.WebControls.IBarcodeModularSizer">
            <summary>
            Interface to the sizing controls of a modular barcode generator.  This interface includes a property to set modular width.
            </summary>
            <remarks>This interface contains three properties that directly affect the size of a generated barcode: they are
            <see cref="!:Barcodes.IBarcodeSizer.DPI"/>, <see cref="!:Barcodes.IBarcodeModularSizer.Module"/> and 
            <see cref="!:Barcodes.IBarcodeSizer.Mode"/>.</remarks>
            <seealso cref="!:Barcodes.IBarcodeSizer"/>
        </member>
        <member name="P:ActiveUp.WebControls.IBarcodeModularSizer.Module">
            <summary>
            Gets and sets module width of the barcode (in mils).
            </summary>
            <value>The module width of the barcode, in mils (1 mil is 1/1000 of an inch, or .0254 mm).</value>
            <remarks>In a modular barcode, the module width is the width of the narrowest bar.  The widths of spaces,
            wide bars, wide spaces, quiet zones, etc. are multiples of this module width.  Changing the module width of a barcode
            changes the total width of the barcode, as returned by <see cref="!:Barcodes.IBarcodeSizer.Width"/>.</remarks>
            <exception cref="T:System.ArgumentException">The specified module width is less than <see cref="!:Barcodes.IBarcodeModularSizer.MinimumModule"/>.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.IBarcodeModularSizer.MinimumModule">
            <summary>
            The minimum module width of the barcode.
            </summary>
            <value>The minimum module width of the barcode, in mils (1 mil is 1/1000 of an inch, or .0254 mm).</value>
            <remarks>The value of <see cref="!:Barcodes.IBarcodeModularSizer.Module"/> cannot be set lower than the value
            returned by this property.</remarks>
        </member>
        <member name="T:ActiveUp.WebControls.IBarcodeGenerator">
            <summary>
            Interface to the barcode generator.  This interface contains the <see cref="!:Barcodes.IBarcodeGenerator.GenerateBarcode"/> method,
            which generates the actual barcode.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.IBarcodeGenerator.Sizer">
            <summary>
            Gets the sizing controls for this barcode generator.
            </summary>
            <value>An object which controls the barcode's sizing.</value>
            <remarks>The returned object might also implement the <see cref="!:Barcodes.IBarcodeModularSizer"/>, if 
            the barcode generator generates a modular barcode.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.IBarcodeGenerator.Flags">
            <summary>
            Gets the flags that represent the capabilities of the generator and its corresponding sizer.
            </summary>
            <value>Flags representing the generator's (and sizer's) capabilities.</value>
        </member>
        <member name="M:ActiveUp.WebControls.IBarcodeGenerator.GenerateBarcode(System.Drawing.Size)">
            <summary>
            Generates a barcode of a specified size, using the data that has been set previously by its corresponding
            encoder.
            </summary>
            <param name="size">The size of the barcode to return.</param>
            <returns>A bitmap of the barcode, of the specified size.</returns>
            <exception cref="T:System.ArgumentException">The specified size is invalid.</exception>
            <exception cref="T:System.InvalidOperationException">The data that is to be encoded has not been set yet.</exception>
        </member>
        <member name="T:ActiveUp.WebControls.BarcodeEncoder">
            <summary>
            A base implementation of the <see cref="!:Barcodes.IBarcodeEncoder"/> interface. The base class for most
            of the encoders in this library.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.BarcodeEncoder.#ctor(ActiveUp.WebControls.BarcodeGenerator)">
            <summary>
            Constructs a BarcodeEncoder.
            </summary>
            <param name="generator">The generator that this encoder uses.</param>
        </member>
        <member name="P:ActiveUp.WebControls.BarcodeEncoder.Data">
            <summary>
            Gets or sets the data to be encoded into a barcode.
            </summary>
            <value>A byte array of data to be encoded.</value>
            <remarks>Not all encoders are capable of accepting byte arrays to be encoded.  This property will
            store a copy of the byte array specified.  The actual data encoded into the barcode might vary from
            the data provided, depending on the interpretation of the data provided, but the value returned
            by this property is the original byte array that it was set to.<br/>The default implementation of this
            property is to throw a <see cref="T:System.NotSupportedException"/>.  Derived classes must override
            this property if they support setting data to be encoded via byte array.</remarks>
            <exception cref="T:System.NotSupportedException">The encoder does not support setting the data
            to be encoded by byte array.</exception>
            <exception cref="T:System.ArgumentException">The data to be encoded is invalid, either by length
            or content.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.BarcodeEncoder.EncodedData">
            <summary>
            Gets the data sent to the generator, to be converted into a barcode.
            </summary>
            <value>A byte array of the data used by the generator, or null.</value>
            <remarks>This is used primarily for debugging purposes.  The default behavior of this property
            is to return the value of the <see cref="!:Barcodes.BarcodeGenerator.Data"/> property of the
            generator specified in the constructor, or set by <see cref="!:Barcodes.BarcodeEncoder.GeneratorInstance"/>, 
            or null if the generator has not been set.
            </remarks>
        </member>
        <member name="P:ActiveUp.WebControls.BarcodeEncoder.Text">
            <summary>
            Gets or sets the text to be encoded into a barcode.
            </summary>
            <value>A string of the data to be encoded.</value>
            <remarks>Not all encoders are capable of accepting strings to be encoded.  This property will
            store a copy of the string specified.  The actual data encoded into the barcode might vary from
            the data provided, depending on the interpretation of the data provided, but the value returned
            by this property is the original string that it was set to.<br/>The default implementation of this
            property is to throw a <see cref="T:System.NotSupportedException"/>.  Derived classes must override
            this property if they support setting data to be encoded via string.</remarks>
            <exception cref="T:System.NotSupportedException">The encoder does not support setting the data
            to be encoded by string.</exception>
            <exception cref="T:System.ArgumentException">The data to be encoded is invalid, either by length
            or content.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.BarcodeEncoder.Flags">
            <summary>
            Gets flags representing the capabilities of the encoder, as described in <see cref="!:Barcodes.BarcodeEncoderFlags"/>.
            </summary>
            <value>Flags representing the capabilities of the encoder.</value>
        </member>
        <member name="P:ActiveUp.WebControls.BarcodeEncoder.TextSymbols">
            <summary>
            Gets a string containing the symbols that can be encoded.
            </summary>
            <value>A string containing the symbols that can be encoded, or null.</value>
            <remarks>This return a string of encodable symbols, if the <see cref="!:Barcodes.BarcodeEncoderFlags.Text"/> flag
            is set, otherwise it returns null.  This property only acts as a guide, because the presence of symbols
            that are not in this string, does not necessarily cause encoding to fail.<br/>The default behavior is to return
            null.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.BarcodeEncoder.Generator">
            <summary>
            Gets the generator associated with this encoder.
            </summary>
            <value>The generator associated with this encoder, or null if a generator has not been set.</value>
        </member>
        <member name="P:ActiveUp.WebControls.BarcodeEncoder.GeneratorInstance">
            <summary>
            Gets or sets the generator associated with this encoder.
            </summary>
            <value>The generator associated with this encoder.</value>
            <remarks>This property differs from <see cref="!:Barcodes.BarcodeEncoder.Generator"/> because this both
            allows the generator to be set, and returns the generator as an instance of <see cref="!:Barcodes.BarcodeGenerator"/>
            instead of an instance of <see cref="!:Barcodes.IBarcodeGenerator"/>. It is for internal use by encoders that
            change their generator depending on their data (composite encoders).</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.BarcodeEncoder.Sizer">
            <summary>
            Gets the sizer associated with the generator, associated with this encoder.
            </summary>
            <value>The sizer associated with the generator associated with this encoder, or null if a generator has not been set.</value>
        </member>
        <member name="T:ActiveUp.WebControls.BarcodeSizer">
            <summary>
            A base implementation of the <see cref="!:Barcodes.IBarcodeSizer"/> interface.  This class provides a base
            for most of the sizer classes used internally in this library.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.BarcodeSizer.Width">
            <summary>
            The width of the barcode.
            </summary>
            <value>The width of the barcode.</value>
            <remarks>This is a fixed value, in the sense that any generated barcode must have a width equal to this.
            The width can be modified by changing the value of <see cref="!:Barcodes.IBarcodeSizer.DPI"/>, 
            <see cref="!:Barcodes.IBarcodeSizer.Mode"/>, and in the case of sizers implementing <see cref="!:Barcodes.IBarcodeModularSizer"/>,
            <see cref="!:Barcodes.IBarcodeModularSizer.Module"/>.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.BarcodeSizer.Height">
            <summary>
            The height of the barcode.
            </summary>
            <value>The height of the barcode.</value>
            <remarks>This typically represents the minimum height; a size passed to <see cref="!:Barcodes.IBarcodeGenerator.GenerateBarcode"/>
            may (in most cases) have any height greater than or equal to this value.  The height may be constrained by aspect ratio 
            requirements. If the sizer's generator's <see cref="!:Barcodes.IBarcodeGenerator.Flags"/>
            value includes the <see cref="!:Barcodes.BarcodeGeneratorFlags.HeightDependant"/> flag, this value is the one that will be used
            by <see cref="!:Barcodes.IBarcodeGenerator.GenerateBarcode"/>, regardless of the value passed in.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.BarcodeSizer.ExtraHeight">
            <summary>
            The height of all items added to the barcode.
            </summary>
            <value>The height of all items added to the barcode, in pixels.</value>
            <remarks><para>This property is meant to be used to generate a desired barcode height.  To calculate the height
            of the size to pass to <see cref="!:Barcodes.IBarcodeGenerator.GenerateBarcode"/>, multiply the desired height
            (in inches) by the DPI, and add this number to it.  This is also an important number in aspect ratio 
            calculations; this number is subtracted from the barcode's specified height before the aspect ratio is
            checked, since the aspect ratio is meant for the barcode itself, not the extra text and guards that 
            surround it.</para><para>This property's value is potentially impacted by the value of <see cref="!:Barcodes.IBarcodeSizer.Mode"/>.
            The barcode render mode flags should be set before using this value.</para></remarks>
        </member>
        <member name="P:ActiveUp.WebControls.BarcodeSizer.Size">
            <summary>
            The current size of the barcode.
            </summary>
            <value>The current size of the barcode, from <see cref="!:Barcodes.BarcodeSizer.Width"/> and <see cref="!:Barcodes.BarcodeSizer.Height"/>.</value>
            <remarks>This varies given the current <see cref="!:Barcodes.IBarcodeSizer.DPI"/>, <see cref="!:Barcodes.IBarcodeSizer.Mode"/>,
            and (if implemented) <see cref="!:Barcodes.IBarcodeModularSizer.Module"/> values.  If the sizer's generator's <see cref="!:Barcodes.IBarcodeGenerator.Flags"/>
            value includes the <see cref="!:Barcodes.BarcodeGeneratorFlags.FixedDimensions"/> flag, this is the only valid size that may be
            passed to <see cref="!:Barcodes.IBarcodeGenerator.GenerateBarcode"/>.  The return value of this property is derived
            from <see cref="!:Barcodes.BarcodeSizer.Width"/> and <see cref="!:Barcodes.BarcodeSizer.Height"/>.
            </remarks>
        </member>
        <member name="P:ActiveUp.WebControls.BarcodeSizer.DPI">
            <summary>
            The current DPI (dots-per-inch) of the barcode.
            </summary>
            <value>The current DPI (dots-per-inch) of the barcode.</value>
            <remarks>
            This value represents the DPI that the barcode will be printed at.  This value defaults to zero, which represents "logical" mode.
            In "logical" mode, the generated barcode represents the relative sizing and positioning of barcode elements, but they are not
            necessarily in the proper size for printing.
            <br/>
            If the value is greater than zero, the barcode generator will generate a barcode using the specified DPI.
            <br/>
            Derived classes can override the DPI property to capture changes to the DPI, in order to recalculate sizing information.
            </remarks>
            <exception cref="T:System.ArgumentException">When setting the DPI, the value specified was less than zero, or, in the case of
            barcodes with strict dimensional requirements (such as Postnet), the requirements cannot be met with the specified DPI.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.BarcodeSizer.AspectRatioMin">
            <summary>
            The minimum ratio of height over width.
            </summary>
            <value>This is the minimum aspect ratio of height over width, or zero if there is no minimum.</value>
            <remarks>The default return value is zero.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.BarcodeSizer.AspectRatioMax">
            <summary>
            The maximum ratio of height over width.
            </summary>
            <value>This is the maximum aspect ratio of height over width, or zero if there is no maximum.</value>
            <remarks>The default return value is zero.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.BarcodeSizer.Mode">
            <summary>
            The rendering mode flags, which control the way the barcode is rendered.
            </summary>
            <value>The flags which control which aspects of the barcode are rendered.</value>
            <remarks>The particular flags available depends on the barcode being generated.  Any flags that are not available
            to a given barcode are ignored.  Some barcode encoders may set default flags, depending on the standard.  Some
            generators may set extra flags if certain flags are specified.  The default value is <see cref="!:Barcodes.BarcodeRenderMode.None"/>.</remarks>
        </member>
        <member name="M:ActiveUp.WebControls.BarcodeSizer.IsValidSize(System.Drawing.Size)">
            <summary>
            Checks to see if a specified size is valid.
            </summary>
            <param name="size">A size to test for validity.</param>
            <returns>True if this size may be passed to <see cref="!:Barcodes.IBarcodeGenerator.GenerateBarcode"/>, false otherwise.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.BarcodeSizer.GetValidSize(System.Drawing.Size)">
            <summary>
            Given a size, returns the largest valid size contained by that size.
            </summary>
            <param name="size">A maximum size, from which to find a valid size.</param>
            <returns>A valid size which may be passed to <see cref="!:Barcodes.IBarcodeGenerator.GenerateBarcode"/>.</returns>
            <exception cref="T:System.ArgumentException">The specified size is smaller than the minimum size in one or both dimensions.</exception>
        </member>
        <member name="T:ActiveUp.WebControls.BarcodeGenerator">
            <summary>
            A base implementation of the <see cref="!:Barcodes.IBarcodeGenerator"/> interface.  This class provides the base
            for most of the generators in this library.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.BarcodeGenerator.Sizer">
            <summary>
            Returns the sizer used by this generator.
            </summary>
            <value>The sizer used by this generator.</value>
        </member>
        <member name="P:ActiveUp.WebControls.BarcodeGenerator.Data">
            <summary>
            Gets or sets the byte array of encoded data used by the generator to generate the barcode.
            </summary>
            <value>The byte array of encoded data.</value>
            <remarks>This data only has very basic validation to ensure that it does not cause exceptions
            when used (such as array overruns). It is not checked for validity.  The user should not set this
            directly, instead, it should be set by an encoder class.  This property does <b>not</b> make a
            copy of the byte array that is supplied to it, it only keeps a reference.  The generator's behavior
            if the underlying byre array is modified, is undefined.</remarks>
            <exception cref="T:System.ArgumentException">The specified byte array is invalid, in either length or content.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.BarcodeGenerator.Flags">
            <summary>
            Gets the flags representing the capabilities of the generator and corresponding sizer.
            </summary>
            <value>The capability flags of the generator and sizer.</value>
        </member>
        <member name="M:ActiveUp.WebControls.BarcodeGenerator.GenerateBarcode(System.Drawing.Size)">
            <summary>
            Generates a bitmap of the barcode, of the specified size and data.
            </summary>
            <param name="size">The size of barcode to generate.</param>
            <returns>A bitmap of the generated barcode.</returns>
            <exception cref="T:System.ArgumentException">The specified size is invalid.</exception>
            <exception cref="T:System.InvalidOperationException">The data that is to be encoded has not been set yet.</exception>
        </member>
        <member name="M:ActiveUp.WebControls.BarcodeGenerator.#ctor(ActiveUp.WebControls.IBarcodeSizer)">
            <summary>
            Constructs a new instance of BarcodeGenerator.
            </summary>
            <param name="sizer">The sizer to use.</param>
        </member>
        <member name="T:ActiveUp.WebControls.CodabarEncoder">
            <summary>
            An encoder that generates Codabar barcodes.
            </summary>
            <remarks>Codabar is a barcode symbology commonly used in blood banks, photo labs, etc.  It can encode
            the digits 0-9, the letters A, B, C, and D, which act as mandatory start and stop characters, and the symbols
            dash (-), dollar ($), colon (:), slash (/), dot (.), and plus (+).</remarks>
            <seealso cref="!:Barcodes.CodabarGenerator"/>
            <seealso cref="!:Barcodes.CodabarSizer"/>
        </member>
        <member name="P:ActiveUp.WebControls.CodabarEncoder.Data">
            <summary>
            Not supported.
            </summary>
            <remarks>Always throws a <see cref="T:System.NotSupportedException"/> exception.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.CodabarEncoder.Text">
            <summary>
            Gets or sets the text to be encoded into a barcode.
            </summary>
            <value>A string of the data to be encoded.</value>
            <remarks>A valid Codabar barcode must begin with an A, B, C, or D, and must end with an A, B, C, 
            or D, though the start and end do not have to be the same.  A, B, C, and D can only appear as the first
            and last characters.  The symbols between the start and stop symbols, can only be the following: 0-9,
            dash (-), dollar ($), colon (:), slash (/), dot (.), and plus (+).  The string is converted to uppercase
            when it is encoded, but the string returned by this property will have the same case as the string passed
            in.</remarks>
            <exception cref="T:System.NotSupportedException">The encoder does not support setting the data
            to be encoded by string.</exception>
            <exception cref="T:System.ArgumentException">The data to be encoded is invalid, either by length
            or content.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.CodabarEncoder.Flags">
            <summary>
            Gets flags that represent the encoder's capabilities.
            </summary>
            <value>Always returns <see cref="!:Barcodes.BarcodeEncoderFlags.Text"/>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.CodabarEncoder.TextSymbols">
            <summary>
            Symbols that are encodable by this encoder.
            </summary>
            <value>Always returns <c>"0123456789-$:/.+ABCDabcd"</c>.</value>
            <remarks>The encoder can only encode these symbols.  Passing in a symbol that is not in this string
            will cause the encoder to fail.  A, B, C, and D are start and stop symbols.  They can and must appear only at
            the beginning and end of the data to be encoded..</remarks>
        </member>
        <member name="M:ActiveUp.WebControls.CodabarEncoder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:Barcodes.CodabarEncoder"/> class.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.CodabarSizer">
            <summary>
            That class that controls Codabar barcode sizing.
            </summary>
            <seealso cref="!:Barcodes.CodabarGenerator"/>
            <seealso cref="!:Barcodes.CodabarEncoder"/>
        </member>
        <member name="P:ActiveUp.WebControls.CodabarSizer.ModuleWidth">
            <summary>
            The module width of the barcode, in pixels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.CodabarSizer.GuardWidth">
            <summary>
            The guard (quiet) zone width, in pixels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.CodabarSizer.ModuleLength">
            <summary>
            Gets and sets the total number of modules used by the generator.
            </summary>
            <value>The total number of modules in the barcode.</value>
            <remarks>This property is used by <see cref="!:Barcodes.CodabarGenerator"/> to inform it
            of the size of the encoded barcode, since the module length of individual symbols varies
            depending on the symbol.  It should not be set directly.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.CodabarSizer.DPI">
            <summary>
            The current DPI (dots-per-inch) of the barcode.
            </summary>
            <value>The current DPI (dots-per-inch) of the barcode.</value>
            <remarks>
            This value represents the DPI that the barcode will be printed at.  This value defaults to zero, which represents "logical" mode.
            In "logical" mode, the generated barcode represents the relative sizing and positioning of barcode elements, but they are not
            necessarily in the proper size for printing.
            
            If the value is greater than zero, the barcode generator will generate a barcode using the specified DPI.
            </remarks>
            <exception cref="T:System.ArgumentException">When setting the DPI, the value specified was less than zero.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.CodabarSizer.WidthWithoutGuards">
            <summary>
            The total width of the barcode, excluding any guard (quiet) zones, in pixels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.CodabarSizer.Width">
            <summary>
            The total width of the barcode, in pixels, given the current DPI and module width.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.CodabarSizer.FontHeight">
            <summary>
            Gets the font height used for numbering the barcode.
            </summary>
            <value>The font height, in pixels.</value>
        </member>
        <member name="P:ActiveUp.WebControls.CodabarSizer.FontHeightAddon">
            <summary>
            The extra space added to the bottom of the barcode, for space to number the barcode.
            </summary>
            <value>The extra space, in pixels, at the bottom of the barcode.</value>
        </member>
        <member name="P:ActiveUp.WebControls.CodabarSizer.Height">
            <summary>
            The minimum height of the barcode, in pixels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.CodabarSizer.ExtraHeight">
            <summary>
            The height of all items added to the barcode.
            </summary>
            <value>The height of all items added to the barcode, in pixels.</value>
            <remarks><para>For Codabar barcodes, the only extra height comes from the text at the bottom of the barcode.</para>
            <para>This property is meant to be used to generate a desired barcode height.  To calculate the height
            of the size to pass to <see cref="!:Barcodes.IBarcodeGenerator.GenerateBarcode"/>, multiply the desired height
            (in inches) by the DPI, and add this number to it.</para><para>This property's value is potentially impacted by the value of <see cref="!:Barcodes.IBarcodeSizer.Mode"/>.
            The barcode render mode flags should be set before using this value.</para></remarks>
        </member>
        <member name="P:ActiveUp.WebControls.CodabarSizer.Module">
            <summary>
            Gets or sets the desired module width, in mils.
            </summary>
            <value>The current desired module width, in mils (1 mil is 1/1000th of an inch, .0254 mm).  The default value is 10 mils (.25 mm).</value>
            <remarks>The barcode generator will generate a barcode with a module width that is as close as
            possible to, but not smaller than, the specified module width, within the limits of the 
            specified DPI.  It cannot be set lower than the value returned by <see cref="!:Barcodes.CodabarSizer.MinimumModule"/>.</remarks>
            <exception cref="T:System.ArgumentException">The specified module width is smaller than 
            <see cref="!:Barcodes.CodabarSizer.MinimumModule"/>.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.CodabarSizer.MinimumModule">
            <summary>
            Gets the minimum module width, in mils.
            </summary>
            <value>The minimum module width, in mils. (1 mil is 1/1000th of an inch, or .025mm). Always returns 7.5 mils (.19 mm).</value>
        </member>
        <member name="M:ActiveUp.WebControls.CodabarSizer.IsValidSize(System.Drawing.Size)">
            <summary>
            Checks to see if a specified size is valid.
            </summary>
            <param name="size">A size to test for validity.</param>
            <returns>True if this size may be passed to <see cref="!:Barcodes.CodabarGenerator.GenerateBarcode"/>, false otherwise.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.CodabarSizer.GetValidSize(System.Drawing.Size)">
            <summary>
            Given a size, returns the largest valid size contained by that size.
            </summary>
            <param name="size">A maximum size, from which to find a valid size.</param>
            <returns>A valid size which may be passed to <see cref="!:Barcodes.CodabarGenerator.GenerateBarcode"/>.</returns>
            <exception cref="T:System.ArgumentException">The specified size is smaller than the minimum size in one or both dimensions.</exception>
        </member>
        <member name="T:ActiveUp.WebControls.CodabarGenerator">
            <summary>
            A generator that generates Codabar barcodes.
            </summary>
            <seealso cref="!:Barcodes.CodabarEncoder"/>
            <seealso cref="!:Barcodes.CodabarSizer"/>
        </member>
        <member name="P:ActiveUp.WebControls.CodabarGenerator.Data">
            <summary>
            Gets or sets the byte array of encoded data used by the generator to generate the barcode.
            </summary>
            <value>The byte array of encoded data.</value>
            <remarks>This data only has very basic validation to ensure that it does not cause exceptions
            when used (such as array overruns). It is not checked for validity.  The user should not set this
            directly, instead, it should be set by an encoder class.  This property does <b>not</b> make a
            copy of the byte array that is supplied to it, it only keeps a reference.  The generator's behavior
            if the underlying byre array is modified, is undefined.</remarks>
            <exception cref="T:System.ArgumentException">The specified byte array is invalid, in either length or content.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.CodabarGenerator.Flags">
            <summary>
            Gets the barcode generator capability flags.
            </summary>
            <value>Always returns <see cref="!:Barcodes.BarcodeGeneratorFlags.Linear"/>|<see cref="!:Barcodes.BarcodeGeneratorFlags.VariableLength"/>.</value>
        </member>
        <member name="M:ActiveUp.WebControls.CodabarGenerator.GenerateBarcode(System.Drawing.Size)">
            <summary>
            Generates a Codabar barcode of a specified size, using the data that has been set previously by its corresponding
            encoder.
            </summary>
            <param name="size">The size of the barcode to return.</param>
            <returns>A bitmap of the barcode, of the specified size.</returns>
            <exception cref="T:System.ArgumentException">The specified size is invalid.</exception>
            <exception cref="T:System.InvalidOperationException">The data that is to be encoded has not been set yet.</exception>
        </member>
        <member name="M:ActiveUp.WebControls.CodabarGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:Barcodes.CodabarGenerator"/> class.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Code11Encoder">
            <summary>
            An encoder that generates Code 11 barcodes.
            </summary>
            <remarks>Code 11 is commonly used in telecommunications equipment; it is capable of
            encoding the digits 0-9 and the dash (-) symbol.  It is not a secure symbology, in the sense
            that it is possible for a printing error to convert one valid symbol into another,
            so the use of one or two check digits is recommended.  If the <see cref="!:Barcodes.Code11Encoder.AppendChecksum"/>
            property is set to true, the encoder will append one or two check digits, depending
            on the length of the data.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.Code11Encoder.Text">
            <summary>
            Gets or sets the data to be encoded by a barcode, as a text string.
            </summary>
            <value>The text to be encoded.</value>
            <remarks>Code 11 can only encode strings containing digits and dashes (-).</remarks>
            <exception cref="T:System.ArgumentException">The data supplied to the encoder contains
            characters other than 0-9 and dash (-).  The <see cref="P:System.ArgumentException.ParamName"/>
            property will be set to "Digit".</exception>
        </member>
        <member name="P:ActiveUp.WebControls.Code11Encoder.Flags">
            <summary>
            Gets flags that represent the encoder's capabilities.
            </summary>
            <value>Always returns <see cref="!:Barcodes.BarcodeEncoderFlags.Text"/>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Code11Encoder.TextSymbols">
            <summary>
            Symbols that are encodable by this encoder.
            </summary>
            <value>Always returns <c>"0123456789-"</c>.</value>
            <remarks>This encoder can only encode digits and the dash (-) symbol.  If any other symbols are passed in, the encoder will fail.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.Code11Encoder.AppendChecksum">
            <summary>
            Gets or sets whether checksum digits should be appended to the encoded data.
            </summary>
            <value>True if checksum digits should be appended, false otherwise.</value>
            <remarks><para>If this is set to true, the encoder will append one checksum
            digit if the data length is 9 digits or less, and two checksum characters
            if the length is ten or more.</para><para>The first digit appended is called
            the 'C' digit; it is calculated by weighting the data digits, from right to left,
            with a value of 1 for the rightmost digit, two for the next digit, etc. After the digits are weighted, they are summed, and the sum modulo 11
            is used as the first check digit.</para><para>The second check digit, if used,
            is called the 'K' digit.  Its calculation is similar to the 'C' digit, except the 'C'
            digit is the included as the first digit (weighted at 1), and the check digit is the remainder
            modulo 10 instead of modulo 9.</para><para>If the value of this property
            is changed after the data has been set, the data will be re-encoded to include or exclude
            the check digits.</para></remarks>
        </member>
        <member name="M:ActiveUp.WebControls.Code11Encoder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:Barcodes.Code11Encoder"/> class.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Code39Encoder">
            <summary>
            An encoder that generates Code 39 barcodes.
            </summary>
            <remarks><para>Code 39 is a very commonly used barcode, found in many fields.  It's standard form
            can encode the symbols 0-9, A-Z, as well as dash (-), dot (.), space ( ), dollar ($),
            slash (/), plus (+), and percent (%). It also has an extended form, which is capable of encoding
            all 128 of the lower ASCII symbols.  The encoder will not automatically switch to the
            extended encoding if extended characters are detected; this must be enabled by setting the
            <see cref="!:Barcodes.Code39Encoder.UseExtended"/> to true.</para><para>Code 39 barcodes don't normally require
            a checksum digit, but if the <see cref="!:Barcodes.Code39Encoder.AddChecksum"/> property is
            set to true, the encoder will automatically add a mod 43 checksum digit.</para></remarks>
            <seealso cref="!:Barcodes.Code39Encoder.UseExtended"/>
            <seealso cref="!:Barcodes.Code39Encoder.AddChecksum"/>
            <seealso cref="!:Barcodes.Code39Generator"/>
            <seealso cref="!:Barcodes.Code39Sizer"/>
        </member>
        <member name="P:ActiveUp.WebControls.Code39Encoder.UseExtended">
            <summary>
            Gets or sets whether the encoder should detect and encode characters of the full ASCII set
            </summary>
            <value>True if extended characters will be encoded, false otherwise. Defaults to false.</value>
            <remarks>Changing this property's value does not re-encode text or data that was set before
            the property's value was set.  You must set this property before setting the text or data.
            If this property is false, and extended characters are detected, the encoder will throw an
            exception.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.Code39Encoder.AddChecksum">
            <summary>
            Gets or sets whether the encoder should append a check digit.
            </summary>
            <value>True if a check digit should be appended, false otherwise.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Code39Encoder.Data">
            <summary>
            Gets or sets the data to be encoded into a barcode.
            </summary>
            <value>A byte array of data to be encoded.</value>
            <remarks>The byte values in the byte array are encoded as their corresponding ASCII characters.
            If any byte contains a value
            above 127, an <see cref="T:System.ArgumentException"/> will be thrown.  Likewise, if the byte array contains
            values outside of the standard encoding system (0-9, A-Z, -. $/+%), and <see cref="!:Barcodes.Code39Encoder.UseExtended"/>
            is false, an <see cref="T:System.ArgumentException"/> will be thrown.</remarks>
            <exception cref="T:System.ArgumentException">The data to be encoded contains values above 127,
            or contains extended characters and <see cref="!:Barcodes.Code39Encoder.UseExtended"/> is false.
            The <see cref="P:System.ArgumentException.ParamName"/>
            property will contain the values "Invalid" or "Extended", respectively.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.Code39Encoder.Text">
            <summary>
            Gets or sets the data to be encoded by a barcode, as a text string.
            </summary>
            <value>The text to be encoded.</value>
            <remarks>Code 39 can encode the entire lower ASCII set (0-127), but it will fail
            if <see cref="!:Barcodes.Code39Encoder.UseExtended"/> is false and a character other than
            (0-9, A-Z, and "-. $/+%"), is encountered.</remarks>
            <exception cref="T:System.ArgumentException">The string to be encoded contains values outside the lower ASCII set,
            or contains extended characters and <see cref="!:Barcodes.Code39Encoder.UseExtended"/> is false.
            The <see cref="P:System.ArgumentException.ParamName"/>
            property will contain the values "Invalid" or "Extended", respectively.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.Code39Encoder.TextSymbols">
            <summary>
            Returns the list of standard (non-extended) Code 39 characters.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Code39Encoder.Flags">
            <summary>
            Gets flags that represent the encoder's capabilities.
            </summary>
            <value>Always returns <see cref="!:Barcodes.BarcodeEncoderFlags.ASCII"/>|<see cref="!:Barcodes.BarcodeEncoderFlags.Data"/>.</value>
        </member>
        <member name="M:ActiveUp.WebControls.Code39Encoder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:Barcodes.Code39Encoder"/> class.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Code93Encoder">
            <summary>
            An encoder that generates Code 93 barcodes.
            </summary>
            <remarks><para>Code 93 is a continuous variant of Code 39.  It's standard form
            can encode the symbols 0-9, A-Z, as well as dash (-), dot (.), space ( ), dollar ($),
            slash (/), plus (+), and percent (%), as with Code 39. It also has an extended form, which is capable of encoding
            all 128 of the lower ASCII symbols, but unlike Code 39, the extended form is easily integrated into
            barcodes and does not require a separate property to be set.</para><para>Code 93 barcodes 
            require two checksum digits; the encoder will automatically add two mod-47 based checksum digits.</para></remarks>
            <seealso cref="!:Barcodes.Code93Generator"/>
            <seealso cref="!:Barcodes.Code93Sizer"/>
        </member>
        <member name="P:ActiveUp.WebControls.Code93Encoder.Data">
            <summary>
            Gets or sets the data to be encoded into a barcode.
            </summary>
            <value>A byte array of data to be encoded.</value>
            <remarks>The byte values in the byte array are encoded as their corresponding ASCII 
            characters. If any byte contains a value above 127, an <see cref="T:System.ArgumentException"/> 
            will be thrown.</remarks>
            <exception cref="T:System.ArgumentException">The data to be encoded contains values above 127.
            The <see cref="P:System.ArgumentException.ParamName"/>
            property will contain the value "Invalid".</exception>
        </member>
        <member name="P:ActiveUp.WebControls.Code93Encoder.Text">
            <summary>
            Gets or sets the data to be encoded by a barcode, as a text string.
            </summary>
            <value>The text to be encoded.</value>
            <remarks>Code 39 can encode the entire lower ASCII set (0-127).</remarks>
            <exception cref="T:System.ArgumentException">The data to be encoded contains values outside the lower ASCII set.
            The <see cref="P:System.ArgumentException.ParamName"/>
            property will contain the value "Invalid".</exception>
        </member>
        <member name="P:ActiveUp.WebControls.Code93Encoder.Flags">
            <summary>
            Gets flags that represent the encoder's capabilities.
            </summary>
            <value>Always returns <see cref="!:Barcodes.BarcodeEncoderFlags.ASCII"/>|<see cref="!:Barcodes.BarcodeEncoderFlags.Data"/>.</value>
        </member>
        <member name="M:ActiveUp.WebControls.Code93Encoder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:Barcodes.Code93Encoder"/> class.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Code128EncodingMode">
            <summary>
            These Code128 encoding modes control the codeset used to encode data.
            </summary>
            <remarks>The encoding mode must be passed as a parameter to the <see cref="!:Barcodes.Code128Encoder(Code128EncodingMode)"/> constructor.
            It cannot be set after the class has been initialized.</remarks>
        </member>
        <member name="F:ActiveUp.WebControls.Code128EncodingMode.Auto">
            <summary>
            The encoder will use all three encoding sets, switching between the three to produce the shortest possible barcode.
            This is the default mode and should be used unless there is a reason to only encode in one encoding.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Code128EncodingMode.A">
            <summary>
            The encoder will only use the A encoding set. This set can encode any valid ASCII data, but may result in a
            longer barcode than using Auto.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Code128EncodingMode.B">
            <summary>
            The encoder will only use the B encoding set. This set can encode any valid ASCII data, but may result in a
            longer barcode than using Auto.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Code128EncodingMode.C">
            <summary>
            The encoder will only use the C encoding set. This set can only encode strings composed of an even number of
            digits, as well as the FNC1 function code.  Passing any other data will result in an exception when encoding.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Code128Encoder">
            <summary>
            An encoder to encode data into Code128.
            </summary>
            <remarks>Code128 is a widely used barcode symbology, capable of encoding the entire lower ASCII set (0-127),
            as well as four control characters (FNC1-FNC4).  Code128 has three separate encoding styles (A, B, and C),
            and can switch between them in the same barcode.  Set A encodes ASCII characters 0-95, SetB encodes ASCII
            characters 32-127, and set C encodes all pairs of digits from 00 to 99.  Code128 is the basis for 
            EAN-128, and is used by <see cref="!:Barcodes.EAN128Encoder"/>, as well as HIBC and other topologies.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.Code128Encoder.EncodingMode">
            <summary>
            Gets the encoding mode that the encoder is using.
            </summary>
            <value>The encoding mode that the encoder is using.</value>
            <remarks>The encoding mode can only be set by passing it to the <see cref="!:Barcodes.Code128Encoder(Code128EncodingMode)"/> constructor.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.Code128Encoder.UseFunctionEscapes">
            <summary>
            Gets or sets whether the text encoder recognizes function escape sequences.
            </summary>
            <value>True if the encoder will recognize function escapes, false otherwise.</value>
            <remarks>For information about function escape sequences, see <see cref="!:Barcodes.Code128Encoder.Text"/>.
            Note that this property must be set <i>before</i> setting <see cref="!:Barcodes.Code128Encoder.Text"/>.  If the value
            is changed after <see cref="!:Barcodes.Code128Encoder.Text"/> is set, the data will not be reencoded with
            the new value.</remarks>
            <seealso cref="!:Barcodes.Code128Encoder.Text"/>
        </member>
        <member name="P:ActiveUp.WebControls.Code128Encoder.Data">
            <summary>
            Gets or sets the data to be encoded into a barcode.
            </summary>
            <value>A byte array of data to be encoded.</value>
            <remarks>The byte values in the byte array are encoded as their corresponding ASCII characters.
            The function codes FNC1-FNC4 are mapped to 128-131 respectively. If any byte contains a value
            above 131, an <see cref="T:System.ArgumentException"/> is thrown.  Likewise, if the byte array is unencodable
            given the coding method (<see cref="!:Barcodes.Code128EncodingMode"/>) specified in the constructor.</remarks>
            <exception cref="T:System.ArgumentException">The data to be encoded contains values above 131,
            or the data cannot be encoded given the current encoding method.  The <see cref="P:System.ArgumentException.ParamName"/>
            property will contain the values "Invalid" or "Method", respectively.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.Code128Encoder.Text">
            <summary>
            Gets or sets the text to be encoded into a barcode.
            </summary>
            <value>A string of the data to be encoded.</value>
            <remarks>While the text string encoding method does not natively support encoding function codes, however,
            if the <see cref="!:Barcodes.Code128Encoder.UseFunctionEscapes"/> property is set to true, the encoder
            will interpret the following character escape sequences, as listed:
            <para>
            <list type="table">
            <listheader><term>Sequence</term><description>Interpretation</description></listheader>
            <item><term>%1</term><description>FNC1</description></item>
            <item><term>%2</term><description>FNC1</description></item>
            <item><term>%3</term><description>FNC1</description></item>
            <item><term>%4</term><description>FNC1</description></item>
            <item><term>%%</term><description>%</description></item>
            </list>
            </para><para>Note that the encoder will only recognize these sequences. Any other sequence
            involving percent signs will be passed through as-is.</para></remarks>
            <exception cref="T:System.ArgumentException">The text contains non-ASCII or high-ASCII (above 127) characters,
            or the data cannot be encoded given the current encoding method.  The <see cref="P:System.ArgumentException.ParamName"/>
            property will contain the values "Invalid" or "Method", respectively.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.Code128Encoder.Flags">
            <summary>
            Gets flags that represent the encoder's capabilities.
            </summary>
            <value>Always returns <see cref="!:Barcodes.BarcodeEncoderFlags.ASCII"/>|<see cref="!:Barcodes.BarcodeEncoderFlags.Data"/>.</value>
        </member>
        <member name="M:ActiveUp.WebControls.Code128Encoder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:Barcodes.Code128Encoder"/> class, with the encoding mode set to <see cref="!:Barcodes.Code128EncodingMode.Auto"/>.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Code128Encoder.#ctor(ActiveUp.WebControls.Code128EncodingMode)">
            <summary>
            Initializes a new instance of the <see cref="!:Barcodes.Code128Encoder"/> class, with the specified encoding mode.
            </summary>
            <param name="mode">The encoding mode to use.</param>
        </member>
        <member name="T:ActiveUp.WebControls.CodeNSizer">
            <summary>
            Abstract class that implements the common functionality of the Code N sizers.
            </summary>
            <seealso cref="!:Barcodes.Code128Encoder"/>
            <seealso cref="!:Barcodes.Code128Generator"/>
        </member>
        <member name="P:ActiveUp.WebControls.CodeNSizer.MinimumHeight25">
            <summary>
            Returns the number of pixels in 1/4th of an inch (6.35 mm), given the current DPI.
            </summary>
            <remarks>This value is used as a minimum height by most of the Code N barcodes.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.CodeNSizer.ModuleWidth">
            <summary>
            The module width of the barcode, in pixels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.CodeNSizer.GuardWidth">
            <summary>
            The guard (quiet) zone width, in pixels.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.CodeNSizer.CalculateSizes">
            <summary>
            Method called to calculate the various sizes when DPI or Module Width is changed..
            </summary>
            <remarks>This mathod is called when <see cref="!:Barcodes.CodeNSizer.DPI"/> or <see cref="!:Barcodes.CodeNSizer.Module"/> is changed,
            so that the derived class can set the <see cref="!:Barcodes.CodeNSizer.ModuleWidth"/>, <see cref="!:Barcodes.CodeNSizer.GuardWidth"/>,
            and <see cref="!:Barcodes.CodeNSizer.MinimumHeight25"/> properties, as well as any other properties they need
            to set on their own.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.CodeNSizer.Length">
            <summary>
            The length of the data being encoded.
            </summary>
            <remarks>This property is provided for derived classes to recieve information about the encoded
            data, from its corresponding generator.  The property is not otherwise used by <see cref="!:Barcodes.CodeNSizer"/>,
            and its usage is left to derived classes and their corresponding generators.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.CodeNSizer.DPI">
            <summary>
            The current DPI (dots-per-inch) of the barcode.
            </summary>
            <value>The current DPI (dots-per-inch) of the barcode.</value>
            <remarks>
            This value represents the DPI that the barcode will be printed at.  This value defaults to zero, which represents "logical" mode.
            In "logical" mode, the generated barcode represents the relative sizing and positioning of barcode elements, but they are not
            necessarily in the proper size for printing.
            
            If the value is greater than zero, the barcode generator will generate a barcode using the specified DPI.
            </remarks>
            <exception cref="T:System.ArgumentException">When setting the DPI, the value specified was less than zero.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.CodeNSizer.WidthWithoutGuards">
            <summary>
            The total width of the barcode, excluding any guard (quiet) zones, in pixels.
            </summary>
            <remarks>This method is overridden in derived classes, and must return the total width of the
            barcode data, given the current value of <see cref="!:Barcodes.CodeNSizer.ModuleWidth"/>. The
            <see cref="!:Barcodes.CodeNSizer.Length"/> property is included so that the derived class can 
            recieve information from its corresponding generator.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.CodeNSizer.Width">
            <summary>
            The total width of the barcode, in pixels, given the current DPI and module width.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.CodeNSizer.Height">
            <summary>
            The minimum height of the barcode, in pixels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.CodeNSizer.ExtraHeight">
            <summary>
            The height of all items added to the barcode.
            </summary>
            <value>The height of all items added to the barcode, in pixels.</value>
            <remarks><para>For Code N barcodes, the only extra height comes from the text at the bottom of the barcode.</para>
            <para>This property is meant to be used to generate a desired barcode height.  To calculate the height
            of the size to pass to <see cref="!:Barcodes.IBarcodeGenerator.GenerateBarcode"/>, multiply the desired height
            (in inches) by the DPI, and add this number to it.  It is also important in aspect ratio calculations, as this
            value will be subtracted from the size passed to the generator, before checking the aspect ratio.</para>
            <para>This property's value is potentially impacted by the value of <see cref="!:Barcodes.IBarcodeSizer.Mode"/>.
            The barcode render mode flags should be set before using this value.</para></remarks>
        </member>
        <member name="P:ActiveUp.WebControls.CodeNSizer.Module">
            <summary>
            Gets or sets the desired module width, in mils.
            </summary>
            <value>The current desired module width, in mils (1 mil is 1/1000th of an inch, .0254 mm).  The default value is 10 mils (.33 mm).</value>
            <remarks>The barcode generator will generate a barcode with a module width that is as close as
            possible to, but not smaller than, the specified module width, within the limits of the 
            specified DPI.  It cannot be set lower than the value returned by the <see cref="!:Barcodes.CodeNSizer.MinimumModule"/>
            implementation of the corresponding derived class.</remarks>
            <exception cref="T:System.ArgumentException">The specified module width is smaller than 
            <see cref="!:Barcodes.CodeNSizer.MinimumModule"/>.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.CodeNSizer.MinimumModule">
            <summary>
            Gets the minimum module width, in mils.
            </summary>
            <value>The minimum module width, in mils. (1 mil is 1/1000th of an inch, or .025mm)</value>
        </member>
        <member name="M:ActiveUp.WebControls.CodeNSizer.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="!:Barcodes.CodeNSizer"/> class.
            </summary>
            <param name="defaultModule">The default module width.  This should be greater than the
            value returned by the derived class's <see cref="!:Barcodes.CodeNSizer.MinimumModule"/>
            property, but this is not checked.</param>
        </member>
        <member name="M:ActiveUp.WebControls.CodeNSizer.IsValidSize(System.Drawing.Size)">
            <summary>
            Checks to see if a specified size is valid.
            </summary>
            <param name="size">A size to test for validity.</param>
            <returns>True if this size may be passed to <see cref="!:Barcodes.CodeNGenerator.GenerateBarcode"/>, false otherwise.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.CodeNSizer.GetValidSize(System.Drawing.Size)">
            <summary>
            Given a size, returns the largest valid size contained by that size.
            </summary>
            <param name="size">A maximum size, from which to find a valid size.</param>
            <returns>A valid size which may be passed to <see cref="!:Barcodes.CodeNGenerator.GenerateBarcode"/>.</returns>
            <exception cref="T:System.ArgumentException">The specified size is smaller than the minimum size in one or both dimensions.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.CodeNSizer.FontHeight">
            <summary>
            Gets the font height used for numbering the barcode.
            </summary>
            <value>The font height, in pixels.</value>
        </member>
        <member name="P:ActiveUp.WebControls.CodeNSizer.FontHeightAddon">
            <summary>
            The extra space added to the bottom of the barcode, for space to number the barcode.
            </summary>
            <value>The extra space, in pixels, at the bottom of the barcode.</value>
        </member>
        <member name="T:ActiveUp.WebControls.Code11Sizer">
            <summary>
            A class that controls the sizing of Code 11 barcodes.
            </summary>
            <seealso cref="!:Barcodes.Code11Encoder"/>
            <seealso cref="!:Barcodes.Code11Generator"/>
        </member>
        <member name="M:ActiveUp.WebControls.Code11Sizer.CalculateSizes">
            <summary>
            Calculates the barcode sizes when the DPI or Module width is changed.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Code11Sizer.WidthWithoutGuards">
            <summary>
            The total width of the barcode, excluding any guard (quiet) zones, in pixels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Code11Sizer.Height">
            <summary>
            The minimum height of the barcode, in pixels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Code11Sizer.ExtraHeight">
            <summary>
            The height of all items added to the barcode.
            </summary>
            <value>The height of all items added to the barcode, in pixels.</value>
            <remarks><para>For Code 11 barcodes, the only extra height comes from the text at the bottom of the barcode.</para>
            <para>This property is meant to be used to generate a desired barcode height.  To calculate the height
            of the size to pass to <see cref="!:Barcodes.IBarcodeGenerator.GenerateBarcode"/>, multiply the desired height
            (in inches) by the DPI, and add this number to it.  It is also important in aspect ratio calculations, as this
            value will be subtracted from the size passed to the generator, before checking the aspect ratio.</para>
            <para>This property's value is potentially impacted by the value of <see cref="!:Barcodes.IBarcodeSizer.Mode"/>.
            The barcode render mode flags should be set before using this value.</para></remarks>
        </member>
        <member name="P:ActiveUp.WebControls.Code11Sizer.AspectRatioMin">
            <summary>
            Gets the minimum aspect ratio (height/width) of the barcode, not including the numbering.
            </summary>
            <value>This always returns a value of 0.15 (3/20).</value>
        </member>
        <member name="P:ActiveUp.WebControls.Code11Sizer.MinimumModule">
            <summary>
            Gets the minimum module width, in mils.
            </summary>
            <value>The minimum module width, in mils. (1 mil is 1/1000th of an inch, or .025mm). Always returns 7.5 mils (.19 mm).</value>
        </member>
        <member name="M:ActiveUp.WebControls.Code11Sizer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:Barcodes.Code11Sizer"/> class.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Code39Sizer">
            <summary>
            A class that controls the sizing of Code 39 barcodes.
            </summary>
            <remarks>This sizer is slightly different from the other Code N sizers, since Code39 uses
            two different bar widths, instead of specific modular bar widths.</remarks>
            <seealso cref="!:Barcodes.Code39Encoder"/>
            <seealso cref="!:Barcodes.Code39Generator"/>
        </member>
        <member name="P:ActiveUp.WebControls.Code39Sizer.NarrowModuleWidth">
            <summary>
            Gets the width of narrow bars, in pixels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Code39Sizer.WideModuleWidth">
            <summary>
            Gets the width of wide bars, in pixels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Code39Sizer.GapWidth">
            <summary>
            Gets the width of spaces, in pixels.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Code39Sizer.CalculateSizes">
            <summary>
            Calculates the sizes used by the Code 39 generator, when the DPI or Module Width is changed.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Code39Sizer.WidthWithoutGuards">
            <summary>
            The total width of the barcode, excluding any guard (quiet) zones, in pixels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Code39Sizer.Height">
            <summary>
            The minimum height of the barcode, in pixels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Code39Sizer.ExtraHeight">
            <summary>
            The height of all items added to the barcode.
            </summary>
            <value>The height of all items added to the barcode, in pixels.</value>
            <remarks><para>For Code 39 barcodes, the only extra height comes from the text at the bottom of the barcode.</para>
            <para>This property is meant to be used to generate a desired barcode height.  To calculate the height
            of the size to pass to <see cref="!:Barcodes.IBarcodeGenerator.GenerateBarcode"/>, multiply the desired height
            (in inches) by the DPI, and add this number to it.  It is also important in aspect ratio calculations, as this
            value will be subtracted from the size passed to the generator, before checking the aspect ratio.</para>
            <para>This property's value is potentially impacted by the value of <see cref="!:Barcodes.IBarcodeSizer.Mode"/>.
            The barcode render mode flags should be set before using this value.</para></remarks>
        </member>
        <member name="P:ActiveUp.WebControls.Code39Sizer.AspectRatioMin">
            <summary>
            Gets the minimum aspect ratio (height/width) of the barcode, not including the numbering.
            </summary>
            <value>This always returns a value of 0.15 (3/20).</value>
        </member>
        <member name="P:ActiveUp.WebControls.Code39Sizer.MinimumModule">
            <summary>
            Gets the minimum module width, in mils.
            </summary>
            <value>The minimum module width, in mils. (1 mil is 1/1000th of an inch, or .025mm). Always returns 6.7 mils (.17 mm).</value>
        </member>
        <member name="M:ActiveUp.WebControls.Code39Sizer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:Barcodes.Code39Sizer"/> class.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Code93Sizer">
            <summary>
            A class that controls the sizing of Code 93 barcodes.
            </summary>
            <seealso cref="!:Barcodes.Code93Encoder"/>
            <seealso cref="!:Barcodes.Code93Generator"/>
        </member>
        <member name="M:ActiveUp.WebControls.Code93Sizer.CalculateSizes">
            <summary>
            Calculates the barcode sizes when the DPI or Module width is changed.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Code93Sizer.WidthWithoutGuards">
            <summary>
            The total width of the barcode itself, excluding any guard (quiet) zones, in pixels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Code93Sizer.MinimumModule">
            <summary>
            Gets the minimum module width, in mils.
            </summary>
            <value>The minimum module width, in mils. (1 mil is 1/1000th of an inch, or .025mm). Always returns 6.7 mils (.17 mm).</value>
        </member>
        <member name="M:ActiveUp.WebControls.Code93Sizer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:Barcodes.Code93Sizer"/> class.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Code128Sizer">
            <summary>
            A class that controls the sizing of Code 128 barcodes.
            </summary>
            <seealso cref="!:Barcodes.Code128Encoder"/>
            <seealso cref="!:Barcodes.Code128Generator"/>
        </member>
        <member name="M:ActiveUp.WebControls.Code128Sizer.CalculateSizes">
            <summary>
            Calculates the barcode sizes when the DPI or Module width is changed.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Code128Sizer.WidthWithoutGuards">
            <summary>
            The total width of the barcode itself, excluding any guard (quiet) zones, in pixels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Code128Sizer.MinimumModule">
            <summary>
            Gets the minimum module width, in mils.
            </summary>
            <value>The minimum module width, in mils. (1 mil is 1/1000th of an inch, or .025mm). Always returns 6.7 mils (.17 mm).</value>
        </member>
        <member name="M:ActiveUp.WebControls.Code128Sizer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:Barcodes.Code128Sizer"/> class.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.CodeNGenerator">
            <summary>
            The base class for all Code N generators, implementing common functionality.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.CodeNGenerator.EncodedData">
            <summary>
            Gets or sets the bit array that encodes the barcode pattern.
            </summary>
            <remarks>The default interpretation of this data 
            (used in <see cref="!:Barcodes.CodeNGenerator.GenerateBarcode"/>) is a true bit corresponds with
            a dark bar one module wide, and a false is a space one module wide.</remarks>
        </member>
        <member name="M:ActiveUp.WebControls.CodeNGenerator.CheckData(System.Byte[])">
            <summary>
            Called on derived class to check data sent to the <see cref="!:Barcodes.CodeNGenerator.Data"/> property.
            </summary>
            <param name="data">The data to check</param>
            <remarks>If the specified data is invalid, the derived class should throw
            an <see cref="T:System.ArgumentException"/> exception.</remarks>
            <exception cref="T:System.ArgumentException">Thrown if the data is invalid.</exception>
        </member>
        <member name="M:ActiveUp.WebControls.CodeNGenerator.EncodeData">
            <summary>
            Called on a derived class when the derived class should encode its data into
            a barcode pattern.
            </summary>
            <remarks>This is called after the data is checked with <see cref="!:Barcodes.CodeNGenerator.CheckData"/>.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.CodeNGenerator.Text">
            <summary>
            Gets or sets the text to be written below the barcode.
            </summary>
            <value>A string to display under the barcode.</value>
            <remarks>This is normally set by the barcodes' corresponding generator or encoder,
            and should usually not be set directly.  However, if the default human readable
            text is not sufficient, it can be changed.  Note that the barcode sizer does not take
            the length of this text into account, nor does it support more than one line
            of text.  While there is enough room to display the encoded data, the total amount
            of text displayable depends on many factors.  The string is only displayed if
            the <see cref="!:Barcodes.BarcodeRenderMode.Numbered"/> flag is set.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.CodeNGenerator.Data">
            <summary>
            Gets or sets the data to be encoded into a barcode pattern.
            </summary>
            <value>A byte array of the data to </value>
            <remarks>This data is first checked by calling the derived class's implementation
            of <see cref="!:Barcodes.CodeNGenerator.CheckData"/>, before it is saved.  If the
            data is invalid, an <see cref="T:System.ArgumentException"/> will be thrown.
            This property saves a reference to the underlying array; it does not make a copy.
            The behavior if the underlying byte array is changed is undefined.</remarks>
            <exception cref="T:System.ArgumentException">The data specified was invalid.</exception>
        </member>
        <member name="M:ActiveUp.WebControls.CodeNGenerator.GenerateBarcode(System.Drawing.Size)">
            <summary>
            Generates a barcode of a specified size, using the data that has been set previously by its corresponding
            encoder.
            </summary>
            <param name="size">The size of the barcode to return.</param>
            <returns>A bitmap of the barcode, of the specified size.</returns>
            <exception cref="T:System.ArgumentException">The specified size is invalid.</exception>
            <exception cref="T:System.InvalidOperationException">The data that is to be encoded has not been set yet.</exception>
        </member>
        <member name="M:ActiveUp.WebControls.CodeNGenerator.#ctor(ActiveUp.WebControls.IBarcodeSizer)">
            <summary>
            Initializes a new instance of the <see cref="!:Barcodes.CodeNGenerator"/> class.
            </summary>
            <param name="sizer">The sizer object used by this generator.</param>
        </member>
        <member name="T:ActiveUp.WebControls.Code11Generator">
            <summary>
            A class that generates Code 11 barcodes.
            </summary>
            <seealso cref="!:Barcodes.Code11Encoder"/>
            <seealso cref="!:Barcodes.Code11Sizer"/>
        </member>
        <member name="M:ActiveUp.WebControls.Code11Generator.CheckData(System.Byte[])">
            <summary>
            Checks the data sent to the generator, to ensure that it is valid.
            </summary>
            <param name="data">A byte array of data to encode.</param>
        </member>
        <member name="P:ActiveUp.WebControls.Code11Generator.Data">
            <summary>
            Gets or sets the byte array of encoded data used by the generator to generate the barcode.
            </summary>
            <value>The byte array of encoded data.</value>
            <remarks>This data only has very basic validation to ensure that it does not cause exceptions
            when used (such as array overruns). It is not checked for validity.  The user should not set this
            directly, instead, it should be set by an encoder class.  This property does <b>not</b> make a
            copy of the byte array that is supplied to it, it only keeps a reference.  The generator's behavior
            if the underlying byre array is modified, is undefined.</remarks>
            <exception cref="T:System.ArgumentException">The specified byte array is invalid, in either length or content.</exception>
        </member>
        <member name="M:ActiveUp.WebControls.Code11Generator.EncodeData">
            <summary>
            Encodes the barcode data in <see cref="!:Barcodes.CodeNGenerator.Data"/> into a barcode pattern.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Code11Generator.Flags">
            <summary>
            Gets the barcode generator capability flags.
            </summary>
            <value>Always returns <see cref="!:Barcodes.BarcodeGeneratorFlags.Linear"/>|<see cref="!:Barcodes.BarcodeGeneratorFlags.VariableLength"/>|<see cref="!:Barcodes.BarcodeGeneratorFlags.AspectRatio"/>.</value>
        </member>
        <member name="M:ActiveUp.WebControls.Code11Generator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:Barcodes.Code11Generator"/> class.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Code39Generator">
            <summary>
            A class that generates Code 39 barcodes.
            </summary>
            <seealso cref="!:Barcodes.Code39Encoder"/>
            <seealso cref="!:Barcodes.Code39Sizer"/>
        </member>
        <member name="M:ActiveUp.WebControls.Code39Generator.CheckData(System.Byte[])">
            <summary>
            Checks the data sent to the generator, to ensure that it is valid.
            </summary>
            <param name="data">A byte array of data to encode.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Code39Generator.EncodeData">
            <summary>
            Encodes the barcode data in <see cref="!:Barcodes.CodeNGenerator.Data"/> into a barcode pattern.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Code39Generator.Flags">
            <summary>
            Gets the barcode generator capability flags.
            </summary>
            <value>Always returns <see cref="!:Barcodes.BarcodeGeneratorFlags.Linear"/>|<see cref="!:Barcodes.BarcodeGeneratorFlags.VariableLength"/>|<see cref="!:Barcodes.BarcodeGeneratorFlags.AspectRatio"/>.</value>
        </member>
        <member name="M:ActiveUp.WebControls.Code39Generator.GenerateBarcode(System.Drawing.Size)">
            <summary>
            Generates a Code 39 barcode of a specified size, using the data that has been set previously by its corresponding
            encoder.
            </summary>
            <param name="size">The size of the barcode to return.</param>
            <returns>A bitmap of the barcode, of the specified size.</returns>
            <exception cref="T:System.ArgumentException">The specified size is invalid.</exception>
            <exception cref="T:System.InvalidOperationException">The data that is to be encoded has not been set yet.</exception>
        </member>
        <member name="M:ActiveUp.WebControls.Code39Generator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:Barcodes.Code39Generator"/> class.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Code93Generator">
            <summary>
            A class that generates Code 93 barcodes.
            </summary>
            <seealso cref="!:Barcodes.Code93Encoder"/>
            <seealso cref="!:Barcodes.Code93Sizer"/>
        </member>
        <member name="M:ActiveUp.WebControls.Code93Generator.CheckData(System.Byte[])">
            <summary>
            Checks the data sent to the generator, to ensure that it is valid.
            </summary>
            <param name="data">A byte array of data to encode.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Code93Generator.EncodeData">
            <summary>
            Encodes the barcode data in <see cref="!:Barcodes.CodeNGenerator.Data"/> into a barcode pattern.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Code93Generator.Flags">
            <summary>
            Gets the barcode generator capability flags.
            </summary>
            <value>Always returns <see cref="!:Barcodes.BarcodeGeneratorFlags.Linear"/>|<see cref="!:Barcodes.BarcodeGeneratorFlags.VariableLength"/>.</value>
        </member>
        <member name="M:ActiveUp.WebControls.Code93Generator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:Barcodes.Code93Generator"/> class.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Code128Generator">
            <summary>
            A class that generates Code 128 barcodes.
            </summary>
            <seealso cref="!:Barcodes.Code128Encoder"/>
            <seealso cref="!:Barcodes.Code128Sizer"/>
        </member>
        <member name="M:ActiveUp.WebControls.Code128Generator.CheckData(System.Byte[])">
            <summary>
            Checks the data sent to the generator, to ensure that it is valid.
            </summary>
            <param name="data">A byte array of data to encode.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Code128Generator.EncodeData">
            <summary>
            Encodes the barcode data in <see cref="!:Barcodes.CodeNGenerator.Data"/> into a barcode pattern.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Code128Generator.Flags">
            <summary>
            Gets the barcode generator capability flags.
            </summary>
            <value>Always returns <see cref="!:Barcodes.BarcodeGeneratorFlags.Linear"/>|<see cref="!:Barcodes.BarcodeGeneratorFlags.VariableLength"/>.</value>
        </member>
        <member name="M:ActiveUp.WebControls.Code128Generator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:Barcodes.Code128Generator"/> class.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.EAN13Encoder">
            <summary>
            An encoder for EAN13 barcodes.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.EAN13Encoder.Text">
            <summary>
            Gets or sets the data to be encoded into EAN13.
            </summary>
            <value>The string to be encoded, or null.</value>
            <remarks>This property takes a string of exactly 12 or 13 digits, without spaces, dashes, or 
            other separators. If the string is 12 digits long, the check digit will be calculated and 
            appended automatically.  If the string is 13 digits long, the check digit will be calculated
            and compared with the 13th digit.  If they do not match, an <see cref="T:System.ArgumentException"/> will be 
            thrown.  The property may also be set to null.</remarks>
            <exception cref="T:System.ArgumentException">The specified string was not null, did not have 12 or 13 digits,
            was not composed of digits 0-9, or included an invalid check digit.  The <see cref="P:System.ArgumentException.ParamName"/>
            property will be "Length", "Digit", or "Check", respectively, depending on the error.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.EAN13Encoder.Flags">
            <summary>
            Returns the encoder capability flags./>
            </summary>
            <value>Always returns <see cref="!:Barcodes.BarcodeEncoderFlags.Text"/>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.EAN13Encoder.TextSymbols">
            <summary>
            Returns the symbols that can be encoded.
            </summary>
            <value>Always returns <c>"0123456789"</c>.</value>
            <remarks>The encoder can only encode digits.  If any non-digit symbol is passed to the encoder, it will fail.</remarks>
        </member>
        <member name="M:ActiveUp.WebControls.EAN13Encoder.#ctor">
            <summary>
            Default constructor to construct a standard EAN13Encoder.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.EAN13Encoder.#ctor(System.Boolean)">
            <summary>
            Special constructor for use by <see cref="!:Barcodes.UPCAEncoder"/>.
            </summary>
            <param name="upc">If true, the generator will generate a UPCA barcode, which is very similar to an EAN13
            barcode, but with the numbers placed in a slightly different manner, and only showing 12 digits instead
            of 13.</param>
        </member>
        <member name="T:ActiveUp.WebControls.UPCAEncoder">
            <summary>
            An encoder for UPCA barcodes.
            </summary>
            <remarks>This encoder is functionally equivilent to <see cref="!:Barcodes.EAN13Encoder"/>, with the exception
            of using a special constructor and always prepending "0" to any UPC specified before passing it to
            the EAN13 encoder.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.UPCAEncoder.Text">
            <summary>
            Gets or sets the data to be encoded into UPCA.
            </summary>
            <value>The string to be encoded, or null.</value>
            <remarks>This property takes a string of exactly 11 or 12 digits, without spaces, dashes, or 
            other separators. If the string is 11 digits long, the check digit will be calculated and 
            appended automatically.  If the string is 12 digits long, the check digit will be calculated
            and compared with the 12th digit.  If they do not match, an <see cref="T:System.ArgumentException"/> will be 
            thrown.  The property may also be set to null.</remarks>
            <exception cref="T:System.ArgumentException">The specified string was not null, did not have 11 or 12 digits,
            was not composed of digits 0-9, or included an invalid check digit.  The <see cref="P:System.ArgumentException.ParamName"/>
            property will be "Length", "Digit", or "Check", respectively, depending on the error.</exception>
        </member>
        <member name="M:ActiveUp.WebControls.UPCAEncoder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:Barcodes.UPCAEncoder"/> class.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.ISBNEncoder">
            <summary>
            An encoder for ISBN barcodes.
            </summary>
            <remarks>This encoder is built on top of <see cref="!:Barcodes.EAN13Encoder"/>, checking the
            ISBN check digit and always prepending "978" to the ISBN before passing it to
            the EAN13 encoder.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.ISBNEncoder.TextSymbols">
            <summary>
            Returns the symbols that will be recognized by the encoder.
            </summary>
            <value>Always returns <c>"0123456789xX"</c>.</value>
            <remarks>The encoder will ignore any symbol other than those listed above; however they will be passed
            on to the generator and appear in the ISBN number above the barcode.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.ISBNEncoder.Text">
            <summary>
            Gets or sets the ISBN to be encoded.
            </summary>
            <value>The string to be encoded, or null.</value>
            <remarks>This property takes an ISBN string.  The ISBN is extracted by dropping all characters other than
            0-9 and 'X' (case insensitive). The ISBN is then checked, and if it is valid, the underlying encoder is
            set.  The upper text area of the barcode generator is set to include both the ISBN10 and ISBN13 numbers,
            if the barcode <see cref="!:Barcodes.IBarcodeSizer.Mode"/> property includes the <see cref="!:Barcodes.BarcodeRenderMode.Numbered"/> flag.
            The property may also be set to null.</remarks>
            <exception cref="T:System.ArgumentException">The specified string was not null and did not contain a 10 digit ISBN,
            had an 'X' in any position other than the check digit position, or the check digit was invalid.  The <see cref="P:System.ArgumentException.ParamName"/>
            property will be "Length", "X", or "Check", respectively, depending on the error.</exception>
        </member>
        <member name="T:ActiveUp.WebControls.ISBN13Encoder">
            <summary>
            An encoder for ISBN13 barcodes.
            </summary>
            <remarks>This encoder is built on top of <see cref="!:Barcodes.EAN13Encoder"/>, checking the
            ISBN check digit before passing it to the EAN13 encoder.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.ISBN13Encoder.TextSymbols">
            <summary>
            Returns the symbols that will be recognized by the encoder.
            </summary>
            <value>Always returns <c>"0123456789"</c>.</value>
            <remarks>The encoder will ignore any symbol other than those listed above; however they will be passed
            on to the generator and appear in the ISBN13 number above the barcode.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.ISBN13Encoder.Text">
            <summary>
            Gets or sets the ISBN13 to be encoded.
            </summary>
            <value>The string to be encoded, or null.</value>
            <remarks>This property takes an ISBN13 string.  The ISBN13 is extracted by dropping all 
            characters other than 0-9. The ISBN13 is then checked, and if it is valid, the underlying 
            encoder is set.  The upper text area of the barcode generator is set to include the ISBN13 
            number, if the barcode <see cref="!:Barcodes.IBarcodeSizer.Mode"/> property includes the 
            <see cref="!:Barcodes.BarcodeRenderMode.Numbered"/> flag. The property may also be set to null.</remarks>
            <exception cref="T:System.ArgumentException">The specified string was not null and did not contain a 13 digit ISBN,
            did not start with 978 or 979, or the check digit was invalid.  The <see cref="P:System.ArgumentException.ParamName"/>
            property will be "Length", "Start", or "Check", respectively, depending on the error.</exception>
        </member>
        <member name="T:ActiveUp.WebControls.ISSNEncoder">
            <summary>
            An encoder for ISSN barcodes.
            </summary>
            <remarks>This encoder </remarks>
        </member>
        <member name="P:ActiveUp.WebControls.ISSNEncoder.Text">
            <summary>
            Gets or sets the ISSN to be encoded.
            </summary>
            <value>The string to be encoded, or null.</value>
            <remarks>This property takes an ISSN string, consisting of an 8 digit ISSN or 10 digit ISSN with 
            issue code. The ISSN is extracted by dropping all characters other than 0-9 and 'X' (case 
            insensitive). The ISSN is then checked, and if it is valid, the underlying encoder is set.  
            The upper text area of the barcode generator is set to show the ISSN number, if the barcode 
            <see cref="!:Barcodes.IBarcodeSizer.Mode"/> property includes the <see cref="!:Barcodes.BarcodeRenderMode.Numbered"/> flag. 
            The property may also be set to null.</remarks>
            <exception cref="T:System.ArgumentException">The specified string was not null and did not contain an 8 digit ISSN or 10 digit ISSN with issue code,
            had an 'X' in any position other than the check digit position, or the check digit was invalid.  The <see cref="P:System.ArgumentException.ParamName"/>
            property will be "Length", "X", or "Check", respectively, depending on the error.</exception>
        </member>
        <member name="T:ActiveUp.WebControls.EAN8Encoder">
            <summary>
            An encoder for EAN8 barcodes.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.EAN8Encoder.Text">
            <summary>
            Gets or sets the data to be encoded into EAN8.
            </summary>
            <value>The string to be encoded, or null.</value>
            <remarks>This property takes a string of exactly 7 or 8 digits, without spaces, dashes, or 
            other separators. If the string is 7 digits long, the check digit will be calculated and 
            appended automatically.  If the string is 8 digits long, the check digit will be calculated
            and compared with the 8th digit.  If they do not match, an <see cref="T:System.ArgumentException"/> will be 
            thrown.  The property may also be set to null.</remarks>
            <exception cref="T:System.ArgumentException">The specified string was not null, did not have 7 or 8 digits,
            was not composed of digits 0-9, or included an invalid check digit.  The <see cref="P:System.ArgumentException.ParamName"/>
            property will be "Length", "Digit", or "Check", respectively, depending on the error.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.EAN8Encoder.TextSymbols">
            <summary>
            Returns the symbols that can be encoded.
            </summary>
            <value>Always returns <c>"0123456789"</c>.</value>
            <remarks>The encoder can only encode digits.  If any non-digit symbol is passed to the encoder, it will fail.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.EAN8Encoder.Flags">
            <summary>
            Returns the encoder capability flags./>
            </summary>
            <value>Always returns <see cref="!:Barcodes.BarcodeEncoderFlags.Text"/>.</value>
        </member>
        <member name="M:ActiveUp.WebControls.EAN8Encoder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:Barcodes.EAN8Encoder"/> class.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.UPCEEncoder">
            <summary>
            An encoder for UPCE barcodes.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.UPCEEncoder.Text">
            <summary>
            Gets or sets the data to be encoded into UPCE.
            </summary>
            <value>The string to be encoded, or null.</value>
            <remarks><para>This property takes a string of exactly 7, 8, 11 or 12 digits, without spaces, dashes, or 
            other separators. If the string is 7 digits long, the check digit will be calculated and 
            appended automatically.  If the string is 8 digits long, the check digit will be calculated
            and compared with the 8th digit.  If they do not match, an <see cref="T:System.ArgumentException"/> will be 
            thrown.</para><para>If the string is 11 or 12 digits long, it is treated as a UPCA barcode. The barcode is 
            compressed into a UPCE barcode, if possible.  The check digit is then appended or checked, if the input had
            11 or 12 digits, respectively.</para>
            <para>The property may also be set to null.</para></remarks>
            <exception cref="T:System.ArgumentException">The specified string was not null, did not have 7 or 8 digits,
            was not composed of digits 0-9, included an invalid check digit, or could not be converted into a UPCE
            barcode.  The <see cref="P:System.ArgumentException.ParamName"/> property will be "Length", "Digit", "Check", or "Invalid", 
            respectively, depending on the error.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.UPCEEncoder.Flags">
            <summary>
            Returns the encoder capability flags./>
            </summary>
            <value>Always returns <see cref="!:Barcodes.BarcodeEncoderFlags.Text"/>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.UPCEEncoder.TextSymbols">
            <summary>
            Returns the symbols that can be encoded.
            </summary>
            <value>Always returns <c>"0123456789"</c>.</value>
            <remarks>The encoder can only encode digits.  If any non-digit symbol is passed to the encoder, it will fail.</remarks>
        </member>
        <member name="M:ActiveUp.WebControls.UPCEEncoder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:Barcodes.UPCEEncoder"/> class.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.UPC25Encoder">
            <summary>
            An encoder for UPC+2 and UPC+5 addon barcodes.
            </summary>
            <remarks>This is a composite encoder; the generator will be null until the data to be encoded is specified.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.UPC25Encoder.Text">
            <summary>
            Gets or sets the data to be encoded into UPC+2 or UPC+5.
            </summary>
            <value>The string to be encoded, or null.</value>
            <remarks>This property takes a string of exactly 2 or 5 digits, without spaces, dashes, or 
            other separators. If the string is 2 digits long, the generator will be configured to generate a
            UPC+2 barcode.  If the string is 5 digits long, the generator will be configured to generate a 
            UPC+5 barcode.  The property may also be set to null.  As this is a composite encoder, and the
            generator depends on data being encoded, the <see cref="!:Barcodes.BarcodeEncoder.Generator"/> property will
            return null if the data to be encoded has not been set, and the generator reference might change
            if the data to be encoded is changed.</remarks>
            <exception cref="T:System.ArgumentException">The specified string was not null, did not have 2 or 5 digits,
            or was not composed of digits 0-9.  The <see cref="P:System.ArgumentException.ParamName"/> property will be 
            "Length" or "Digit", respectively, depending on the error.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.UPC25Encoder.Flags">
            <summary>
            Returns the encoder capability flags./>
            </summary>
            <value>Always returns <see cref="!:Barcodes.BarcodeEncoderFlags.Text"/>|<see cref="!:Barcodes.BarcodeEncoderFlags.Composite"/>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.UPC25Encoder.TextSymbols">
            <summary>
            Returns the symbols that can be encoded.
            </summary>
            <value>Always returns <c>"0123456789"</c>.</value>
            <remarks>The encoder can only encode digits.  If any non-digit symbol is passed to the encoder, it will fail.</remarks>
        </member>
        <member name="M:ActiveUp.WebControls.UPC25Encoder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:Barcodes.UPC25Encoder"/> class.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.EANSizer">
            <summary>
            The sizing control class for all EAN-based barcodes.
            </summary>
            <remarks>All of the EAN-based barcode symbologies (EAN13, EAN8, UPCE, UPC+2, and UPC+5) have the same basic 
            sizing requirements, with the only variation being in guard widths, notch sizes, etc.</remarks>
        </member>
        <member name="M:ActiveUp.WebControls.EANSizer.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructs a new 
            </summary>
            <param name="left">The width of the left guard, measured in modules.</param>
            <param name="right">The width of the right guard, measured in modules.</param>
            <param name="module">The total width of the barcode, excluding guards, measured in modules.</param>
            <param name="notch">The total depth of the notch, measured in modules.</param>
        </member>
        <member name="P:ActiveUp.WebControls.EANSizer.ModuleWidth">
            <summary>
            Returns the current module width, in pixels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.EANSizer.LeftGuard">
            <summary>
            Returns the left guard width, in pixels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.EANSizer.RightGuard">
            <summary>
            Returns the right guard width, in pixels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.EANSizer.NotchDepth">
            <summary>
            The distance from the top of the notch to the bottom of the barcode, in pixels.
            </summary> 
        </member>
        <member name="P:ActiveUp.WebControls.EANSizer.BottomDepth">
            <summary>
            The distance from the bottom of the barcode to the bottom of the bitmap, in pixels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.EANSizer.TopDepth">
            <summary>
            The height of the upper blank zone above the barcode, in pixels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.EANSizer.FontHeight">
            <summary>
            The font height to use for human readable decorations, in pixels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.EANSizer.Width">
            <summary>
            The total width of the barcode, in pixels, given the current DPI and module width.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.EANSizer.UpperLines">
            <summary>
            The number of lines of text appearing above the barcode.
            </summary>
            <remarks>This value is set by <see cref="!:Barcodes.EAN13Generator.UpperText"/>.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.EANSizer.Height">
            <summary>
            The minimum height of the barcode, in pixels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.EANSizer.ExtraHeight">
            <summary>
            The height of all items added to the barcode.
            </summary>
            <value>The height of all items added to the barcode, in pixels.</value>
            <remarks><para>For EAN-based barcodes, the extra height comes from the text at the top and bottom of the barcode.
            Note that the "extra height" is measured from the top of the notch (if present), not from the absolute bottom
            of the bars (the bars that hang down in the middle and on the edges).</para>
            <para>This property is meant to be used to generate a desired barcode height.  To calculate the height
            of the size to pass to <see cref="!:Barcodes.IBarcodeGenerator.GenerateBarcode"/>, multiply the desired height
            (in inches) by the DPI, and add this number to it.</para><para>This property's value is potentially impacted by the value of <see cref="!:Barcodes.IBarcodeSizer.Mode"/>.
            The barcode render mode flags should be set before using this value.</para></remarks>
        </member>
        <member name="P:ActiveUp.WebControls.EANSizer.DPI">
            <summary>
            The current DPI (dots-per-inch) of the barcode.
            </summary>
            <value>The current DPI (dots-per-inch) of the barcode.</value>
            <remarks>
            This value represents the DPI that the barcode will be printed at.  This value defaults to zero, which represents "logical" mode.
            In "logical" mode, the generated barcode represents the relative sizing and positioning of barcode elements, but they are not
            necessarily in the proper size for printing.
            
            If the value is greater than zero, the barcode generator will generate a barcode using the specified DPI.
            </remarks>
            <exception cref="T:System.ArgumentException">The value specified was less than zero</exception>
        </member>
        <member name="M:ActiveUp.WebControls.EANSizer.IsValidSize(System.Drawing.Size)">
            <summary>
            Checks to see if a specified size is valid.
            </summary>
            <param name="size">A size to test for validity.</param>
            <returns>True if this size is valid, false otherwise.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.EANSizer.GetValidSize(System.Drawing.Size)">
            <summary>
            Given a size, returns the largest valid size contained by that size.
            </summary>
            <param name="size">A maximum size, from which to find a valid size.</param>
            <returns>A valid size.</returns>
            <exception cref="T:System.ArgumentException">The specified size is smaller than the minimum size in one or both dimensions.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.EANSizer.Mode">
            <summary>
            The rendering mode flags, which control the way the barcode is rendered.
            </summary>
            <value>The flags which control which aspects of the barcode are rendered.</value>
            <remarks>The flags which may be used are <see cref="F:ActiveUp.WebControls.BarcodeRenderMode.Guarded"/>, <see cref="F:ActiveUp.WebControls.BarcodeRenderMode.Notched"/>,
            and <see cref="F:ActiveUp.WebControls.BarcodeRenderMode.Numbered"/>.  All other flags have no effect.  If the
            <see cref="F:ActiveUp.WebControls.BarcodeRenderMode.Numbered"/> flag is specified, the <see cref="F:ActiveUp.WebControls.BarcodeRenderMode.Guarded"/> and <see cref="F:ActiveUp.WebControls.BarcodeRenderMode.Notched"/>
            are automatically set.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.EANSizer.Module">
            <summary>
            Gets and sets module width of the barcode (in mils).
            </summary>
            <value>The module width of the barcode, in mils (1 mil=1/1000 of an inch).</value>
            <remarks>The default value is 13 mils (.33 mm).</remarks>
            <exception cref="T:System.ArgumentException">The specified module width is less than <see cref="!:Barcodes.IBarcodeModularSizer.MinimumModule"/>.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.EANSizer.MinimumModule">
            <summary>
            The minimum module width of the barcode (in mils).
            </summary>
            <value>Always returns 10.4 mils (.264 mm).</value>
            <remarks>The value of <see cref="!:Barcodes.EANSizer.Module"/> cannot be set lower than the value
            returned by this property.</remarks>
        </member>
        <member name="T:ActiveUp.WebControls.EANGenerator">
            <summary>
            The base class for the EAN-based barcode generators.
            </summary>
            <remarks>This class implements the actual barcode generation method, and call the 
            <see cref="!:Barcodes.EANGenerator.Decorator"/> method in derived classes to add the 
            notches and numbering to the barcode.  It does not implement the <see cref="!:Barcodes.BarcodeGenerator.Data"/>
            property, nor does it handle storage of encoded data.  That is the responsibility of 
            derived classes.  The only way this class accesses encoded data is via the 
            <see cref="!:Barcodes.EANGenerator.GenerateEncoding"/> method.</remarks>
        </member>
        <member name="M:ActiveUp.WebControls.EANGenerator.GenerateEncoding">
            <summary>
            Called by <see cref="M:ActiveUp.WebControls.EANGenerator.GenerateBarcode(System.Drawing.Size)"/> to obtain the encoded module pattern.
            </summary>
            <returns>A <see cref="T:System.Collections.BitArray"/> containing the module pattern.</returns>
            <remarks>The returned bit array contains one bit for each module that makes up the width
            of the barcode itself (excluding guard zones).  A true value is rendered as a dark bar, and
            a false value is a blank space.</remarks>
        </member>
        <member name="M:ActiveUp.WebControls.EANGenerator.Decorator(System.Drawing.Graphics,System.Drawing.Size)">
            <summary>
            Called by <see cref="M:ActiveUp.WebControls.EANGenerator.GenerateBarcode(System.Drawing.Size)"/> to decorate the barcode with notches and numbering.
            </summary>
            <param name="g">A graphics contexts containing the barcode.</param>
            <param name="size">The size of the barcode bitmap.</param>
            <remarks>When this method is called, the barcode has been drawn into the graphics context,
            between two blank guard zones.  The barcode itself stretches from the top to the bottom of
            the bitmap.  It is the job of the decorator to trim the barcode the the dimensions specified
            by <see cref="!:Barcodes.EANSizer"/>.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.EANGenerator.Flags">
            <summary>
            Gets the generator's capability flags.
            </summary>
            <value>Always returns <see cref="!:Barcodes.BarcodeGeneratorFlags.Linear"/>.</value>
        </member>
        <member name="M:ActiveUp.WebControls.EANGenerator.GenerateBarcode(System.Drawing.Size)">
            <summary>
            Generates a bitmap of the barcode, at a specified size.
            </summary>
            <param name="size">The size of bitmap to generate.</param>
            <returns>A bitmap of the barcode.</returns>
            <remarks>The order of operations is as follows:
            <list type="number">
            <item><description>Check the <paramref name="size"/> and <see cref="!:Barcodes.BarcodeGenerator.Data"/>
            to ensure validity.</description></item>
            <item><description>Call the <see cref="!:Barcodes.EANGenerator.GenerateEncoding"/> method.</description></item>
            <item><description>Using the data returned from step 2, generate a raw barcode bitmap.</description></item>
            <item><description>Call the <see cref="!:Barcodes.EANGenerator.Decorator"/> method.</description></item>
            <item><description>Return the resulting bitmap.</description></item>
            </list>
            </remarks>
            <exception cref="T:System.ArgumentException">The specified <paramref name="size"/> was not valid.</exception>
            <exception cref="T:System.InvalidOperationException">The generator does not have any data set.</exception>
        </member>
        <member name="M:ActiveUp.WebControls.EANGenerator.#ctor(ActiveUp.WebControls.IBarcodeSizer)">
            <summary>
            Initializes a new instance of the <see cref="!:Barcodes.EANGenerator"/> class, with the specified sizer.
            </summary>
            <param name="sizer">The sizer for the generator to use.</param>
        </member>
        <member name="T:ActiveUp.WebControls.EAN13Generator">
            <summary>
            A generator for EAN13/UPCA barcodes.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.EAN13Generator.Data">
            <summary>
            Gets or sets the byte array of encoded data used by the generator to generate the barcode.
            </summary>
            <value>The byte array of encoded data.</value>
            <remarks>This data only has very basic validation to ensure that it does not cause exceptions
            when used (such as array overruns). It is not checked for validity.  The user should not set this
            directly, instead, it should be set by an encoder class.  This property does <b>not</b> make a
            copy of the byte array that is supplied to it, it only keeps a reference.  Its behavior if the underlying
            array is modified, is undefined.</remarks>
            <exception cref="T:System.ArgumentException">The specified byte array is invalid, in either length or content.
            The <see cref="P:System.ArgumentException.ParamName"/> property will be "Length" or "Data", respectively.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.EAN13Generator.UpperText">
            <summary>
            Gets or sets the text to appear above the barcode.
            </summary>
            <value>The text to appear above the barcode.</value>
            <remarks>The minimum height of the barcode will be increased, depending on the number
            of lines of text that are displayed.  However, the width of the barcode will not be, so
            the length of the lines of text should be kept short.</remarks>
        </member>
        <member name="M:ActiveUp.WebControls.EAN13Generator.GenerateEncoding">
            <summary>
            Generates the pattern of bars and spaces that comprise the barcode.
            </summary>
            <returns>A <see cref="T:System.Collections.BitArray"/> representing the barcode pattern.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.EAN13Generator.Decorator(System.Drawing.Graphics,System.Drawing.Size)">
            <summary>
            Adds the notches and numbers to the completed barcode.
            </summary>
            <param name="g">A graphics context containing the barcode.</param>
            <param name="size">The size of the barcode bitmap.</param>
        </member>
        <member name="M:ActiveUp.WebControls.EAN13Generator.#ctor">
            <summary>
            Initializes a new instance of <see cref="!:Barcodes.EAN13Generator"/>, set to generate EAN13 barcodes.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.EAN13Generator.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of <see cref="!:Barcodes.EAN13Generator"/>, with an option to generate UPCA barcodes.
            </summary>
            <param name="isUPCA">True if the generator should generate UPCA barcodes.</param>
        </member>
        <member name="T:ActiveUp.WebControls.EAN8Generator">
            <summary>
            A generator for EAN8 barcodes.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.EAN8Generator.Data">
            <summary>
            Gets or sets the byte array of encoded data used by the generator to generate the barcode.
            </summary>
            <value>The byte array of encoded data.</value>
            <remarks>This data only has very basic validation to ensure that it does not cause exceptions
            when used (such as array overruns). It is not checked for validity.  The user should not set this
            directly, instead, it should be set by an encoder class.  This property does <b>not</b> make a
            copy of the byte array that is supplied to it, it only keeps a reference.  Its behavior if the underlying
            array is modified, is undefined.</remarks>
            <exception cref="T:System.ArgumentException">The specified byte array is invalid, in either length or content.
            The <see cref="P:System.ArgumentException.ParamName"/> property will be "Length" or "Data", respectively.</exception>
        </member>
        <member name="M:ActiveUp.WebControls.EAN8Generator.GenerateEncoding">
            <summary>
            Generates the pattern of bars and spaces that comprise the barcode.
            </summary>
            <returns>A <see cref="T:System.Collections.BitArray"/> representing the barcode pattern.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.EAN8Generator.Decorator(System.Drawing.Graphics,System.Drawing.Size)">
            <summary>
            Adds the notches and numbers to the completed barcode.
            </summary>
            <param name="g">A graphics context containing the barcode.</param>
            <param name="size">The size of the barcode bitmap.</param>
        </member>
        <member name="M:ActiveUp.WebControls.EAN8Generator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:Barcodes.EAN8Generator"/> class.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.UPCEGenerator">
            <summary>
            A generator for UPCE barcodes.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.UPCEGenerator.Data">
            <summary>
            Gets or sets the byte array of encoded data used by the generator to generate the barcode.
            </summary>
            <value>The byte array of encoded data.</value>
            <remarks>This data only has very basic validation to ensure that it does not cause exceptions
            when used (such as array overruns). It is not checked for validity.  The user should not set this
            directly, instead, it should be set by an encoder class.  This property does <b>not</b> make a
            copy of the byte array that is supplied to it, it only keeps a reference.  Its behavior if the underlying
            array is modified, is undefined.</remarks>
            <exception cref="T:System.ArgumentException">The specified byte array is invalid, in either length or content.
            The <see cref="P:System.ArgumentException.ParamName"/> property will be "Length" or "Data", respectively.</exception>
        </member>
        <member name="M:ActiveUp.WebControls.UPCEGenerator.GenerateEncoding">
            <summary>
            Generates the pattern of bars and spaces that comprise the barcode.
            </summary>
            <returns>A <see cref="T:System.Collections.BitArray"/> representing the barcode pattern.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.UPCEGenerator.Decorator(System.Drawing.Graphics,System.Drawing.Size)">
            <summary>
            Adds the notches and numbers to the completed barcode.
            </summary>
            <param name="g">A graphics context containing the barcode.</param>
            <param name="size">The size of the barcode bitmap.</param>
        </member>
        <member name="M:ActiveUp.WebControls.UPCEGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:Barcodes.UPCEGenerator"/> class.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.UPC2Generator">
            <summary>
            A generator for UPC+2 barcodes.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.UPC2Generator.Data">
            <summary>
            Gets or sets the byte array of encoded data used by the generator to generate the barcode.
            </summary>
            <value>The byte array of encoded data.</value>
            <remarks>This data only has very basic validation to ensure that it does not cause exceptions
            when used (such as array overruns). It is not checked for validity.  The user should not set this
            directly, instead, it should be set by an encoder class.  This property does <b>not</b> make a
            copy of the byte array that is supplied to it, it only keeps a reference.  Its behavior if the underlying
            array is modified, is undefined.</remarks>
            <exception cref="T:System.ArgumentException">The specified byte array is invalid, in either length or content.
            The <see cref="P:System.ArgumentException.ParamName"/> property will be "Length" or "Data", respectively.</exception>
        </member>
        <member name="M:ActiveUp.WebControls.UPC2Generator.GenerateEncoding">
            <summary>
            Generates the pattern of bars and spaces that comprise the barcode.
            </summary>
            <returns>A <see cref="T:System.Collections.BitArray"/> representing the barcode pattern.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.UPC2Generator.Decorator(System.Drawing.Graphics,System.Drawing.Size)">
            <summary>
            Adds the numbers to the completed barcode.
            </summary>
            <param name="g">A graphics context containing the barcode.</param>
            <param name="size">The size of the barcode bitmap.</param>
        </member>
        <member name="M:ActiveUp.WebControls.UPC2Generator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:Barcodes.UPC2Generator"/> class.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.UPC5Generator">
            <summary>
            A generator for UPC+5 barcodes.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.UPC5Generator.Data">
            <summary>
            Gets or sets the byte array of encoded data used by the generator to generate the barcode.
            </summary>
            <value>The byte array of encoded data.</value>
            <remarks>This data only has very basic validation to ensure that it does not cause exceptions
            when used (such as array overruns). It is not checked for validity.  The user should not set this
            directly, instead, it should be set by an encoder class.  This property does <b>not</b> make a
            copy of the byte array that is supplied to it, it only keeps a reference.  Its behavior if the underlying
            array is modified, is undefined.</remarks>
            <exception cref="T:System.ArgumentException">The specified byte array is invalid, in either length or content.
            The <see cref="P:System.ArgumentException.ParamName"/> property will be "Length" or "Data", respectively.</exception>
        </member>
        <member name="M:ActiveUp.WebControls.UPC5Generator.GenerateEncoding">
            <summary>
            Generates the pattern of bars and spaces that comprise the barcode.
            </summary>
            <returns>A <see cref="T:System.Collections.BitArray"/> representing the barcode pattern.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.UPC5Generator.Decorator(System.Drawing.Graphics,System.Drawing.Size)">
            <summary>
            Adds the numbers to the completed barcode.
            </summary>
            <param name="g">A graphics context containing the barcode.</param>
            <param name="size">The size of the barcode bitmap.</param>
        </member>
        <member name="M:ActiveUp.WebControls.UPC5Generator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:Barcodes.UPC5Generator"/> class.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.EANCompositeEncoder">
            <summary>
            A compositing encoder, for producing composite EAN barcodes.
            </summary>
            <remarks>A composite EAN barcode is an EAN barcode, followed by a UPC+2 or UPC+5 barcode.  The extra barcode is
            often used to provide supplemental information, such as price or issue number.  The two barcodes must meet certain
            sizing requirements, including maximum distance between the two barcodes, and relative heights.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.EANCompositeEncoder.Data">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.EANCompositeEncoder.EncodedData">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.EANCompositeEncoder.Text">
            <summary>
            Gets or sets the string to be encoded.
            </summary>
            <value>The string to be encoded, or null.</value>
            <remarks>The data to be encoded must be formated as follows:
            <br/>&apos;<i>Mode</i>&apos; &lt;<i>Left Data</i>&gt;&apos;/&apos;&lt;<i>Right Data</i>&gt;
            <br/><br/>Mode is a single letter from the following list:
            <list type="table">
            <listheader><item>Letter</item><description>Left Barcode Type</description></listheader>
            <item><term>'E'</term><description>EAN13/EAN8</description></item>
            <item><term>'M'</term><description>UPCE</description></item>
            <item><term>'I'</term><description>ISBN/ISBN13</description></item>
            <item><term>'S'</term><description>ISSN</description></item>
            <item><term>'U'</term><description>UPCA</description></item>
            </list><br/>
            <i>Left Data</i> is the string that would be passed to the corresponding encoder's Text property.<br/>
            <i>Right Data</i> is the string that would be passed to the UPC+2 or UPC+5 encoder's Text property. The two data strings
            are separated by a slash '/', with no spaces.  The &lt;, &gt;, and &apos; are not used.
            <br/>The string is converted to uppercase before processing.
            </remarks>
            <example>
            I1-2345-6789-X/51999<br/>
            E9781234567897/52
            </example>
            <exception cref="T:System.ArgumentException">If there is an error in the formatting of the data string, this exception
            is thrown with its <see cref="P:System.ArgumentException.ParamName"/> property set to "Length" or "Flag", if the
            formatting is invalid or the mode flag is unrecognized, respectively.  If the left or right data is invalid,
            the exception's <see cref="P:System.ArgumentException.ParamName"/> property will be "Left" or "Right", and the
            inner exception will be the exception thrown by the underlying encoder.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.EANCompositeEncoder.Flags">
            <summary>
            Gets the encoder's capability flags.
            </summary>
            <value>Always returns <see cref="!:Barcodes.BarcodeEncoderFlags.Text"/>|<see cref="!:Barcodes.BarcodeEncoderFlags.Composite"/>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.EANCompositeEncoder.TextSymbols">
            <summary>
            Gets the symbols that are recognized by the encoder, and its underlying encoders.
            </summary>
            <value>Always returns <c>"0123456789UuMmEeIiSsXx/"</c>. </value>
            <remarks>The actual symbols that are valid depends on the mode flag at the beginning of the data
            string. It is up to the underlying encoders to handle non-encodable symbols.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.EANCompositeEncoder.Generator">
            <summary>
            Gets the generator associated with this encoder.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.EANCompositeEncoder.Sizer">
            <summary>
            Gets the sizer associated with the generator, that is associated with this encoder.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.EANCompositeEncoder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:Barcodes.EANCompositeEncoder"/> class.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.EANCompositeSizer">
            <summary>
            Sizing control for the two barcode generators that comprise the composite EAN barcode.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.EANCompositeSizer.LeftSizer">
            <summary>
            Gets or sets the sizer for the left barcode.
            </summary>
            <value>The sizer for the left barcode.</value>
            <remarks>When a sizer is set, this property also sets the sizer's module width, render mode flags, and DPI.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.EANCompositeSizer.RightSizer">
            <summary>
            Gets or sets the sizer for the right barcode.
            </summary>
            <value>The sizer for the right barcode.</value>
            <remarks>When a sizer is set, this property also sets the sizer's module width, render mode flags, and DPI.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.EANCompositeSizer.Width">
            <summary>
            Returns the width of the composite barcode, in pixels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.EANCompositeSizer.Height">
            <summary>
            Returns the minimum height of the composite barcode, in pixels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.EANCompositeSizer.ExtraHeight">
            <summary>
            Returns the height of extra items placed around the primary (left) barcode.
            </summary>
            <value>The height of extra items, in pixels.</value>
            <remarks>To set the height of the left barcode, multiply the desired height (in inches) by the
            DPI, and add this value.  The height of the secondary (right) barcode is dependant on the height of the
            primary barcode, and cannot be set separately.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.EANCompositeSizer.Size">
            <summary>
            Returns the minimum size of the composite barcode, in pixels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.EANCompositeSizer.DPI">
            <summary>
            Gets or sets the dots-per-inch (DPI) of the barcode.
            </summary>
            <value>The DPI of the barcode.</value>
            <remarks>If this is set to zero, the generators operate in "logical mode", which produces barcodes
            with the correct relative placement and sizing of bars and spaces, but not at the proper size for
            printing.  It might also not place the numbers correctly if it is operating in logical mode.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.EANCompositeSizer.AspectRatioMin">
            <summary>
            Not used.
            </summary>
            <value>Always returns 0.</value>
        </member>
        <member name="P:ActiveUp.WebControls.EANCompositeSizer.AspectRatioMax">
            <summary>
            Not used.
            </summary>
            <value>Always returns 0.</value>
        </member>
        <member name="P:ActiveUp.WebControls.EANCompositeSizer.Mode">
            <summary>
            Gets or sets the rendering mode flags for the two underlying generators.
            </summary>
            <value>The current rendering mode flags.</value>
            <remarks>Valid rendering mode flags are <see cref="!:Barcodes.BarcodeRenderMode.Guarded"/>, 
            <see cref="!:Barcodes.BarcodeRenderMode.Notched"/>, and <see cref="!:Barcodes.BarcodeRenderMode.Numbered"/>.
            If <see cref="!:Barcodes.BarcodeRenderMode.Numbered"/> is set, it will automatically set
            <see cref="!:Barcodes.BarcodeRenderMode.Guarded"/> and <see cref="!:Barcodes.BarcodeRenderMode.Notched"/>.</remarks>
        </member>
        <member name="M:ActiveUp.WebControls.EANCompositeSizer.IsValidSize(System.Drawing.Size)">
            <summary>
            Checks to see if the specified size is valid.
            </summary>
            <param name="size">The size of the barcode, in pixels.</param>
            <returns>True if the barcode size is valid, false otherwise.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.EANCompositeSizer.GetValidSize(System.Drawing.Size)">
            <summary>
            Calculate the largest barcode within a given size.
            </summary>
            <param name="size">The maximum size of the barcode, in pixels.</param>
            <returns>A valid barcode size.</returns>
            <exception cref="T:System.ArgumentException">The specified size was smaller than the minimum size in one or both dimensions.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.EANCompositeSizer.Module">
            <summary>
            Gets or sets the desired module width, in mils.
            </summary>
            <value>The current desired module width, in mils (1 mil is 1/1000th of an inch, .0254 mm).  The default value is 13 mils (.33 mm).</value>
            <remarks>The barcode generator will generate a barcode with a module width that is as close as
            possible to, but not smaller than, the specified module width, within the limits of the 
            specified DPI.  It cannot be set lower than the value returned by <see cref="!:Barcodes.EANCompositeSizer.MinimumModule"/>.</remarks>
            <exception cref="T:System.ArgumentException">The specified module width is smaller than 
            <see cref="!:Barcodes.EANCompositeSizer.MinimumModule"/>.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.EANCompositeSizer.MinimumModule">
            <summary>
            The minimum module width, in mils.
            </summary>
            <value>Always returns 10.4 mils.</value>
            <remarks>One mil is 1/1000th of an inch, or .0254 mm.</remarks>
        </member>
        <member name="M:ActiveUp.WebControls.EANCompositeSizer.CalculateLeftSize(System.Drawing.Size,System.Drawing.Rectangle@,System.Drawing.Rectangle@)">
            <summary>
            Calculates the size and placement of the left barcode, for use by the generator.
            </summary>
            <param name="size">The total size of the barcode.</param>
            <param name="leftPlacement">Returns the rectangle which specifies the placement in the finished barcode.</param>
            <param name="leftCut">Returns the rectangle which specified the portion of the generated barcode to place.</param>
            <returns>The size to pass to the left barcode generator.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.EANCompositeSizer.CalculateRightSize(System.Drawing.Size,System.Drawing.Rectangle@,System.Drawing.Rectangle@)">
            <summary>
            Calculates the size and placement of the right barcode, for use by the generator.
            </summary>
            <param name="size">The total size of the barcode.</param>
            <param name="rightPlacement">Returns the rectangle which specifies the placement in the finished barcode.</param>
            <param name="rightCut">Returns the rectangle which specified the portion of the generated barcode to place.</param>
            <returns>The size to pass to the right barcode generator.</returns>
        </member>
        <member name="T:ActiveUp.WebControls.EANCompositeGenerator">
            <summary>
            Generator which produces composite EAN barcodes.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.EANCompositeGenerator.LeftSide">
            <summary>
            Gets or sets the left barcode generator.
            </summary>
            <value>The generator for the left barcode.</value>
        </member>
        <member name="P:ActiveUp.WebControls.EANCompositeGenerator.RightSide">
            <summary>
            Gets or sets the right barcode generator.
            </summary>
            <value>The generator for the right barcode.</value>
        </member>
        <member name="P:ActiveUp.WebControls.EANCompositeGenerator.Sizer">
            <summary>
            Gets the composite barcode sizer.
            </summary>
            <value>The composite barcode sizer.</value>
        </member>
        <member name="P:ActiveUp.WebControls.EANCompositeGenerator.Flags">
            <summary>
            Gets the generator capability flags.
            </summary>
            <value>Always returns <see cref="!:Barcodes.BarcodeGeneratorFlags.Linear"/> | <see cref="!:Barcodes.BarcodeGeneratorFlags.VariableLength"/>.</value>
        </member>
        <member name="M:ActiveUp.WebControls.EANCompositeGenerator.GenerateBarcode(System.Drawing.Size)">
            <summary>
            Generates a composite barcode of the specified size.
            </summary>
            <param name="size">The size of the barcode to generate.</param>
            <returns>A bitmat containing the composite barcode.</returns>
            <exception cref="T:System.ArgumentException">The specified size is invalid.</exception>
            <exception cref="T:System.InvalidOperationException">The left generator or the right generator, 
            or both, are not set up properly, or an error occured when the component barcodes were being 
            generated (in which case, the inner exception will be set.)</exception>
        </member>
        <member name="M:ActiveUp.WebControls.EANCompositeGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:Barcodes.EANCompositeGenerator"/> class.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.EAN128Encoder">
            <summary>
            An encoder to validate and generate EAN-128 barcodes.
            </summary>
            <remarks>EAN-128 is used in many trade-related situations, and can encode information such as
            manufacturer, serial numbers, dimensions, weights, etc.  The complete specifications are
            available from the EAN/UCC.  This particular class is based on the specifications presented in
            the EAN/UCC specification version 6.0.  The encoder will check for properly formed data sequences,
            as defined by their Application Indicator (AI) codes, and then pass them on to the underlying
            Code128 encoder, after adding the proper FNC1 control characters.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.EAN128Encoder.Text">
            <summary>
            Gets or sets the data to be encoded into an EAN-128 barcode.
            </summary>
            <value>A string of the data to be encoded, or null.</value>
            <remarks><para>The string should be formatted in the standard EAN-128 format: "(##)xxxxxx", where 
            ## is the Application Identifier (AI), and xxxxxx is the data corresponding to that AI.
            This string forms what is called an "Element String".  You can pass in any number of element strings,
            concatenated together, without spaces or other marks between each element string.</para><para>
            The encoder first separates the supplied string into its component Element Strings.  If the
            encoder fails to separate the supplied string into valid Element Strings, it will throw an
            <see cref="T:System.ArgumentException"/> with a <see cref="P:System.ArgumentException.ParamName"/> of
            "Split".  This phase also checks for well formed Element Strings, ensuring that the AI contains
            at least 2 and no more than 4 digits, and is contained in parenthesis, before the data to be
            encoded, and that the data does not contain invalid characters (as defined in the EAN/UCC specification,
            version 6, table 3.A.3 - 1.<br/><b>Important Note:</b> The data portion of the element string can,
            by EAN/UCC specification, contain parenthesis.  However, this will confuse the encoder, since
            the AI must be in parenthesis.  As such, when
            passing a <b>data</b> string that contains parenthesis to the encoder, the parenthesis must be
            converted to square brackets ('(' to '[' and ')' to ']').  The AI remains in parenthesis. When the
            barcode is generated, the square brackets will be converted back to parenthesis when they appear in the
            human-readable numbering below the barcode.</para>
            <para>After it is separated, each individual element string is checked for validity,
            depending on the AI that is supplied.  If the Element String is not valid, it will throw an
            <see cref="T:System.ArgumentException"/> with the <see cref="P:System.ArgumentException.ParamName"/>
            property set to the element string that was invalid.</para><para>Once the element strings are checked,
            one final check is made to ensure that the total length of the barcode does not exceed 48 data symbols.
            This length is calculated by taking the total lengths of the element strings, (excluding the parenthesis
            that separate the AI from the data), plus any extra FNC1 codes that must be added to mark the end of a
            variable-length element string. (Variable length element strings are any strings with an AI that does 
            not begin with 00-04, 11-20, 31-36, or 41.  Note that not all of these AI's are defined as of EAN/UCC
            specification version 6.0, but their lengths have been defined.)  If the length is
            over 48, the encoder will throw an
            <see cref="T:System.ArgumentException"/> with the <see cref="P:System.ArgumentException.ParamName"/> set to
            "Length".</para></remarks>
            <exception cref="T:System.ArgumentException">There was an error encoding the specified string.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.EAN128Encoder.Flags">
            <summary>
            Gets flags that represent the encoder's capabilities.
            </summary>
            <value>Always returns <see cref="!:Barcodes.BarcodeEncoderFlags.Composite"/>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.EAN128Encoder.StandardSize">
            <summary>
            Gets the size that will produce a barcode of the standardized size.
            </summary>
            <value>The standard size of the barcode.</value>
            <remarks>This also performs numerous checks to ensure that the generated barcode will be
            within the specification.  This includes checking that the DPI is not zero, that the module
            width is between 9.8 and 40 mils, and that the total length of the barcode does not exceed
            6.5 inches (16.5 cm).  If this property throws an <see cref="T:System.InvalidOperationException"/>,
            and the DPI is set and the module width <see cref="!:Barcodes.IBarcodeModularSizer.Module"/> is between
            9.8 and 40 mils, then the barcode is too long to be encoded at the current module width, and the
            module width should be decreased.</remarks>
            <seealso cref="!:Barcodes.EAN128Encoder.CalculateModule"/>
        </member>
        <member name="M:ActiveUp.WebControls.EAN128Encoder.CalculateModule">
            <summary>
            This is a convenience function, to calculate and set a valid module width.
            </summary>
            <remarks>This should be called if <see cref="!:Barcodes.EAN128Encoder.StandardSize"/> throws an
            <see cref="T:System.InvalidOperationException"/>.  It will set the module width to a value that results in
            a barcode with a total width less than 6.5 inches.</remarks>
            <exception cref="T:System.ArgumentException">The function cannot calculate a valid module width; this shouldn't happen.</exception>
            <exception cref="T:System.InvalidOperationException">The DPI is set to zero.</exception>
        </member>
        <member name="M:ActiveUp.WebControls.EAN128Encoder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:Barcodes.EAN128Encoder"/> class.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Grouper">
            <summary>A special custom rounding GroupBox with many painting features.</summary>
        </member>
        <member name="T:ActiveUp.WebControls.Grouper.GroupBoxGradientMode">
            <summary>A special gradient enumeration.</summary>
        </member>
        <member name="F:ActiveUp.WebControls.Grouper.GroupBoxGradientMode.None">
            <summary>Specifies no gradient mode.</summary>
        </member>
        <member name="F:ActiveUp.WebControls.Grouper.GroupBoxGradientMode.BackwardDiagonal">
            <summary>Specifies a gradient from upper right to lower left.</summary>
        </member>
        <member name="F:ActiveUp.WebControls.Grouper.GroupBoxGradientMode.ForwardDiagonal">
            <summary>Specifies a gradient from upper left to lower right.</summary>
        </member>
        <member name="F:ActiveUp.WebControls.Grouper.GroupBoxGradientMode.Horizontal">
            <summary>Specifies a gradient from left to right.</summary>
        </member>
        <member name="F:ActiveUp.WebControls.Grouper.GroupBoxGradientMode.Vertical">
            <summary>Specifies a gradient from top to bottom.</summary>
        </member>
        <member name="P:ActiveUp.WebControls.Grouper.BackColor">
            <summary>This feature will paint the background color of the control.</summary>
        </member>
        <member name="P:ActiveUp.WebControls.Grouper.CustomGroupBoxColor">
            <summary>This feature will paint the group title background to the specified color if PaintGroupBox is set to true.</summary>
        </member>
        <member name="P:ActiveUp.WebControls.Grouper.PaintGroupBox">
            <summary>This feature will paint the group title background to the CustomGroupBoxColor.</summary>
        </member>
        <member name="P:ActiveUp.WebControls.Grouper.GroupImage">
            <summary>This feature can add a 16 x 16 image to the group title bar.</summary>
        </member>
        <member name="P:ActiveUp.WebControls.Grouper.ShadowColor">
            <summary>This feature will change the control's shadow color.</summary>
        </member>
        <member name="P:ActiveUp.WebControls.Grouper.ShadowThickness">
            <summary>This feature will change the size of the shadow border.</summary>
        </member>
        <member name="P:ActiveUp.WebControls.Grouper.BackgroundColor">
            <summary>This feature will change the group control color. This color can also be used in combination with BackgroundGradientColor for a gradient paint.</summary>
        </member>
        <member name="P:ActiveUp.WebControls.Grouper.BackgroundGradientColor">
            <summary>This feature can be used in combination with BackgroundColor to create a gradient background.</summary>
        </member>
        <member name="P:ActiveUp.WebControls.Grouper.BackgroundGradientMode">
            <summary>This feature turns on background gradient painting.</summary>
        </member>
        <member name="P:ActiveUp.WebControls.Grouper.RoundCorners">
            <summary>This feature will round the corners of the control.</summary>
        </member>
        <member name="P:ActiveUp.WebControls.Grouper.GroupTitle">
            <summary>This feature will add a group title to the control.</summary>
        </member>
        <member name="P:ActiveUp.WebControls.Grouper.BorderColor">
            <summary>This feature will allow you to change the color of the control's border.</summary>
        </member>
        <member name="P:ActiveUp.WebControls.Grouper.BorderThickness">
            <summary>This feature will allow you to set the control's border size.</summary>
        </member>
        <member name="P:ActiveUp.WebControls.Grouper.ShadowControl">
            <summary>This feature will allow you to turn on control shadowing.</summary>
        </member>
        <member name="M:ActiveUp.WebControls.Grouper.#ctor">
            <summary>This method will construct a new GroupBox control.</summary>
        </member>
        <member name="M:ActiveUp.WebControls.Grouper.Dispose(System.Boolean)">
            <summary>This method will dispose of the GroupBox control.</summary>
        </member>
        <member name="M:ActiveUp.WebControls.Grouper.InitializeStyles">
            <summary>This method will initialize the controls custom styles.</summary>
        </member>
        <member name="M:ActiveUp.WebControls.Grouper.InitializeGroupBox">
            <summary>This method will initialize the GroupBox control.</summary>
        </member>
        <member name="M:ActiveUp.WebControls.Grouper.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>Overrides the OnPaint method to paint control.</summary>
            <param name="e">The paint event arguments.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Grouper.PaintGroupText(System.Drawing.Graphics)">
            <summary>This method will paint the group title.</summary>
            <param name="g">The paint event graphics object.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Grouper.PaintBack(System.Drawing.Graphics)">
            <summary>This method will paint the control.</summary>
            <param name="g">The paint event graphics object.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Grouper.GroupBox_Resize(System.Object,System.EventArgs)">
            <summary>This method fires when the GroupBox resize event occurs.</summary>
            <param name="sender">The object the sent the event.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="T:ActiveUp.WebControls.GroupBoxConstants">
            <summary>This class holds all GroupBox constants.</summary>
        </member>
        <member name="F:ActiveUp.WebControls.GroupBoxConstants.SweepAngle">
            <summary>The sweep angle of the arc.</summary>
        </member>
        <member name="F:ActiveUp.WebControls.GroupBoxConstants.MinControlHeight">
            <summary>The minimum control height.</summary>
        </member>
        <member name="F:ActiveUp.WebControls.GroupBoxConstants.MinControlWidth">
            <summary>The minimum control width.</summary>
        </member>
        <member name="T:ActiveUp.WebControls.HibcDateFormat">
            <summary>
            Date formats available in HIBC secondary data encodings.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.HibcDateFormat.YearMonthDayHour">
            <summary>
            The date is encoded as YYMMDDHH (Year, Month, Day, Hour).
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.HibcDateFormat.MonthYear">
            <summary>
            The date is encoded as MMYY (Month, Year).
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.HibcDateFormat.MonthDayYear">
            <summary>
            The date is encoded as MMDDYY (Month, Day, Year).
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.HibcDateFormat.YearMonthDay">
            <summary>
            The date is encoded as YYMMDD (Year, Month, Day).
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.HibcDateFormat.YearJulian">
            <summary>
            The date is encoded as YYJJJ (Year, Julian Day).
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.HibcDateFormat.YearJulianHour">
            <summary>
            The date is encoded as YYJJJHH (Year, Julian Day, Hour).
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.SecondaryDataHibc">
            <summary>
            Holds data for the HIBC secondary barcode, encoding date, quantity, and serial/lot/batch number.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.SecondaryDataHibc.Lot">
            <summary>
            Gets or sets the serial, lot, or batch number to be encoded.
            </summary>
            <value>The serial, lot, or batch number, or null.</value>
            <remarks>The serial, lot, or batch number must be between 1 and 13 (inclusive) alphanumeric characters long.
            If there is no serial, lot, or batch number, this property should be set to null, not "".  The default value is null.</remarks>
            <exception cref="T:System.ArgumentException">The specified serial, lot, or batch number is not between 1 and 13 (inclusive)
            characters long, or contains non-alphanumeric characters.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.SecondaryDataHibc.Date">
            <summary>
            Gets or sets the date to be encoded.
            </summary>
            <value>The date to be encoded, or null.</value>
            <remarks>The date should be set to null if there is no date to encode. The default value is null.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.SecondaryDataHibc.DateFormat">
            <summary>
            Gets and sets the format used to encode the date and time supplied.
            </summary>
            <value>The <see cref="!:Barcodes.HIBC.DateFormat"/> format value.</value>
        </member>
        <member name="P:ActiveUp.WebControls.SecondaryDataHibc.Quantity">
            <summary>
            Gets or sets the quantity to encode.
            </summary>
            <value>The quantity to encode, or null for no quantity.</value>
            <remarks>A value of zero will be encoded as a quantity of zero; it will not result in no quantity encoding.
            If you do not want a quantity encoding to appear at all, set this value to null. The default value is 
            null.  The quantity, if set, must be between 0 and 99,999 inclusive.</remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified quantity was not between 0 and 
            99,999 inclusive.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.SecondaryDataHibc.HIBCShortEncoded">
            <summary>
            Gets the shortened HIBC secondary encoding, if one exists.
            </summary>
            <value>The shortened HIBC secondary encoding, or null.</value>
            <remarks>There are two cases in which the HIBC secondary data can be encoded in a shortened form:
            if there is only a serial/lot/batch number present, or there is only a date present and the 
            <see cref="P:ActiveUp.WebControls.SecondaryData.DateFormat"/> is <see cref="!:DateFormat.YearJulian"/>.
            This property will return complete secondary encoding strings in these two cases; otherwise it returns null.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.SecondaryDataHibc.HIBCEncoded">
            <summary>
            Gets the complete HIBC secondary encoding, for use with HIBC primary encodings.
            </summary>
            <value>A complete HIBC secondary encoding.</value>
            <remarks>This encoding is for use in Code39 and Code128 secondary barcodes, and combined barcodes,
            with HIBC LIC data.  It is not for use in EAN128 barcodes; that encoding is returned by 
            <see cref="!:Barcodes.HIBC.SecondaryData.GS1Encoded"/>.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.SecondaryDataHibc.GS1Encoded">
            <summary>
            Gets the complete GS1 secondary encoding, for use in EAN128 barcodes.
            </summary>
            <value>A complete secondary encoding, formatted for inclusion in an EAN128 barcode.</value>
            <remarks>This encoding is for use in EAN128 barcodes, used with GS1 primary data.  It is not suitable
            for use in Code39 or Code128 barcodes used with HIBC LIC primary data; that encoding is returned
            by <see cref="!:Barcodes.HIBC.SecondaryData.HIBCEncoded"/>.</remarks>
        </member>
        <member name="T:ActiveUp.WebControls.PrimaryEncodingMode">
            <summary>
            Barcode formats available to use for the HIBC primary data.
            </summary>
            <remarks>The actual formats available depends on whether the primary data is in HIBC LIC form or GS1 form.</remarks>
        </member>
        <member name="F:ActiveUp.WebControls.PrimaryEncodingMode.Code39">
            <summary>
            Encode HIBC LIC data as a Code39 barcode.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.PrimaryEncodingMode.Code128">
            <summary>
            Encode HIBC LIC data as a Code128 barcode.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.PrimaryEncodingMode.EAN128">
            <summary>
            Encode GS1 data as an EAN128 barcode.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.PrimaryEncodingMode.I2of5">
            <summary>
            Encode GS1 data as an Interleaved 2of5 barcode.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.SecondaryEncodingMode">
            <summary>
            Barcode formats available to use for the HIBC secondary data.
            </summary>
            <remarks>The actual formats available depend on the primary encoding method used.</remarks>
        </member>
        <member name="F:ActiveUp.WebControls.SecondaryEncodingMode.Code39">
            <summary>
            Encode the secondary data as a Code39 barcode.  This is only available if the primary barcode is
            Code39 or Code128.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.SecondaryEncodingMode.Code128">
            <summary>
            Encode the secondary data as a Code128 barcode.  This is only available if the primary barcode is
            Code39 or Code128.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.SecondaryEncodingMode.EAN128">
            <summary>
            Encode the secondary data as an EAN128 barcode.  This is the only option for a separate secondary
            barcode if the primary data is in GS1 format (EAN128 or I2of5).
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.SecondaryEncodingMode.Combined">
            <summary>
            Attempt to combine the secondary data with the primary barcode.  If the primary is encoded as EAN128, 
            this might result in an <see cref="T:System.ArgumentException"/> being thrown due to the total combined
            length being greater than the maximum encodable size.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.SecondaryEncodingMode.None">
            <summary>
            Ignore the secondary data; do not emit a secondary barcode.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.HIBCEncoder">
            <summary>
            A holding class, containing static methods that prepare barcode encoder instances.
            </summary>
            <remarks>The four static methods each return an array of one or two <see cref="!:Barcodes.IBarcodeEncoder"/> objects,
            the first representing the primary barcode, and the second, the secondary barcode, if one is requested.  There are
            two standards used to encode HIBC data: the HIBC LIC (Labeler Identification Code), which consists of a LIC, a PCN
            (Product or Catalog Number) and a Unit of Measure digit; and the GS1, which uses an EAN/UCC assigned GS1 number, along
            with a Unit of Measure digit.  These two primary data standards each carry their own encoding requirements and
            available symbologies, as described in their corresponding methods, 
            <see cref="!:Barcodes.HIBC.HIBCEncoder.EncodeHIBC"/> and
            <see cref="!:Barcodes.HIBC.HIBCEncoder.EncodeGS1"/>.</remarks>
        </member>
        <member name="M:ActiveUp.WebControls.HIBCEncoder.EncodeHIBC(System.String,System.String,System.Byte,ActiveUp.WebControls.SecondaryDataHibc,ActiveUp.WebControls.PrimaryEncodingMode,ActiveUp.WebControls.SecondaryEncodingMode)">
            <summary>
            Encodes an HIBC primary data string.
            </summary>
            <param name="LIC">The Labeler Identification Code, a four character code, consisting of a letter and three alphanumeric characters.</param>
            <param name="PCN">A Product or Catalog Number, consisting of 1-13 alphanumeric characters.</param>
            <param name="unitOfMeasure">A number from 0 to 9, inclusive, representing the unit of measure.</param>
            <param name="secondary">An optional <see cref="!:Barcodes.HIBC.SecondaryData"/> object containing secondary data.</param>
            <param name="primaryMode">The symbology to use for the primary barcode.  Must be <see cref="!:Barcodes.HIBC.PrimaryEncodingMode.Code39"/> or <see cref="!:Barcodes.HIBC.PrimaryEncodingMode.Code128"/>.</param>
            <param name="secondaryMode">The symbology to use for the secondary barcode.  May be any <see cref="!:Barcodes.HIBC.SecondaryEncodingMode"/> value other than <see cref="!:Barcodes.HIBC.SecondaryEncodingMode.EAN128"/>, however,
            if <paramref name="secondary"/> is null, this value must be <see cref="!:Barcodes.HIBC.SecondaryEncodingMode.None"/>.</param>
            <returns>An array of <see cref="!:Barcodes.IBarcodeEncoder"/> objects, containing one or two pre-set encoders.</returns>
            <remarks>This is the same function as <see cref="!:Barcodes.HIBC.HIBCEncoder.EncodeHIBC(string, SecondaryData, PrimaryEncodingMode, SecondaryEncodingMode)"/>, except 
            that the primary data (LIC, PCN, and Unit of Measure) is combined into one parameter in the alternate method.</remarks>
            <exception cref="T:System.ArgumentException">There was an error in one or more of the arguments
            (<paramref name="LIC"/>, <paramref name="PCN"/>, or <paramref name="unitOfMeasure"/>).  The <see cref="P:System.ArgumentException.ParamName"/>
            will be the name of the invalid parameter.</exception>
            <exception cref="T:System.InvalidOperationException">The <paramref name="primaryMode"/> or <paramref name="secondaryMode"/>
            values are invalid for the type of data provided (HIBC vs. GS1).</exception>
            <exception cref="T:System.NullReferenceException">Argument <paramref name="secondary"/> is null and <paramref name="secondaryMode"/> is not <see cref="!:Barcodes.HIBC.SecondaryEncodingMode.None"/>.</exception>
        </member>
        <member name="M:ActiveUp.WebControls.HIBCEncoder.EncodeHIBC(System.String,ActiveUp.WebControls.SecondaryDataHibc,ActiveUp.WebControls.PrimaryEncodingMode,ActiveUp.WebControls.SecondaryEncodingMode)">
            <summary>
            Encodes an HIBC primary data string.
            </summary>
            <param name="primary">The primary data string, consisting of the LIC, the PCN, and the unit of measure digit.</param>
            <param name="secondary">An optional <see cref="!:Barcodes.HIBC.SecondaryData"/> object containing secondary data.</param>
            <param name="primaryMode">The symbology to use for the primary barcode.  Must be <see cref="!:Barcodes.HIBC.PrimaryEncodingMode.Code39"/> or <see cref="!:Barcodes.HIBC.PrimaryEncodingMode.Code128"/>.</param>
            <param name="secondaryMode">The symbology to use for the secondary barcode.  May be any <see cref="!:Barcodes.HIBC.SecondaryEncodingMode"/> value other than <see cref="!:Barcodes.HIBC.SecondaryEncodingMode.EAN128"/>, however,
            if <paramref name="secondary"/> is null, this value must be <see cref="!:Barcodes.HIBC.SecondaryEncodingMode.None"/>.</param>
            <returns>An array of <see cref="!:Barcodes.IBarcodeEncoder"/> objects, containing one or two pre-set encoders.</returns>
            <remarks>This is the same function as <see cref="!:Barcodes.HIBC.HIBCEncoder.EncodeHIBC(string, SecondaryData, PrimaryEncodingMode, SecondaryEncodingMode)"/>, except 
            that the primary data (LIC, PCN, and Unit of Measure) is combined into one parameter in the alternate method.</remarks>
            <exception cref="T:System.ArgumentException">There was an error in the primary data.</exception>
            <exception cref="T:System.InvalidOperationException">The <paramref name="primaryMode"/> or <paramref name="secondaryMode"/>
            values are invalid for the type of data provided (HIBC vs. GS1).</exception>
            <exception cref="T:System.NullReferenceException">Argument <paramref name="secondary"/> is null and <paramref name="secondaryMode"/> is not <see cref="!:Barcodes.HIBC.SecondaryEncodingMode.None"/>.</exception>
        </member>
        <member name="M:ActiveUp.WebControls.HIBCEncoder.EncodeGS1(System.String,ActiveUp.WebControls.SecondaryDataHibc,ActiveUp.WebControls.PrimaryEncodingMode,ActiveUp.WebControls.SecondaryEncodingMode)">
            <summary>
            Encodes the specified GS1 primary data and optional secondary data into one or more barcodes.
            </summary>
            <param name="GS1">The GS1 primary data, consisting of an indicator digit, a twelve digit GS1 identifier, and an optional check digit.</param>
            <param name="secondary">An optional instance of the <see cref="!:Barcodes.HIBC.SecondaryData"/> class, containing secondary data.</param>
            <param name="primaryMode">The symbology to use for the primary barcode.  Must be <see cref="!:Barcodes.HIBC.PrimaryEncodingMode.I2of5"/> or <see cref="!:Barcodes.HIBC.PrimaryEncodingMode.EAN128"/>.</param>
            <param name="secondaryMode">The symbology to use for the secondary barcode.  May be any <see cref="!:Barcodes.HIBC.SecondaryEncodingMode"/> value other than <see cref="!:Barcodes.HIBC.SecondaryEncodingMode.Code39"/>
            or <see cref="!:Barcodes.HIBC.SecondaryEncodingMode.Code39"/>, however,
            if <paramref name="secondary"/> is null, this value must be <see cref="!:Barcodes.HIBC.SecondaryEncodingMode.None"/>.</param>
            <returns>An array of <see cref="!:Barcodes.IBarcodeEncoder"/> objects, containing one or two pre-set encoders.</returns>
            <remarks></remarks>
            <exception cref="T:System.ArgumentException">There was an error in the primary data.</exception>
            <exception cref="T:System.InvalidOperationException">The <paramref name="primaryMode"/> or <paramref name="secondaryMode"/>
            values are invalid for the type of data provided (HIBC vs. GS1).</exception>
            <exception cref="T:System.NullReferenceException">Argument <paramref name="secondary"/> is null and <paramref name="secondaryMode"/> is not <see cref="!:Barcodes.HIBC.SecondaryEncodingMode.None"/>.</exception>
        </member>
        <member name="M:ActiveUp.WebControls.HIBCEncoder.EncodeGS1(System.String,System.String,ActiveUp.WebControls.SecondaryDataHibc,ActiveUp.WebControls.PrimaryEncodingMode,ActiveUp.WebControls.SecondaryEncodingMode)">
            <summary>
            Encodes the specified GS1 primary data and optional secondary data into one or more barcodes.
            </summary>
            <param name="GS1">The GS1 primary data, consisting of an indicator digit, a twelve digit GS1 identifier, and an optional check digit.</param>
            <param name="PCN">An optional Product or Catalog Number, to be included in an EAN128 barcode under Application Identifier (240). Ignored if <paramref name="primaryMode"/> is <see cref="!:Barcodes.HIBC.PrimaryEncodingMode.I2of5"/>.</param>
            <param name="secondary">An optional instance of the <see cref="!:Barcodes.HIBC.SecondaryData"/> class, containing secondary data.</param>
            <param name="primaryMode">The symbology to use for the primary barcode.  Must be <see cref="!:Barcodes.HIBC.PrimaryEncodingMode.I2of5"/> or <see cref="!:Barcodes.HIBC.PrimaryEncodingMode.EAN128"/>.</param>
            <param name="secondaryMode">The symbology to use for the secondary barcode.  May be any <see cref="!:Barcodes.HIBC.SecondaryEncodingMode"/> value other than <see cref="!:Barcodes.HIBC.SecondaryEncodingMode.Code39"/>
            or <see cref="!:Barcodes.HIBC.SecondaryEncodingMode.Code39"/>, however,
            if <paramref name="secondary"/> is null, this value must be <see cref="!:Barcodes.HIBC.SecondaryEncodingMode.None"/>.</param>
            <returns>An array of <see cref="!:Barcodes.IBarcodeEncoder"/> objects, containing one or two pre-set encoders.</returns>
            <remarks></remarks>
            <exception cref="T:System.ArgumentException">There was an error in the GS1 or PCN strings.</exception>
            <exception cref="T:System.InvalidOperationException">The <paramref name="primaryMode"/> or <paramref name="secondaryMode"/>
            values are invalid for the type of data provided (HIBC vs. GS1).</exception>
            <exception cref="T:System.NullReferenceException">Argument <paramref name="secondary"/> is null and <paramref name="secondaryMode"/> is not <see cref="!:Barcodes.HIBC.SecondaryEncodingMode.None"/>.</exception>
            <exception cref="T:System.OverflowException">If <paramref name="primaryMode"/> is <see cref="!:Barcodes.HIBC.PrimaryEncodingMode.EAN128"/>, the resulting barcode
            exceeds the maximum amount of data encodable in an EAN128 barcode.</exception>
        </member>
        <member name="T:ActiveUp.WebControls.ImageToBase64">
            <summary>
            Summary description for ImageToBase64.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ImageToBase64.GetImageFromBase64String(System.String)">
            <summary>
            Transforme une chaîne de caractères
            en base 64 en un objet <see cref="T:System.Drawing.Image"/>
            </summary>
            <param name="str">Chaîne de caractères</param>
            <returns><see cref="T:System.Drawing.Image"/> résultante</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ImageToBase64.GetImageFromBase64String(System.String,System.Boolean)">
            <summary>
            Transforme une chaîne de caractères
            en base 64 en un objet <see cref="T:System.Drawing.Image"/>
            </summary>
            <param name="str">Chaîne de caractères</param>
            <param name="makeTransparent">Si vrai, rend la couleur de fond transparent</param>
            <returns><see cref="T:System.Drawing.Image"/> résultante</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ImageToBase64.GetImageFromBytes(System.Byte[])">
            <summary>
            Transforme un tableau de <see cref="T:System.Byte"/>
            en base 64 en un objet <see cref="T:System.Drawing.Image"/>
            </summary>
            <param name="bytes">tableau de <see cref="T:System.Byte"/></param>
            <returns><see cref="T:System.Drawing.Image"/> résultante</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ImageToBase64.GetImageFromBytes(System.Byte[],System.Boolean)">
            <summary>
            Transforme un tableau de <see cref="T:System.Byte"/>
            en base 64 en un objet <see cref="T:System.Drawing.Image"/>
            </summary>
            <param name="bytes">tableau de <see cref="T:System.Byte"/></param>
            <param name="makeTransparent">Si vrai, rend la couleur de fond transparent</param>
            <returns><see cref="T:System.Drawing.Image"/> résultante</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ImageToBase64.GetBytesFromImage(System.Drawing.Image)">
            <summary>
            Transforme un objet <see cref="T:System.Drawing.Image"/>
            en un tableau de <see cref="T:System.Byte"/>.
            </summary>
            <param name="img">Objet <see cref="T:System.Drawing.Image"/></param>
            <returns>tableau de <see cref="T:System.Byte"/></returns>
        </member>
        <member name="M:ActiveUp.WebControls.ImageToBase64.GetBase64StringFromImage(System.Drawing.Image)">
            <summary>
            Transforme un objet <see cref="T:System.Drawing.Image"/>
            en une chaîne en base 64.
            </summary>
            <param name="img">Objet <see cref="T:System.Drawing.Image"/></param>
            <returns>Chaîne de caractères</returns>
        </member>
        <member name="T:ActiveUp.WebControls.ITF14Encoder">
            <summary>
            An encoder for ITF14 barcodes, used to encode GTIN numbers in a standardized manner.
            </summary>
            <remarks>The ITF14 encoder sets up the module width and rendering flags of the underlying
            Interleaved 2of5 generator.  These should not be changed.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.ITF14Encoder.Text">
            <summary>
            Gets or sets the data to be encoded.
            </summary>
            <value>The data to be encoded.</value>
            <remarks><para>ITF14 can only encode 13 digit strings, beginning with a mode indicator digit as defined in the EAN/UCC
            specification, and ending with a 7, 11, or 12 digit number, corresponding to the EAN/UCC-8, UCC-12, and EAN/UCC-13
            numbers, respectively, without their check digits.  The space between the mode indicator and the 7, 11, or 12 digit 
            number must be filled with zeros so that the total length is 13. (That is, five zeros for a EAN/UCC-8 number,
            one zero for a UCC-12 number, and no zeros for an EAN/UCC-13 number).  The check digit is calculated by the
            encoder, as it might be different from the original check digit in the EAN/UCC number.</para><para>
            The mode indicator is a single digit, 0-9.  To encode standard UCC-12 or EAN/UCC-13 numbers as ITF14,
            use mode 0.  To convert an EAN/UCC-8, UCC-12, or EAN/UCC-13 number to EAN/UCC-14, use 1-8 (the actual
            digit to use is assigned by the EAN/UCC).  Mode indicator 9 is used to encode variable measure trade
            items.  For more information, check the EAN/UCC specifications.</para></remarks>
        </member>
        <member name="P:ActiveUp.WebControls.ITF14Encoder.StandardSize">
            <summary>
            Gets the size that will produce a barcode of the standardized size, 1.25 inches tall.
            </summary>
            <value>The standard size of the barcode.</value>
        </member>
        <member name="M:ActiveUp.WebControls.ITF14Encoder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:Barcodes.ITF14Encoder"/> class.
            </summary>
            <remarks>This constructor sets the module width and rendering mode of the underlying <see cref="!:Barcodes.I2of5Encoder"/>.</remarks>
        </member>
        <member name="T:ActiveUp.WebControls.MSIChecksum">
            <summary>
            The checksumming mode for the MSI encoder to use.
            </summary>
            <remarks><para>The mod-10 checksum is calculated by separating the number to be encoded into two
            numbers, consisting of the digits in odd positions and the digits in even positions (for instance,
            "12345" becomes "135" and "24").  The number containing the rightmost digit is multiplied by two,
            and the digits from this number and the number containing the second-rightmost digit. (135 becomes 270,
            and the digits are added: 2+7+0+2+4=15.)  The check digit is this number subtracted from the next
            highest multiple of 10.</para>
            <para>The mod-11 checksum is calculated by weighting the digits of the number to be encoded, starting
            with a weight of 2 at the rightmost digit, and increasing by 1 for each digit to the left. Once the weight
            goes over 7, it is reset back to 2, so the 7th digit will have a weight of 2, the 8th, a weight of 3, etc.
            The weighted digits are summed, and the check digit is this value mod 11.</para></remarks>
        </member>
        <member name="F:ActiveUp.WebControls.MSIChecksum.None">
            <summary>
            No checksum is appended.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.MSIChecksum.Mod10">
            <summary>
            A mod-10 checksum digit is added.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.MSIChecksum.Mod11">
            <summary>
            A mod-11 checksum digit is added.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.MSIChecksum.Mod1010">
            <summary>
            A mod-10 checksum digit is added, followed by a second mod-10 checksum digit.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.MSIChecksum.Mod1110">
            <summary>
            A mod-11 checksum digit is added, followed by a mod-10 checksum digit.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.MSIEncoder">
            <summary>
            An encoder that produces MSI barcodes.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MSIEncoder.Data">
            <summary>
            Not supported.
            </summary>
            <remarks>Always throws an <see cref="T:System.NotSupportedException"/> exception.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.MSIEncoder.Text">
            <summary>
            Gets or sets the data to be encoded by the encoder.
            </summary>
            <value>The data that is encoded into the barcode.</value>
            <exception cref="T:System.ArgumentException">The data specified could not be encoded into an MSI barcode because
            it contained non-digit characters.  The <see cref="P:System.ArgumentException.ParamName"/> property is set to
            "Digit".</exception>
        </member>
        <member name="P:ActiveUp.WebControls.MSIEncoder.Flags">
            <summary>
            Gets the barcode encoder capabilities.
            </summary>
            <value>Always returns <see cref="!:Barcodes.BarcodeEncoderFlags.Text"/>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.MSIEncoder.TextSymbols">
            <summary>
            Gets the symbols that can be encoded into MSI.
            </summary>
            <value>Always returns <c>"0123456789"</c>.</value>
            <remarks>The encoder can only encode digits.  If any non-digit symbol is passed to the encoder, it will fail.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.MSIEncoder.ChecksumMode">
            <summary>
            Gets the checksum mode that the encoder is using.
            </summary>
            <value>The checksum mode.</value>
            <remarks>The checksum mode can only be set when the encoder is constructed.</remarks>
        </member>
        <member name="M:ActiveUp.WebControls.MSIEncoder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:Barcodes.MSIEncoder"/> class, with no checksum.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.MSIEncoder.#ctor(ActiveUp.WebControls.MSIChecksum)">
            <summary>
            Initializes a new instance of the <see cref="!:Barcodes.MSIEncoder"/> class, with the specified checksum mode.
            </summary>
            <param name="mode">The checksum mode to use.</param>
        </member>
        <member name="T:ActiveUp.WebControls.MSISizer">
            <summary>
            A sizer that controls the size of MSI barcodes.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MSISizer.ModuleWidth">
            <summary>
            Returns the current module width, in pixels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MSISizer.GuardWidth">
            <summary>
            Returns the current guard zone width, in pixels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MSISizer.DPI">
            <summary>
            Gets or sets the current DPI (dots-per-inch) of the barcode.
            </summary>
            <value>The current DPI (dots-per-inch) of the barcode.</value>
            <remarks>
            This value represents the DPI that the barcode will be printed at.  This value defaults to zero, which represents "logical" mode.
            In "logical" mode, the generated barcode represents the relative sizing and positioning of barcode elements, but they are not
            necessarily in the proper size for printing.
            
            If the value is greater than zero, the barcode generator will generate a barcode using the specified DPI.
            </remarks>
            <exception cref="T:System.ArgumentException">The value specified was less than zero.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.MSISizer.Length">
            <summary>
            Gets or sets the number of digits to be encoded into the barcode.  Set by the generator.
            </summary>
            <value>The number of digits to be encoded.</value>
        </member>
        <member name="P:ActiveUp.WebControls.MSISizer.FontHeight">
            <summary>
            Gets the height of the font to use to number the barcode, in pixels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MSISizer.FontHeightAddon">
            <summary>
            Gets the amount of white space to add to the bottom of the barcode, in pixels, for numbering.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MSISizer.WidthWithoutGuard">
            <summary>
            Gets the total width of the barcode, in pixels, without the guard zones.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MSISizer.Width">
            <summary>
            Gets the total width of the barcode, in pixels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MSISizer.Height">
            <summary>
            Gets the minimum height of the barcode, in pixels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MSISizer.ExtraHeight">
            <summary>
            The height of all items added to the barcode.
            </summary>
            <value>The height of all items added to the barcode, in pixels.</value>
            <remarks><para>For MSI barcodes, the only extra height comes from the text at the bottom of the barcode.</para>
            <para>This property is meant to be used to generate a desired barcode height.  To calculate the height
            of the size to pass to <see cref="!:Barcodes.IBarcodeGenerator.GenerateBarcode"/>, multiply the desired height
            (in inches) by the DPI, and add this number to it.</para><para>This property's value is potentially impacted by the value of <see cref="!:Barcodes.IBarcodeSizer.Mode"/>.
            The barcode render mode flags should be set before using this value.</para></remarks>
        </member>
        <member name="M:ActiveUp.WebControls.MSISizer.IsValidSize(System.Drawing.Size)">
            <summary>
            Checks to see if a specified size is valid.
            </summary>
            <param name="size">The size to check for validity.</param>
            <returns>True if the size is valid, false otherwise.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.MSISizer.GetValidSize(System.Drawing.Size)">
            <summary>
            Returns the largest valid size that is contained within the specified size.
            </summary>
            <param name="size">The maximum size to use.</param>
            <returns>The largest valid size that is less than or equal to the specified size.</returns>
            <exception cref="T:System.ArgumentException">The specified size is smaller than the minimum size,
            in one or both dimensions.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.MSISizer.MinimumModule">
            <summary>
            Gets the minimum module width, in mils.
            </summary>
            <value>Always returns 7.5 mils (.19 mm). (1 mil is 1/1000th of an inch, or .0254 mm).</value>
            <remarks>This minimum module size was not derived from a specification, so it might not be correct.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.MSISizer.Module">
            <summary>
            Gets and sets module width of the barcode (in mils).
            </summary>
            <value>The module width of the barcode, in mils (1 mil is 1/1000 of an inch). The default value is 10 mils (.254 mm).</value>
            <remarks>The module width is the width of the narrowest bar.  The widths of spaces,
            wide bars, wide spaces, quiet zones, etc. are multiples of this module width.  Changing the module width of a barcode
            changes the total width of the barcode, as returned by <see cref="!:Barcodes.IBarcodeSizer.Width"/>.</remarks>
            <exception cref="T:System.ArgumentException">The specified module width is less than <see cref="!:Barcodes.MSISizer.MinimumModule"/>.</exception>
        </member>
        <member name="T:ActiveUp.WebControls.MSIGenerator">
            <summary>
            A generator that generates MSI barcodes.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MSIGenerator.Data">
            <summary>
            Gets or sets the byte array of encoded data used by the generator to generate the barcode.
            </summary>
            <value>The byte array of encoded data.</value>
            <remarks>This data only has very basic validation to ensure that it does not cause exceptions
            when used (such as array overruns). It is not checked for validity.  The user should not set this
            directly, instead, it should be set by an encoder class.  This property does <b>not</b> make a
            copy of the byte array that is supplied to it, it only keeps a reference.  The generator's behavior
            if the underlying byre array is modified, is undefined.</remarks>
            <exception cref="T:System.ArgumentException">The specified byte array is invalid, in either length or content.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.MSIGenerator.Flags">
            <summary>
            Gets the barcode generator capability flags.
            </summary>
            <value>Always returns <see cref="!:Barcodes.BarcodeGeneratorFlags.Linear"/>|<see cref="!:Barcodes.BarcodeGeneratorFlags.VariableLength"/>.</value>
        </member>
        <member name="M:ActiveUp.WebControls.MSIGenerator.GenerateBarcode(System.Drawing.Size)">
            <summary>
            Generates an MSI barcode of the specified size, using the data that has been set previously by <see cref="!:Barcodes.MSIEncoder"/>.
            </summary>
            <param name="size">The size of the barcode to return.</param>
            <returns>A bitmap of the barcode, of the specified size.</returns>
            <exception cref="T:System.ArgumentException">The specified size is invalid.</exception>
            <exception cref="T:System.InvalidOperationException">The data that is to be encoded has not been set yet.</exception>
        </member>
        <member name="M:ActiveUp.WebControls.MSIGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:Barcodes.MSIGenerator"/> class.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.PostnetEncoder">
            <summary>
            An encoder for Postnet barcodes.
            </summary>
            <remarks>Postnet is used by the US Postal Service to encode ZIP codes and destination codes.  It 
            can encode digit sequences of exactly 5, 9, or 11 digits (not including check digit).  The barcode includes a check digit
            which may be precalculated and appended before it is passed to the encoder; this check digit will
            be verified by the encoder. It has strictly defined dimensional requirements.</remarks>
            <seealso cref="!:Barcodes.PostnetGenerator"/>
            <seealso cref="!:Barcodes.PostnetSizer"/>
        </member>
        <member name="P:ActiveUp.WebControls.PostnetEncoder.Text">
            <summary>
            Gets or sets the data to be encoded into Postnet.
            </summary>
            <value>The string to be encoded, or null.</value>
            <remarks>Postnet encodes 5, 9, or 11 digit ZIP codes and delivery codes.  The encoder will accept strings
            of 5, 9, or 11 digits, and will automatically calculate and append the check digit.  The
            encoder will also accept strings of 6, 10, and 12 digits, if the check digit is already known.  The
            encoder will check this digit, and throw an exception if it is invalid.</remarks>
            <exception cref="T:System.ArgumentException">The specified string was not null, did not have a valid number of digits,
            was not composed of digits 0-9, or included an invalid check digit.  The <see cref="P:System.ArgumentException.ParamName"/>
            property will be "Length", "Digit", or "Check", respectively, depending on the error.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.PostnetEncoder.Flags">
            <summary>
            Gets flags that represent the encoder's capabilities.
            </summary>
            <value>Always returns <see cref="!:Barcodes.BarcodeEncoderFlags.Text"/>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.PostnetEncoder.TextSymbols">
            <summary>
            Gets the symbols that can be encoded.
            </summary>
            <value>Always returns <c>"0123456789"</c>.</value>
            <remarks>The encoder can only encode digits.  If any non-digit symbol is passed to the encoder, it will fail.</remarks>
        </member>
        <member name="M:ActiveUp.WebControls.PostnetEncoder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:Barcodes.PostnetEncoder"/> class.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.PlanetEncoder">
            <summary>
            An encoder for Pplanet barcodes.
            </summary>
            <remarks>Pplanet is used by the US Postal Service to encode tracking codes.  It 
            can encode digit sequences of exactly 11 or 13 digits (not including check digit).  The barcode includes a check digit
            which may be precalculated and appended before it is passed to the encoder; this check digit will
            be verified by the encoder. It has strictly defined dimensional requirements.</remarks>
            <seealso cref="!:Barcodes.PostnetGenerator"/>
            <seealso cref="!:Barcodes.PostnetSizer"/>
        </member>
        <member name="P:ActiveUp.WebControls.PlanetEncoder.Text">
            <summary>
            Gets or sets the data to be encoded into Planet.
            </summary>
            <value>The string to be encoded, or null.</value>
            <remarks>Postnet encodes 11 or 13 digit tracking codes.  The encoder will accept strings
            of 11 or 13 digits, and will automatically calculate and append the check digit.  The
            encoder will also accept strings of 12 or 14 digits, if the check digit is already known.  The
            encoder will check this digit, and throw an exception if it is invalid.</remarks>
            <exception cref="T:System.ArgumentException">The specified string was not null, did not have a valid number of digits,
            was not composed of digits 0-9, or included an invalid check digit.  The <see cref="P:System.ArgumentException.ParamName"/>
            property will be "Length", "Digit", or "Check", respectively, depending on the error.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.PlanetEncoder.Flags">
            <summary>
            Gets flags that represent the encoder's capabilities.
            </summary>
            <value>Always returns <see cref="!:Barcodes.BarcodeEncoderFlags.Text"/>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.PlanetEncoder.TextSymbols">
            <summary>
            Gets the symbols that can be encoded.
            </summary>
            <value>Always returns <c>"0123456789"</c>.</value>
            <remarks>The encoder can only encode digits.  If any non-digit symbol is passed to the encoder, it will fail.</remarks>
        </member>
        <member name="M:ActiveUp.WebControls.PlanetEncoder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:Barcodes.PlanetEncoder"/> class.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.PostnetSizer">
            <summary>
            The sizer that controls the sizing of Postnet and Planet barcodes.
            </summary>
            <seealso cref="!:Barcodes.PostnetGenerator"/>
        </member>
        <member name="P:ActiveUp.WebControls.PostnetSizer.Length">
            <summary>
            Gets or sets the number of digits to be encoded in the barcode.
            </summary>
            <value>The number of digits to encode in the barcode, not including the check digit.</value>
        </member>
        <member name="P:ActiveUp.WebControls.PostnetSizer.Width">
            <summary>
            Gets the only valid width of the barcode.
            </summary>
            <value>The width of the barcode, in pixels.</value>
        </member>
        <member name="P:ActiveUp.WebControls.PostnetSizer.Height">
            <summary>
            Gets the only valid height of the barcode.
            </summary>
            <value>The height of the barcode, in pixels.</value>
        </member>
        <member name="P:ActiveUp.WebControls.PostnetSizer.ExtraHeight">
            <summary>
            The height of all items added to the barcode.
            </summary>
            <value>Since the barcode's dimensions are fixed, this always returns 0.</value>
        </member>
        <member name="P:ActiveUp.WebControls.PostnetSizer.DPI">
            <summary>
            Gets or sets the dots-per-inch (DPI) of the barcode.
            </summary>
            <value>The current DPI of the barcode, or zero for "logical mode".</value>
            <remarks>If the DPI is set to zero, the generator operates in "logical mode," which produces
            barcodes with bars of the proper relative size and positioning, but not suitable for printing.
            If the barcodes are to be printed, the DPI must be set.  Due to the strict nature of the dimensional
            requirements, the barcode cannot be rendered at certain DPIs.  If the barcode cannot be rendered at
            the specified DPI, it will throw an exception when that DPI is set.
            </remarks>
            <exception cref="T:System.ArgumentException">The specified DPI is less than zero, or the barcode
            cannot be rendered properly at the specified DPI.</exception>
        </member>
        <member name="M:ActiveUp.WebControls.PostnetSizer.IsValidSize(System.Drawing.Size)">
            <summary>
            Checks to see if a specified size is valid.
            </summary>
            <param name="size">A size to test for validity.</param>
            <returns>True if this size may be passed to <see cref="!:Barcodes.PostnetGenerator.GenerateBarcode"/>, false otherwise.</returns>
            <remarks>Because this barcode has fixed dimensions, the only valid size is <see cref="!:Barcodes.BarcodeSizer.Size"/>.</remarks>
        </member>
        <member name="M:ActiveUp.WebControls.PostnetSizer.GetValidSize(System.Drawing.Size)">
            <summary>
            Given a size, returns the largest valid size contained by that size.
            </summary>
            <param name="size">A maximum size, from which to find a valid size.</param>
            <returns>A valid size which may be passed to <see cref="!:Barcodes.IBarcodeGenerator.GenerateBarcode"/>.</returns>
            <exception cref="T:System.ArgumentException">The specified size is smaller than the minimum size in one or both dimensions.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.PostnetSizer.LongBarHeight">
            <summary>
            Gets the current long bar height, in pixels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.PostnetSizer.ShortBarHeight">
            <summary>
            Gets the current short bar height, in pixels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.PostnetSizer.BarWidth">
            <summary>
            Gets the current bar width, in pixels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.PostnetSizer.GapWidth">
            <summary>
            Gets the current gap width, in pixels.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.PostnetGenerator">
            <summary>
            A generator that produces Postnet and Planet barcodes.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.PostnetGenerator.Data">
            <summary>
            Gets or sets the byte array of encoded data used by the generator to generate the barcode.
            </summary>
            <value>The byte array of encoded data.</value>
            <remarks>This data only has very basic validation to ensure that it does not cause exceptions
            when used (such as array overruns). It is not checked for validity.  The user should not set this
            directly, instead, it should be set by an encoder class.  This property does <b>not</b> make a
            copy of the byte array that is supplied to it, it only keeps a reference.  The generator's behavior
            if the underlying byre array is modified, is undefined.</remarks>
            <exception cref="T:System.ArgumentException">The specified byte array is invalid, in either length or content.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.PostnetGenerator.Flags">
            <summary>
            Gets the barcode generator capability flags.
            </summary>
            <value>Always returns <see cref="!:Barcodes.BarcodeGeneratorFlags.Linear"/>|<see cref="!:Barcodes.BarcodeGeneratorFlags.VariableLength"/>|<see cref="!:Barcodes.BarcodeGeneratorFlags.FixedDimensions"/>.</value>
        </member>
        <member name="M:ActiveUp.WebControls.PostnetGenerator.GenerateBarcode(System.Drawing.Size)">
            <summary>
            Generates a bitmap of the barcode, of the specified size and data.
            </summary>
            <param name="size">The size of barcode to generate.</param>
            <returns>A bitmap of the generated barcode.</returns>
            <remarks>As the dimensions of the Postnet/Planet barcode are strictly defined, the only valid size is
            the size returned by <see cref="!:Barcodes.BarcodeSizer.Size"/>.</remarks>
            <exception cref="T:System.ArgumentException">The specified size is invalid.</exception>
            <exception cref="T:System.InvalidOperationException">The data that is to be encoded has not been set yet.</exception>
        </member>
        <member name="M:ActiveUp.WebControls.PostnetGenerator.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="!:Barcodes.PostnetGenerator"/> class.
            </summary>
            <param name="isPlanet">Specifies whether to use Planet encoding (true) or Postnet encoding(false).</param>
        </member>
        <member name="T:ActiveUp.WebControls.DateFormatLocale">
            <summary>
            Represents the locale date format.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.DateFormatLocale.de">
            <summary>
            German locale format.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.DateFormatLocale.en">
            <summary>
            English locale format.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.DateFormatLocale.en_GB">
            <summary>
            English (Great Britain) locale format.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.DateFormatLocale.fr">
            <summary>
            French locale format.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.DateFormatLocale.it">
            <summary>
            Italian locale format.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.DateFormatLocale.es">
            <summary>
            Spanish locale format.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.DateFormatLocale.pt">
            <summary>
            Portuguese locale format.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Calendar">
            <summary>
            Active Calendar is an ASP.NET server control that allows users to select a date and/or time quickly using a professional looking date picker with a client-side managed event system. No postback to the server required, no external script file required.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Calendar._useCounter">
            <summary>
            Used for the license counter.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Calendar.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Calendar.RegisterScriptBlock">
            <summary>
            Register the client side script block in the ASP page.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Calendar.OnPreRender(System.EventArgs)">
            <summary>
            Raises the PreRender event.
            </summary>
            <remarks>This method notifies the server control to perform any necessary prerendering steps prior to saving view state and rendering content.</remarks>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data. </param>
        </member>
        <member name="M:ActiveUp.WebControls.Calendar.DetermineRenderLevel">
            <summary>
            Determine if we need to register the client side script and render the calendar, selectors with validation or selectors only.
            </summary>
            <returns>0 if scripting not allowed, 1 if not an uplevel browser but scripting allowed, 2 if all is OK.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.Calendar.GetDays(System.Int32,System.Int32)">
            <summary>
            Returns the number of days in the specified month of the specified year (leap year check).
            </summary>
            <param name="year">The year</param>
            <param name="month">The month</param>
            <returns>The number of days</returns>
        </member>
        <member name="M:ActiveUp.WebControls.Calendar.OnInit(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Init"/>
            event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Calendar.UpdateLanguage">
            <summary>
            Updates the language.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Calendar.LoadLocalizationSettings(System.String)">
            <summary>
            Loads the localization settings.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Calendar.ParseToNumber(System.String)">
            <summary>
            Attempts to convert the inputted string to an Integer
            If it cant it returns 1
            Enlighten Designs
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.Calendar.GetMeridiemHour(System.Int32)">
            <summary>
            Return the meridiem hour from the military hour.
            </summary>
            <param name="hour">The military hour.</param>
            <returns>The meridiem hour.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.Calendar.GetMiliratyHour(System.Int32,System.Int32)">
            <summary>
            Return the miliraty hour from the specified meridiem hour.
            </summary>
            <param name="hour">The meridiem hour.</param>
            <param name="meridiem">The meridiem.</param>
            <returns>The military hour.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.Calendar.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends server control content to a provided HtmlTextWriter object, which writes the content to be rendered on the client.
            </summary>
            <param name="output">The HtmlTextWriter object that receives the server control content.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Calendar.WriteSelector(System.Web.UI.HtmlTextWriter,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)">
            <summary>
            This method create a selector based on the parameters.
            </summary>
            <param name="output">The HtmlTextWriter to write.</param>
            <param name="suffix">The suffix to use to identify the selector with the LoadPostData method.</param>
            <param name="onchange">The value of the OnChange attribute of the selector to use with the client side validator.</param>
            <param name="min">The minimum value of the selector.</param>
            <param name="max">The maximum value of the selector.</param>
            <param name="padding">The number of chars to use with padding.</param>
            <param name="selectedValue">The selected value.</param>
            <param name="show">if set to <c>true</c> shows the selector.</param>
            <param name="relative">if set to <c>true</c> use relative position.</param>
            <param name="allowNull">if set to <c>true</c> allow null value.</param>
            <param name="nullChars">The null chars.</param>
            <param name="increment">The increment.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Calendar.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Processes post back data for an the server control.
            </summary>
            <param name="postDataKey">The key identifier for the control.</param>
            <param name="postCollection">The collection of all incoming name values.</param>
            <returns>true if the server control's state changes as a result of the post back; otherwise false.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.Calendar.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
            <summary>
            Signals the server control object to notify the ASP.NET application that the state of the control has changed.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Calendar.RaisePostDataChangedEvent">
            <summary>
            When implemented by a class, signals the server control object to notify the ASP.NET application that the state of the
            control has changed.
            </summary>
        </member>
        <member name="E:ActiveUp.WebControls.Calendar.DateChanged">
            <summary>
            Occurs when the Date property value changes.
            </summary>
        </member>
        <member name="E:ActiveUp.WebControls.Calendar.DayClicked">
            <summary>
            Occurs when a day is clicked.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Calendar.DateChangedEventHandler">
            <summary>
            The DateChanged event handler.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Calendar.DayClickedEventHandler">
            <summary>
            The DayClicked event handler.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Calendar.OnDateChanged(ActiveUp.WebControls.DateChangedEventArgs)">
            <summary>
            Raises the DateChanged event.
            </summary>
            <param name="e"> <see cref="T:ActiveUp.WebControls.DateChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Calendar.OnDayClickedServer(ActiveUp.WebControls.DayClickedEventArgs)">
            <summary>
            Raise the DayClickedServer.
            </summary>
            <param name="e"><see cref="T:ActiveUp.WebControls.DayClickedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.BackColor">
            <summary>
            Gets or sets the background color of the <see cref="T:ActiveUp.WebControls.Toolbar"/>.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.BorderWidth">
            <summary>
            Gets or sets the border width of the calendar.
            </summary>
            <value></value>
            <exception cref="T:System.ArgumentException">The specified border width is a negative value.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.DayNameFormat">
            <summary>
            Gets or sets the displayed format for the days header.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.WeekNumberText">
            <summary>
            Gets or sets the text of the week number.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.Format">
            <summary>
            Gets or sets the format to use to render the selectors.
            </summary>
            <remarks>You can specify the display layout using the <c>format specifiers</c> like <c>"hour"</c> or <c>"month"</c>.<br></br>
            Fields must be separated by ; (semicolon) char. Non reconized fields are send to the HtmlTextWriter as literal text.<br></br>
            Here are some examples (<c>[</c> and <c>]</c> represent a selector:<br></br><br></br>
            <c>"month;/;day;/;year"</c> will display<br></br><c>[MONTH]/[DAY]/[YEAR]</c>.<br></br><br></br>
            <c>"hour;:;minute"</c> will display<br></br><c>[HOUR]:[MINUTE]</c>.<br></br><br></br>
            <c>"Date : ;day;/;month;/;year; Time : ;hour;:;minute;:;second"</c> will display<br></br><c>Date : [DAY]/[MONTH]/[YEAR] Time : [HOUR]:[MINUTE]:[SECOND]</c>.<br></br><br></br>
            <table><tr><td bgcolor="#F0F0F0">Format Specifier</td><td bgcolor="#F0F0F0">Name</td></tr>
            <tr><td><b>day</b></td><td>The day part (1 to 31).</td></tr>
            <tr><td><b>month</b></td><td>The month part (1 to 12).</td></tr>
            <tr><td><b>year</b></td><td>The year part (variable).</td></tr>
            <tr><td><b>hour</b></td><td>The hour part (0 to 23).</td></tr>
            <tr><td><b>minute</b></td><td>The minute part (0 to 59).</td></tr>
            <tr><td><b>second</b></td><td>The second part (0 to 59).</td></tr>
            <tr><td><b>millisecond</b></td><td>The millisecond part (0 to 999).</td></tr>
            <tr><td><i>other literal</i></td><td>Rendered as literal text.</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.FirstDayOfWeek">
            <summary>
            Gets or sets the first day of the week.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.MonthNamesDisabled">
            <summary>
            Specify if you want to display month names or month numbers. False by default.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.ShowDayHeader">
            <summary>
            Specify if you want to display day header. True by default.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.PrefixTodayFooter">
            <summary>
            Specify the prefix of the today date located in the footer.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.ShowTodayFooter">
            <summary>
            Specify if you want to display today footer. False by default.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.NextMonthText">
            <summary>
            Gets or sets the text displayed for next month the navigation.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.NextMonthImage">
            <summary>
            Gets or sets the image displayed for next month the navigation.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.PrevMonthText">
            <summary>
            Gets or sets the text displayed for previous month the navigation.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.PrevMonthImage">
            <summary>
            Gets or sets the image displayed for previous month the navigation.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.NextYearText">
            <summary>
            Gets or sets the text displayed for next year the navigation.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.NextYearImage">
            <summary>
            Gets or sets the image displayed for next year the navigation.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.PrevYearText">
            <summary>
            Gets or sets the text displayed for previous year the navigation.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.PrevYearImage">
            <summary>
            Gets or sets the image displayed for previous year the navigation.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.EnableClientScript">
            <summary>
            Gets or sets a value indicating whether client-side validation is enabled.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.MinDate">
            <summary>
            Gets or sets the minimum date to display selectable.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.MaxDate">
            <summary>
            Gets or sets the maximum date to display selectable.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.CellPadding">
            <summary>
            Gets or sets the amount of space between cells.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.CellSpacing">
            <summary>
            Gets or sets the amount of space between the content of cells and the cell's border.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.AutoAdjust">
            <summary>
            Set to true is we want to auto adjust the maximum and/or minimum year with the data.
            </summary>
            <remarks>Setting a high value to <see cref="P:ActiveUp.WebControls.Calendar.MaxDate"/> or setting a low value in <see cref="P:ActiveUp.WebControls.Calendar.MinDate"/> can produce performance problem.
            For each year, more than 20 bytes are added to the browser HTML output.
            By setting this property to true, you can prevent from exception throws without having to set very high maximum year or very low minimum year.
            If the maximum year value is less than the actual date year value, the maximum year will be adjusted to the actual date year. Same for the minimum year.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.ShowNextPrevMonth">
            <summary>
            Gets or sets the value indicating wheter Active Calendar displays the next and previous month navigation elements.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.ShowNextPrevYear">
            <summary>
            Gets or sets the value indicating wheter Active Calendar displays the next and previous year navigation elements.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.ShowWeekNumber">
            <summary>
            Gets or sets the value indicating wheter Active Calendar displays the number of week.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.ShowMonth">
            <summary>
            Gets or sets the value indicating wheter Active Calendar displays the months selector.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.ShowHeaderNavigation">
            <summary>
            Gets or sets the value indicating wheter Active Calendar displays the header navigation.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.ShowYear">
            <summary>
            Gets or sets the value indicating wheter Active Calendar displays the years selector.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.WeekNumberFactor">
            <summary>
            Gets or sets the factor used to increase or decrease the week number.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.UseSelectors">
            <summary>
            Gets or sets the value indicating if you want to use selectors to select all the date elements.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.ScriptDirectory">
            <summary>
            Gets or sets the relative or absolute path to the directory where the API javascript file is.
            </summary>
            <remarks>If the value of this property is string.Empty, the external file script is not used and the API is rendered in the page together with the control render.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.UseTime">
            <summary>
            Gets or sets the value indicating if you want to allow time selecting in the calendar.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.Months">
            <summary>
            Gets or sets the month names.
            </summary>
            <remarks>
            <code>
            // This line will replace the january month name by 'Janvier'
            MyDate.Months[0] = "Janvier";
            
            // This line will replace the december month name by 'Décembre (noel)'
            MyDate.Months[11] = "Décembre (noel)";
            </code>
            </remarks>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.SetMonthNames">
            <summary>
            Sets the month names.
            </summary>
            <remarks>
            This array of string contains the month names. You can set your own month names to match with your culture. If your website is in french, you will prefer use Février in replacment of February.
            By default, the months are in english. If the <see cref="P:ActiveUp.WebControls.Calendar.MonthNamesDisabled"/> property is set to true, numbers will replace month names.
            <code>
            // Please verify that MonthNamesDisabled property is not set to true
            &lt;AU:ActiveCalendar runat="server" id="MyCalendar" SetMonthNames="Janvier,F&amp;eacute;vrier,Mars,Avril,Mai,Juin,Juillet,Ao&amp;ucirc;t,Septembre,Octobre,Novembre,D&amp;eacute;cembre"&gt;&lt;/AU:ActiveDateTime&gt;
            </code>
            </remarks>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.Days">
            <summary>
            Gets or sets the day names.
            </summary>
            <remarks>
            <code>
            // This line will replace the sunday day name by 'DIM'
            MyDate.Days[0] = "DIM";
            
            // This line will replace the saturday day name by 'SAM'
            MyDate.Days[6] = "SAM";
            </code>
            </remarks>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.SetDayNames">
            <summary>
            Sets the day names.
            </summary>
            <remarks>
            This array of string contains the day names. You can set your own day names to match with your culture. If your website is in french, you will prefer use LUN (Lundi) in replacment of MON (Monday).
            By default, the days are in english. If the <see cref="P:ActiveUp.WebControls.Calendar.ShowDayHeader"/> property is set to true, the day names will not be displayed.
            <code>
            // Please verify that DayNamesDisabled property is not set to true
            &lt;AU:ActiveCalendar runat="server" id="MyCalendar" SetDayNames="DIM,LUN,MAR,MER,JEU,VEN,SAM"&gt;&lt;/AU:ActiveDateTime&gt;
            </code>
            </remarks>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.LocalizationFile">
            <summary>
            Gets or sets the file with the localized labels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.MultiSelection">
            <summary>
            Allow to select several dates.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.SelectedDate">
            <summary>
            Gets or sets the selected date.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.VisibleDate">
            <summary>
            Gets or sets the visible date.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.BlockedDates">
            <summary>
            Gets or sets the collection containing the blocked dates.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.SelectedDates">
            <summary>
            Gets or sets the collection containing the selected dates.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.IconToolTip">
            <summary>
            Gets or sets the tooltip text of the icon.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.IconPath">
            <summary>
            Gets or sets the relative path of the icon.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.UseDatePicker">
            <summary>
            Indicates if the calendar is used as picker calendar.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.ShowDateOnStart">
            <summary>
            Gets or sets the values indicates if the selected date must be displayed in the textbox when the application start.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.ExternalScript">
            <summary>
            Gets or sets the relative or absolute path to the external ActiveCalendar API javascript file.
            </summary>
            <remarks>If the value of this property is string.Empty, the external file script is not used and the API is rendered in the page together with the ActiveCalendar render.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.OnDayClicked">
            <summary>
            Gets or sets the additional JScript client-side functions to call when a click on a day occurs.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.OnBlurPicker">
            <summary>
            Gets or sets the additional JScript client-side functions to call when a blur event on the picker textbox occurs.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.CssClass">
            <summary>
            Gets or sets the Cascading Style Sheet (CSS) class rendered by the calendar on the client.
            </summary>
            <value></value>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.DayOverStyle">
            <summary>
            Gets or sets the style properties of the day over.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.DayHeaderStyle">
            <summary>
            Gets or sets the style properties of the day names header.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.DayStyle">
            <summary>
            Gets or sets the style properties of the day.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.WeekEndDayStyle">
            <summary>
            Gets or sets the style properties of the weekend days.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.WeekNumberStyle">
            <summary>
            Gets or sets the style properties of the weekend number.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.NextPrevStyle">
            <summary>
            Gets or sets the style properties of the next and previous navigation elements.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.SelectedDayStyle">
            <summary>
            Gets or sets the style properties of the selected day.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.TitleStyle">
            <summary>
            Gets or sets the style properties of the title.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.TodayFooterStyle">
            <summary>
            Gets or sets the style properties of the today footer.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.TimeStyle">
            <summary>
            Gets or sets the properties style of the time.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.BlockedDayStyle">
            <summary>
            Gets or sets the style properties of the blocked day.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.OtherMonthDayStyle">
            <summary>
            Gets or sets the style properties of the day that is not in the selected month.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.TodayDayStyle">
            <summary>
            Gets or sets the style properties of the today day.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.SelectorStyle">
            <summary>
            Gets or sets the style properties of the selectors.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.StyleDates">
            <summary>
            Gets or sets the collection containing the style for a particular date.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.PickerTextBoxStyle">
            <summary>
            Gets or sets the style properties of the textbox in case in picker mode.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.ToolTipStyle">
            <summary>
            Gets or sets the style properties of the tooltip.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.AutoPostBack">
            <summary>
            Indicates if you want to generate a postback each times a date is selected.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.NavigationChangeDate">
            <summary>
            Gets or sets if the date must be change when the navigation change.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.AutoDetectSsl">
            <summary>
            Specify whether you want the editor to auto detect the SSL environment.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.EnableSsl">
            <summary>
            Set to true if you need to use the control in a secure web page.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.DateFormatLocale">
            <summary>
            Gets or sets the local format used.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.UseCustomDateFormat">
            <summary>
            Gets or sets if you want to use the custom date format.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.CustomDateFormat">
            <summary>
            Gets or sets the custom date format.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.Use24HourFormat">
            <summary>
            Gets or sets value indicating if you want to use the 24h (military) format.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.AllowNull">
            <summary>
            Gets or sets then value indicating if the control can accept null value (DateTime.MinValue).
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.ToolTipCustomDates">
            <summary>
            Gets or sets the tooltip text for a particular date.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.ToolTipBlocked">
            <summary>
            Tooltip text of the blocked dates.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.ToolTipWeekend">
            <summary>
            Tooltip text of the weekend dates.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.ToolTipNormal">
            <summary>
            Tooltip text of the normal dates.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.ToolTipOther">
            <summary>
            Tooltip text of the other dates.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.ToolTipSelected">
            <summary>
            Tooltip text of the selected date.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Calendar.ToolTipToday">
            <summary>
            Tooltip text of the today date.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.CalendarDayStyleFull">
            <summary>
            Represents the full style for client-side manipulator of a <see cref="T:ActiveUp.WebControls.CalendarDayStyleFull"/>.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.CalendarDayStyleFull._backgroundImage">
            <summary>
            The background image of the element.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.CalendarDayStyleFull.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.CalendarDayStyleFull.AddAttributesToRender(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.WebControl,System.String)">
            <summary>
            Adds HTML attributes and styles that need to be rendered to the specified System.Web.UI.HtmlTextWriter.
            </summary>
            <param name="writer">A System.Web.UI.HtmlTextWriter that represents the output stream to render HTML content on the client.</param>
            <param name="owner">A WebControl or WebControl derived object that represents the Web server control associated with the Style.</param>
            <param name="imageDir">The directory where the images are located.</param>
        </member>
        <member name="P:ActiveUp.WebControls.CalendarDayStyleFull.BackgroundImage">
            <summary>
            Gets or sets the background image.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.CalendarDayStyleShort">
            <summary>
            Represents the short style for client-side manipulator of a <see cref="T:ActiveUp.WebControls.CalendarDayStyleShort"/>.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.CalendarDayStyleShort._foreColor">
            <summary>
            The foreground color of the element.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.CalendarDayStyleShort._backColor">
            <summary>
            The background color of the element.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.CalendarDayStyleShort._backgroundImage">
            <summary>
            The background image of the element.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.CalendarDayStyleShort.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.CalendarDayStyleShort.ForeColor">
            <summary>
            Gets or sets the foreground color.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.CalendarDayStyleShort.BackColor">
            <summary>
            Gets or sets the background color.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.CalendarDayStyleShort.BackgroundImage">
            <summary>
            Gets or sets the background image.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.CalendarDayStyleShort.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Adds HTML attributes and styles that need to be rendered to the specified System.Web.UI.HtmlTextWriter.
            </summary>
            <param name="writer">A System.Web.UI.HtmlTextWriter that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:ActiveUp.WebControls.CalendarDayStyleShort.AddAttributesToRender(System.Web.UI.HtmlTextWriter,System.String)">
            <summary>
            Adds HTML attributes and styles that need to be rendered to the specified System.Web.UI.HtmlTextWriter.
            </summary>
            <param name="writer">A System.Web.UI.HtmlTextWriter that represents the output stream to render HTML content on the client.</param>
            <param name="imageDir">The directory where the images are located.</param>
        </member>
        <member name="P:ActiveUp.WebControls.CalendarDayStyleShort.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            <value><c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:ActiveUp.WebControls.DateChangedEventArgs">
            <summary>
            Provides data for the DateChanged events of the <see cref="T:ActiveUp.WebControls.DateChangedEventArgs"/> control.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.DateChangedEventArgs.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Initializes a new instance of DateChangedEventArgs class.
            </summary>
            <param name="oldDate">The date value before the change.</param>
            <param name="newDate">The date value after the change.</param>
        </member>
        <member name="P:ActiveUp.WebControls.DateChangedEventArgs.OldDate">
            <summary>
            The date value before the change.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.DateChangedEventArgs.NewDate">
            <summary>
            The date value after the change.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.DateCollection">
            <summary>
            A Collection of <see cref="T:ActiveUp.WebControls.DateCollectionItem"/>.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.DateCollection._dateCollection">
            <summary>
            A collection of DateCollectionItem.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.DateCollection.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.DateCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets a <see cref="T:ActiveUp.WebControls.DateCollectionItem"/> at the specified index.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.DateCollection.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.DateCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.DateCollection.IsFixedSize">
            <summary>
            Gets a boolean value indicating whether the current instance has a fixed size.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.DateCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the current instance is read-only.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.DateCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.DateCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements from the current instance to the specified collection, starting at the specified index in the array.
            </summary>
            <param name="array">A one-dimensional, zero-based Array that is the destination of the elements copied from the current instance. </param>
            <param name="index">A Int32 that specifies the zero-based index in array at which copying begins.</param>
        </member>
        <member name="P:ActiveUp.WebControls.DateCollection.Item(System.Int32)">
            <summary>
            Gets or sets a <see cref="T:ActiveUp.WebControls.DateCollectionItem"/> at the specified index.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.DateCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific <see cref="T:ActiveUp.WebControls.DateCollectionItem"/> from the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.DateCollectionItem"/> to remove from the collection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.DateCollection.Remove(ActiveUp.WebControls.DateCollectionItem)">
            <summary>
            Removes a <see cref="T:ActiveUp.WebControls.DateCollectionItem"/> from the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.DateCollectionItem"/> to remove from the collection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.DateCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts a <see cref="T:ActiveUp.WebControls.DateCollectionItem"/> to the collection at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="item">The <see cref="T:ActiveUp.WebControls.DateCollectionItem"/> to insert into the Collection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.DateCollection.Insert(System.Int32,ActiveUp.WebControls.DateCollectionItem)">
            <summary>
            Inserts a <see cref="T:ActiveUp.WebControls.DateCollectionItem"/> to the collection at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="item">The <see cref="T:ActiveUp.WebControls.DateCollectionItem"/> to insert into the Collection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.DateCollection.Add(System.Object)">
            <summary>
            Adds a <see cref="T:ActiveUp.WebControls.DateCollectionItem"/> to the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.DateCollectionItem"/> to add to the collection.</param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.DateCollection.Add(ActiveUp.WebControls.DateCollectionItem)">
            <summary>
            Adds a <see cref="T:ActiveUp.WebControls.DateCollectionItem"/> to the collection
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.DateCollectionItem"/> to add to the collection.</param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.DateCollection.Clear">
            <summary>
            Removes all <see cref="T:ActiveUp.WebControls.DateCollectionItem"/> from the collection.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.DateCollection.Contains(System.Object)">
            <summary>
            Determines whether a <see cref="T:ActiveUp.WebControls.DateCollectionItem"/> is in the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.DateCollectionItem"/> to locate in the collection. The element to locate can be a null reference.</param>
            <returns>true if value is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.DateCollection.Contains(ActiveUp.WebControls.DateCollectionItem)">
            <summary>
            Determines whether a <see cref="T:ActiveUp.WebControls.DateCollectionItem"/> is in the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.DateCollectionItem"/> to locate in the collection. The element to locate can be a null reference.</param>
            <returns>true if value is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.DateCollection.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific <see cref="T:ActiveUp.WebControls.DateCollectionItem"/> in the current instance.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.DateCollectionItem"/> to locate in the current instance.</param>
            <returns>The index of value if found in the current instance; otherwise, -1.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.DateCollection.IndexOf(ActiveUp.WebControls.DateCollectionItem)">
            <summary>
            Determines the index of a specific <see cref="T:ActiveUp.WebControls.DateCollectionItem"/> in the current instance.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.DateCollectionItem"/> to locate in the current instance.</param>
            <returns>The index of value if found in the current instance; otherwise, -1.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.DateCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:ActiveUp.WebControls.DateCollectionItem"/> at the specified index within the collection.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:ActiveUp.WebControls.DateCollectionItem"/> to remove.</param>
        </member>
        <member name="M:ActiveUp.WebControls.DateCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.DateCollection.GetItemListToString(System.String)">
            <summary>
            Get a string containing all the elements separated by the separator.
            </summary>
            <param name="separator">Separator used to separated each element in the return string.</param>
            <returns>String containing all the elements separated by the separator.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.DateCollection.IsDatePresent(System.DateTime)">
            <summary>
            Indicates if a Date is already in the collection.
            </summary>
            <param name="date">Date to check.</param>
            <returns>True if the date is already present, otherwise false.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.DateCollection.IsDatePresent(ActiveUp.WebControls.DateCollectionItem)">
            <summary>
            Indicates if a Date is already in the collection.
            </summary>
            <param name="dateItem"><see cref="T:ActiveUp.WebControls.DateCollectionItem"/> that contains the date to check.</param>
            <returns>True if the date is already present, otherwise false.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.DateCollection.SaveViewState">
            <summary>
            When implemented by a class, saves the changes to a server control's view state to an
            <see cref="T:System.Object"/> .
            </summary>
            <returns>
            The <see langword="Object"/> that contains the view state changes.
            </returns>
        </member>
        <member name="T:ActiveUp.WebControls.DateCollectionItem">
            <summary>
            Represents an item used with <see cref="T:ActiveUp.WebControls.DateCollection"/>.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.DateCollectionItem.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.DateCollectionItem.#ctor(System.DateTime)">
            <summary>
            Create a DateCollectionItem specifying the Date (must be a DateTime object).
            </summary>
            <param name="date"></param>
        </member>
        <member name="P:ActiveUp.WebControls.DateCollectionItem.Date">
            <summary>
            Gets or sets the date.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.DateCollectionItem.ViewState">
            <summary>
            Gets the view state of the control.
            </summary>
            <value>The view state of the control.</value>
        </member>
        <member name="T:ActiveUp.WebControls.DateCollectionItemControlBuilder">
            <summary>
            Supports the page parser in building a control and the child controls it contains for the <see cref="T:ActiveUp.WebControls.DateCollectionItem"/>.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.DateCollectionItemControlBuilder.AllowWhitespaceLiterals">
            <summary>
            Determines whether the white space literals in the control must be processed or ignored.
            </summary>
            <returns>true if the white space literals in the control must be processed; otherwise, false.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.DateCollectionItemControlBuilder.HtmlDecodeLiterals">
            <summary>
            Determines whether the literal string of an HTML control must be HTML decoded.
            </summary>
            <returns>true if the HTML control literal string is to be decoded; otherwise, false.</returns>
        </member>
        <member name="T:ActiveUp.WebControls.DateStyleCollection">
            <summary>
            A Collection of <see cref="T:ActiveUp.WebControls.DateStyleCollectionItem"/>.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.DateStyleCollection._dateStyleCollection">
            <summary>
            A collection of DateStyleCollectionItem.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.DateStyleCollection.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.DateStyleCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets a <see cref="T:ActiveUp.WebControls.DateStyleCollectionItem"/> at the specified index.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.DateStyleCollection.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.DateStyleCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.DateStyleCollection.IsFixedSize">
            <summary>
            Gets a boolean value indicating whether the current instance has a fixed size.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.DateStyleCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the current instance is read-only.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.DateStyleCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.DateStyleCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements from the current instance to the specified collection, starting at the specified index in the array.
            </summary>
            <param name="array">A one-dimensional, zero-based Array that is the destination of the elements copied from the current instance. </param>
            <param name="index">A Int32 that specifies the zero-based index in array at which copying begins.</param>
        </member>
        <member name="P:ActiveUp.WebControls.DateStyleCollection.Item(System.Int32)">
            <summary>
            Gets or sets a <see cref="T:ActiveUp.WebControls.DateStyleCollectionItem"/> at the specified index.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.DateStyleCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific <see cref="T:ActiveUp.WebControls.DateStyleCollectionItem"/> from the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.DateStyleCollectionItem"/> to remove from the collection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.DateStyleCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts a <see cref="T:ActiveUp.WebControls.DateStyleCollectionItem"/> to the collection at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="item">The <see cref="T:ActiveUp.WebControls.DateStyleCollectionItem"/> to insert into the Collection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.DateStyleCollection.Add(System.Object)">
            <summary>
            Adds a <see cref="T:ActiveUp.WebControls.DateStyleCollectionItem"/> to the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.DateStyleCollectionItem"/> to add to the collection.</param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.DateStyleCollection.Clear">
            <summary>
            Removes all <see cref="T:ActiveUp.WebControls.DateStyleCollectionItem"/> from the collection.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.DateStyleCollection.Contains(System.Object)">
            <summary>
            Determines whether a <see cref="T:ActiveUp.WebControls.DateStyleCollectionItem"/> is in the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.DateStyleCollectionItem"/> to locate in the collection. The element to locate can be a null reference.</param>
            <returns>true if value is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.DateStyleCollection.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific <see cref="T:ActiveUp.WebControls.DateStyleCollectionItem"/> in the current instance.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.DateStyleCollectionItem"/> to locate in the current instance.</param>
            <returns>The index of value if found in the current instance; otherwise, -1.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.DateStyleCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:ActiveUp.WebControls.DateStyleCollectionItem"/> at the specified index within the collection.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:ActiveUp.WebControls.DateStyleCollectionItem"/> to remove.</param>
        </member>
        <member name="M:ActiveUp.WebControls.DateStyleCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.DateStyleCollection.GetItemListToString(System.String,System.String)">
            <summary>
            Get a string containing all the elements separated by the separator.
            </summary>
            <param name="separator">Separator used to separated each element in the return string.</param>
            <param name="imagePath">Path where the images are located.</param>
            <returns>String containing all the elements separated by the separator.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.DateStyleCollection.IsDatePresent(System.DateTime)">
            <summary>
            Indicates if a Date is already in the collection.
            </summary>
            <param name="date">Date to check.</param>
            <returns>True if the date is already present, otherwise false.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.DateStyleCollection.IsDatePresent(ActiveUp.WebControls.DateStyleCollectionItem)">
            <summary>
            Indicates if a Date is already in the collection.
            </summary>
            <param name="dateItem"><see cref="T:ActiveUp.WebControls.DateStyleCollectionItem"/> that contains the date to check.</param>
            <returns>True if the date is already present, otherwise false.</returns>
        </member>
        <member name="T:ActiveUp.WebControls.DateStyleCollectionItem">
            <summary>
            Represents an item used with <see cref="T:ActiveUp.WebControls.DateStyleCollection"/>.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.DateStyleCollectionItem._date">
            <summary>
            Date.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.DateStyleCollectionItem._foreColor">
            <summary>
            The foreground color of the element.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.DateStyleCollectionItem._backColor">
            <summary>
            The background color of the element.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.DateStyleCollectionItem._backgroundImage">
            <summary>
            The background image of the element.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.DateStyleCollectionItem.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.DateStyleCollectionItem.#ctor(System.DateTime)">
            <summary>
            Create a DateStyleCollectionItem specifying the Date (must be a DateTime object).
            </summary>
            <param name="date">The date.</param>
        </member>
        <member name="P:ActiveUp.WebControls.DateStyleCollectionItem.Date">
            <summary>
            Gets or sets the date.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.DateStyleCollectionItem.ForeColor">
            <summary>
            Gets or sets the foreground color.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.DateStyleCollectionItem.BackColor">
            <summary>
            Gets or sets the background color.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.DateStyleCollectionItem.BackgroundImage">
            <summary>
            Gets or sets the background image.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.DateStyleCollectionItemControlBuilder">
            <summary>
            Supports the page parser in building a control and the child controls it contains for the <see cref="T:ActiveUp.WebControls.DateCollectionItem"/>.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.DateStyleCollectionItemControlBuilder.AllowWhitespaceLiterals">
            <summary>
            Determines whether the white space literals in the control must be processed or ignored.
            </summary>
            <returns>true if the white space literals in the control must be processed; otherwise, false.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.DateStyleCollectionItemControlBuilder.HtmlDecodeLiterals">
            <summary>
            Determines whether the literal string of an HTML control must be HTML decoded.
            </summary>
            <returns>true if the HTML control literal string is to be decoded; otherwise, false.</returns>
        </member>
        <member name="T:ActiveUp.WebControls.DateToolTipCollection">
            <summary>
            A Collection of <see cref="T:ActiveUp.WebControls.DateToolTipCollectionItem"/>.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.DateToolTipCollection._dateToolTipCollection">
            <summary>
            A collection of DateToolTipCollectionItem.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.DateToolTipCollection.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.DateToolTipCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets a <see cref="T:ActiveUp.WebControls.DateToolTipCollectionItem"/> at the specified index.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.DateToolTipCollection.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.DateToolTipCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.DateToolTipCollection.IsFixedSize">
            <summary>
            Gets a boolean value indicating whether the current instance has a fixed size.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.DateToolTipCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the current instance is read-only.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.DateToolTipCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.DateToolTipCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements from the current instance to the specified collection, starting at the specified index in the array.
            </summary>
            <param name="array">A one-dimensional, zero-based Array that is the destination of the elements copied from the current instance. </param>
            <param name="index">A Int32 that specifies the zero-based index in array at which copying begins.</param>
        </member>
        <member name="P:ActiveUp.WebControls.DateToolTipCollection.Item(System.Int32)">
            <summary>
            Gets or sets a <see cref="T:ActiveUp.WebControls.DateToolTipCollectionItem"/> at the specified index.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.DateToolTipCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific <see cref="T:ActiveUp.WebControls.DateToolTipCollectionItem"/> from the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.DateToolTipCollectionItem"/> to remove from the collection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.DateToolTipCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts a <see cref="T:ActiveUp.WebControls.DateToolTipCollectionItem"/> to the collection at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="item">The <see cref="T:ActiveUp.WebControls.DateToolTipCollectionItem"/> to insert into the Collection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.DateToolTipCollection.Add(System.Object)">
            <summary>
            Adds a <see cref="T:ActiveUp.WebControls.DateToolTipCollectionItem"/> to the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.DateToolTipCollectionItem"/> to add to the collection.</param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.DateToolTipCollection.Clear">
            <summary>
            Removes all <see cref="T:ActiveUp.WebControls.DateToolTipCollectionItem"/> from the collection.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.DateToolTipCollection.Contains(System.Object)">
            <summary>
            Determines whether a <see cref="T:ActiveUp.WebControls.DateToolTipCollectionItem"/> is in the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.DateToolTipCollectionItem"/> to locate in the collection. The element to locate can be a null reference.</param>
            <returns>true if value is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.DateToolTipCollection.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific <see cref="T:ActiveUp.WebControls.DateToolTipCollectionItem"/> in the current instance.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.DateToolTipCollectionItem"/> to locate in the current instance.</param>
            <returns>The index of value if found in the current instance; otherwise, -1.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.DateToolTipCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:ActiveUp.WebControls.DateToolTipCollectionItem"/> at the specified index within the collection.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:ActiveUp.WebControls.DateToolTipCollectionItem"/> to remove.</param>
        </member>
        <member name="M:ActiveUp.WebControls.DateToolTipCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.DateToolTipCollection.IsDatePresent(System.DateTime)">
            <summary>
            Indicates if a Date is already in the collection.
            </summary>
            <param name="date">Date to check.</param>
            <returns>True if the date is already present, otherwise false.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.DateToolTipCollection.IsDatePresent(ActiveUp.WebControls.DateToolTipCollectionItem)">
            <summary>
            Indicates if a Date is already in the collection.
            </summary>
            <param name="dateItem"><see cref="T:ActiveUp.WebControls.DateToolTipCollectionItem"/> that contains the date to check.</param>
            <returns>True if the date is already present, otherwise false.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.DateToolTipCollection.GetItemListToString(System.String,System.String)">
            <summary>
            Get a string containing all the elements separated by the separator.
            </summary>
            <param name="separator">Separator used to separated each element in the return string.</param>
            <param name="imagePath">Path where the images are located.</param>
            <returns>String containing all the elements separated by the separator.</returns>
        </member>
        <member name="T:ActiveUp.WebControls.DateToolTipCollectionItem">
            <summary>
            Represents an item used with <see cref="T:ActiveUp.WebControls.DateStyleCollection"/>.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.DateToolTipCollectionItem._date">
            <summary>
            Date.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.DateToolTipCollectionItem._toolTip">
            <summary>
            Tool tip text.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.DateToolTipCollectionItem.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.DateToolTipCollectionItem.#ctor(System.DateTime)">
            <summary>
            Create a DateStyleCollectionItem specifying the Date (must be a DateTime object).
            </summary>
            <param name="date">The date.</param>
        </member>
        <member name="P:ActiveUp.WebControls.DateToolTipCollectionItem.Date">
            <summary>
            Gets or sets the date.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.DateToolTipCollectionItem.ToolTip">
            <summary>
            Gets or sets the tool tip text.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.DateToolTipCollectionItemControlBuilder">
            <summary>
            Supports the page parser in building a control and the child controls it contains for the <see cref="T:ActiveUp.WebControls.DateCollectionItem"/>.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.DateToolTipCollectionItemControlBuilder.AllowWhitespaceLiterals">
            <summary>
            Determines whether the white space literals in the control must be processed or ignored.
            </summary>
            <returns>true if the white space literals in the control must be processed; otherwise, false.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.DateToolTipCollectionItemControlBuilder.HtmlDecodeLiterals">
            <summary>
            Determines whether the literal string of an HTML control must be HTML decoded.
            </summary>
            <returns>true if the HTML control literal string is to be decoded; otherwise, false.</returns>
        </member>
        <member name="T:ActiveUp.WebControls.DayClickedEventArgs">
            <summary>
            Provides data for the DateClicked events of the <see cref="T:ActiveUp.WebControls.DayClickedEventArgs"/> control.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.DayClickedEventArgs.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of DateChangedEventArgs class.
            </summary>
            <param name="clickedDate">Clicked date.</param>
        </member>
        <member name="P:ActiveUp.WebControls.DayClickedEventArgs.ClickedDate">
            <summary>
            The clicked date after change.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Design.CalendarComponentEditor">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.Design.CalendarComponentEditor"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Design.CalendarControlDesigner.GetDesignTimeHtml">
            <summary>
            Gets the design time HTML code.
            </summary>
            <returns>A string containing the HTML to render.</returns>
        </member>
        <member name="T:ActiveUp.WebControls.Design.CalendarPropertyBuilderForm">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.Design.CalendarPropertyBuilderForm"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Design.CalendarPropertyBuilderForm.Dispose(System.Boolean)">
            <summary>
            Nettoyage des ressources utilisées.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Design.CalendarPropertyBuilderForm.InitializeComponent">
            <summary>
            Méthode requise pour la prise en charge du concepteur - ne modifiez pas
            le contenu de cette méthode avec l'éditeur de code.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Design.NodeDesign">
            <summary>
            Used to create node in the property builder.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Design.NodeDesign.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Design.NodeDesign.#ctor(System.String,System.String,System.String)">
            <summary>
            Create a Node design object from the key, parent key and text.
            </summary>
            <param name="key">Unique key identifies the node.</param>
            <param name="parentKey">Parent key to identify the parent node.</param>
            <param name="text">Text of the current node.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Design.NodeDesign.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Create a Node design object from the key, parent key, text and link.
            </summary>
            <param name="key">Unique key identifies the node.</param>
            <param name="parentKey">Parent key to identify the parent node.</param>
            <param name="text">Text of the current node.</param>
            <param name="link">Link of the current node.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Design.NodeDesign.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Create a Node design object from the key, parent key, text, link and target.
            </summary>
            <param name="key">Unique key identifies the node.</param>
            <param name="parentKey">Parent key to identify the parent node.</param>
            <param name="text">Text of the current node.</param>
            <param name="link">Link of the current node.</param>
            <param name="target">Target frame of the link.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Design.NodeDesign._Init(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initalize a <see cref="T:ActiveUp.WebControls.Design.NodeDesign"/> objet.
            </summary>
            <param name="key">Unique key identifies the node.</param>
            <param name="parentKey">Parent key to identify the parent node.</param>
            <param name="text">Text of the current node.</param>
            <param name="link">Link of the current node.</param>
            <param name="target">Target frame of the link.</param>
        </member>
        <member name="P:ActiveUp.WebControls.Design.NodeDesign.Selected">
            <summary>
            Gets or sets the selected state.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Design.NodeDesign.Expanded">
            <summary>
            Gets or sets the expanded state of the node.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Design.NodeDesign.Icon">
            <summary>
            Gets or sets the displayed icon for the node.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Design.NodeDesign.NodeStyle">
            <summary>
            Gets or sets the style of the current node.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Design.NodeDesign.Text">
            <summary>
            Gets or sets the displayed text.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Design.NodeDesign.Link">
            <summary>
            Gets or sets the link of the current node.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Design.NodeDesign.Target">
            <summary>
            Gets or sets the target frame of the link.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Design.NodeDesign.Key">
            <summary>
            Gets or sets the unique key identifies the node.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Design.NodeDesign.ParentKey">
            <summary>
            Gets or sets the parent key to identify the parent node.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Design.TreeViewComponentEditor">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.Design.TreeViewComponentEditor"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Design.TreeViewControlDesigner.GetDesignTimeHtml">
            <summary>
            Gets the design time HTML code.
            </summary>	
            <returns>A string containing the HTML to render.</returns>
        </member>
        <member name="T:ActiveUp.WebControls.Design.PropertyBuilderForm">
            <summary>
            Represents a <see cref="!:TreeViewPropertyBuilderForm"/> object.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Design.PropertyBuilderForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Design.PropertyBuilderForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:TreeViewPropertyBuilderForm"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Design.PropertyBuilderForm.#ctor(ActiveUp.WebControls.TreeView)">
            <summary>
            Initializes a new instance of the <see cref="!:TreeViewPropertyBuilderForm"/> class.
            </summary>
            <param name="treeView">The tree view.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Design.PropertyBuilderForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Design.PropertyBuilderForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Design.EditorDesigner">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.Design.EditorDesigner"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Design.EditorDesigner.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.Design.EditorDesigner"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Design.EditorDesigner.GetDesignTimeHtml">
            <summary>
            Gets the HTML that is used to represent the control at design time.
            </summary>
            <returns>The HTML that is used to represent the control at design time.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.Design.EditorDesigner.GetErrorDesignTimeHtml(System.Exception)">
            <summary>
            Gets the HTML that provides information about the specified exception. This method is typically called after an error has been encountered at design time.
            </summary>
            <param name="e">The exception that occurred.</param>
            <returns>The HTML for the specified exception.</returns>
        </member>
        <member name="P:ActiveUp.WebControls.Design.EditorDesigner.Verbs">
            <summary>
            Gets the design-time verbs supported by the component that is associated with the designer.
            </summary>
            <value></value>
        </member>
        <member name="M:ActiveUp.WebControls.Design.EditorDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initializes the designer and
            loads the specified component.
            </summary>
            <param name="component">The control element being designed.</param>
        </member>
        <member name="T:ActiveUp.WebControls.Design.EditorPropertyBuilderForm">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.Design.EditorPropertyBuilderForm"/> object.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Design.EditorPropertyBuilderForm.components">
            <summary>
            Variable nécessaire au concepteur.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Design.EditorPropertyBuilderForm.#ctor(ActiveUp.WebControls.Editor)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.Design.EditorPropertyBuilderForm"/> class.
            </summary>
            <param name="editor">The editor.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Design.EditorPropertyBuilderForm.Dispose(System.Boolean)">
            <summary>
            Nettoyage des ressources utilisées.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Design.EditorPropertyBuilderForm.InitializeComponent">
            <summary>
            Méthode requise pour la prise en charge du concepteur - ne modifiez pas
            le contenu de cette méthode avec l'éditeur de code.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Scheme.SchemeBlue1">
            <summary>
            Scheme Blue1
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Scheme.SchemeBlue1.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Scheme.SchemeBlue2">
            <summary>
            Scheme blue2.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Scheme.SchemeBlue2.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Scheme.SchemeDefault1">
            <summary>
            Default scheme.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Scheme.SchemeDefault1.#ctor">
            <summary>
            The default constrcutor.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Scheme.SchemeDefault2">
            <summary>
            Default scheme.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Scheme.SchemeDefault2.#ctor">
            <summary>
            The default constrcutor.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Scheme.SchemeOrange1">
            <summary>
            Scheme Orange1
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Scheme.SchemeOrange1.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Scheme.SchemeOrange2">
            <summary>
            Scheme Orange2.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Scheme.SchemeOrange2.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Scheme.SchemePreset">
            <summary>
            The base class for all the schemes.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Scheme.SchemePreset._nextMonthImage">
            <summary>
            Next month image.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Scheme.SchemePreset._nextYearImage">
            <summary>
            Next year image.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Scheme.SchemePreset._prevMonthImage">
            <summary>
            Previous month image.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Scheme.SchemePreset._prevYearImage">
            <summary>
            Previous year image.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Scheme.SchemePreset._borderColor">
            <summary>
            Border color.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Scheme.SchemePreset._blockedDayStyle">
            <summary>
            Blocked day style.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Scheme.SchemePreset._dayHeaderStyle">
            <summary>
            Header day style.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Scheme.SchemePreset._dayStyle">
            <summary>
            Day style.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Scheme.SchemePreset._nextPrevStyle">
            <summary>
            Next and previous style.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Scheme.SchemePreset._otherMonthDayStyle">
            <summary>
            Other month day style.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Scheme.SchemePreset._selectedDayStyle">
            <summary>
            Selected day style.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Scheme.SchemePreset._selectorStyle">
            <summary>
            Selector style.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Scheme.SchemePreset._titleStyle">
            <summary>
            Title style.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Scheme.SchemePreset._todayDayStyle">
            <summary>
            Today day style.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Scheme.SchemePreset._todayFooterStyle">
            <summary>
            Today footer style.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Scheme.SchemePreset._weekendEndDayStyle">
            <summary>
            Weekend style.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Scheme.SchemePreset._weekNumberStyle">
            <summary>
            Week number style.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Scheme.SchemePreset.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Scheme.SchemePreset.NextMonthImage">
            <summary>
            Gets the next month image.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Scheme.SchemePreset.NextYearImage">
            <summary>
            Gets the next year image.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Scheme.SchemePreset.PrevMonthImage">
            <summary>
            Gets the previous image.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Scheme.SchemePreset.PrevYearImage">
            <summary>
            Gets the previous year image.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Scheme.SchemePreset.BorderColor">
            <summary>
            Gets the border color.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Scheme.SchemePreset.BlockedDayStyle">
            <summary>
            Gets the blocked day style.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Scheme.SchemePreset.DayHeaderStyle">
            <summary>
            Gets the day header style.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Scheme.SchemePreset.DayStyle">
            <summary>
            Gets the day style.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Scheme.SchemePreset.NextPrevStyle">
            <summary>
            Gets the next, previous style.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Scheme.SchemePreset.OtherMonthDayStyle">
            <summary>
            Gets the other month day style.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Scheme.SchemePreset.SelectedDayStyle">
            <summary>
            Gets the selected day style.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Scheme.SchemePreset.SelectorStyle">
            <summary>
            Gets the selector style.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Scheme.SchemePreset.TitleStyle">
            <summary>
            Gets the title style.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Scheme.SchemePreset.TodayDayStyle">
            <summary>
            Gets the today style.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Scheme.SchemePreset.TodayFooterStyle">
            <summary>
            Gets the today footer style.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Scheme.SchemePreset.WeekendEndDayStyle">
            <summary>
            Gets the weekend day style.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Scheme.SchemePreset.WeekNumberStyle">
            <summary>
            Gets the week number style.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Scheme.SchemeTurquoise1">
            <summary>
            Scheme Turquoise1.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Scheme.SchemeTurquoise1.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Scheme.SchemeTurquoise2">
            <summary>
            Scheme Turquoise2.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Scheme.SchemeTurquoise2.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.StringArrayConverter">
            <summary>
            Converter used to convert string array to other types. 
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.StringArrayConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context. </param>
            <param name="culture">A CultureInfo object. If a null reference (Nothing in Visual Basic) is passed, the current culture is assumed. </param>
            <param name="value">The <see cref="T:System.Object"/> to convert. </param>
            <param name="destinationType">The Type to convert the value parameter to. </param>
            <returns>An Object that represents the converted value.	</returns>
        </member>
        <member name="M:ActiveUp.WebControls.StringArrayConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.StringArrayConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context.</param>
            <param name="culture">The CultureInfo to use as the current culture.</param>
            <param name="value">The Object to convert. </param>
            <returns>An Object that represents the converted value.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.StringArrayConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports properties, using the specified context.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context.</param>
            <returns>true if GetProperties should be called to find the properties of this object; otherwise, false.</returns>
        </member>
        <member name="T:ActiveUp.WebControls.Group">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.Group"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Group.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.Group"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Group.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.Group"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="P:ActiveUp.WebControls.Group.Keys">
            <summary>
            Gets or sets the keys.
            </summary>
            <value>The keys.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Group.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:ActiveUp.WebControls.GroupCollection">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.GroupCollection"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.GroupCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.GroupCollection"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.GroupCollection.Add(ActiveUp.WebControls.Group)">
            <summary>
            Adds the specified group.
            </summary>
            <param name="group">The group.</param>
        </member>
        <member name="M:ActiveUp.WebControls.GroupCollection.Add(System.String)">
            <summary>
            Adds the specified name.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:ActiveUp.WebControls.GroupCollection.Remove(System.Int32)">
            <summary>
            Removes the specified index.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:ActiveUp.WebControls.GroupCollection.Remove(System.String)">
            <summary>
            Removes the specified name.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="P:ActiveUp.WebControls.GroupCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ActiveUp.WebControls.Group"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:ActiveUp.WebControls.GroupCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:ActiveUp.WebControls.Group"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="P:ActiveUp.WebControls.GroupCollection.Names">
            <summary>
            Gets the names.
            </summary>
            <value>The names.</value>
        </member>
        <member name="M:ActiveUp.WebControls.GroupCollection.Contains(System.String)">
            <summary>
            Determines whether [contains] [the specified name].
            </summary>
            <param name="name">The name.</param>
            <returns>
            	<c>true</c> if [contains] [the specified name]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:ActiveUp.WebControls.IniConfig">
            <summary>
            INI file generator.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.IniConfig.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.IniConfig"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.IniConfig.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.IniConfig"/> class.
            </summary>
            <param name="filename">The filename.</param>
        </member>
        <member name="M:ActiveUp.WebControls.IniConfig.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.IniConfig"/> class.
            </summary>
            <param name="filename">The filename.</param>
            <param name="htmlEncodeValues">if set to <c>true</c> [HTML encode values].</param>
        </member>
        <member name="M:ActiveUp.WebControls.IniConfig.#ctor(System.String,System.Char,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.IniConfig"/> class.
            </summary>
            <param name="filename">The filename.</param>
            <param name="separation">The separation.</param>
            <param name="htmlEncodeValues">if set to <c>true</c> [HTML encode values].</param>
        </member>
        <member name="M:ActiveUp.WebControls.IniConfig.#ctor(System.String,System.Char,System.Boolean,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.IniConfig"/> class.
            </summary>
            <param name="filename">The filename.</param>
            <param name="separation">The separation.</param>
            <param name="htmlEncodeValues">if set to <c>true</c> [HTML encode values].</param>
            <param name="encoding">The encoding.</param>
        </member>
        <member name="M:ActiveUp.WebControls.IniConfig.#ctor(System.String,System.Boolean,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.IniConfig"/> class.
            </summary>
            <param name="filename">The filename.</param>
            <param name="htmlEncodeValues">if set to <c>true</c> [HTML encode values].</param>
            <param name="encoding">The encoding.</param>
        </member>
        <member name="M:ActiveUp.WebControls.IniConfig.SaveFile(System.String)">
            <summary>
            Saves the file.
            </summary>
            <param name="filename">The filename.</param>
        </member>
        <member name="M:ActiveUp.WebControls.IniConfig.SaveFile(System.String,System.Boolean)">
            <summary>
            Saves the file.
            </summary>
            <param name="filename">The filename.</param>
            <param name="htmlEncodeValues">if set to <c>true</c> [HTML encode values].</param>
        </member>
        <member name="M:ActiveUp.WebControls.IniConfig.SaveFile(System.String,System.Char,System.Boolean)">
            <summary>
            Saves the file.
            </summary>
            <param name="filename">The filename.</param>
            <param name="separation">The separation.</param>
            <param name="htmlEncodeValues">if set to <c>true</c> [HTML encode values].</param>
        </member>
        <member name="M:ActiveUp.WebControls.IniConfig.SaveFile(System.String,System.Boolean,System.Text.Encoding)">
            <summary>
            Saves the file.
            </summary>
            <param name="filename">The filename.</param>
            <param name="htmlEncodeValues">if set to <c>true</c> [HTML encode values].</param>
            <param name="encoding">The encoding.</param>
        </member>
        <member name="M:ActiveUp.WebControls.IniConfig.SaveFile(System.String,System.Char,System.Boolean,System.Text.Encoding)">
            <summary>
            Saves the file.
            </summary>
            <param name="filename">The filename.</param>
            <param name="separation">The separation.</param>
            <param name="htmlEncodeValues">if set to <c>true</c> [HTML encode values].</param>
            <param name="encoding">The encoding.</param>
        </member>
        <member name="M:ActiveUp.WebControls.IniConfig.ParseFile(System.String)">
            <summary>
            Parses the file.
            </summary>
            <param name="filename">The filename.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.IniConfig.ParseFile(System.String,System.Boolean)">
            <summary>
            Parses the file.
            </summary>
            <param name="filename">The filename.</param>
            <param name="htmlEncodeValues">if set to <c>true</c> [HTML encode values].</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.IniConfig.ParseFile(System.String,System.Char,System.Boolean)">
            <summary>
            Parses the file.
            </summary>
            <param name="filename">The filename.</param>
            <param name="separation">The separation.</param>
            <param name="htmlEncodeValues">if set to <c>true</c> [HTML encode values].</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.IniConfig.ParseFile(System.String,System.Char,System.Boolean,System.Text.Encoding)">
            <summary>
            Parses the file.
            </summary>
            <param name="filename">The filename.</param>
            <param name="separation">The separation.</param>
            <param name="htmlEncodeValues">if set to <c>true</c> [HTML encode values].</param>
            <param name="encoding">The encoding.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.IniConfig.ParseString(System.String)">
            <summary>
            Parses the string.
            </summary>
            <param name="input">The input.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.IniConfig.ParseString(System.String,System.Char)">
            <summary>
            Parses the string.
            </summary>
            <param name="input">The input.</param>
            <param name="separation">The separation.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.IniConfig.WriteToTrace">
            <summary>
            Writes to trace.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.IniConfig.GetIniContent">
            <summary>
            Gets the content of the ini.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.IniConfig.GetIniContent(System.Char)">
            <summary>
            Gets the content of the ini.
            </summary>
            <param name="separator">The separator.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.IniConfig.ParseGroup(System.String)">
            <summary>
            Parses the group.
            </summary>
            <param name="group">The group.</param>
            <returns></returns>
        </member>
        <member name="P:ActiveUp.WebControls.IniConfig.Groups">
            <summary>
            Gets or sets the groups.
            </summary>
            <value>The groups.</value>
        </member>
        <member name="T:ActiveUp.WebControls.Key">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.Key"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Key.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.Key"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Key.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.Key"/> class.
            </summary>
            <param name="keyName">Name of the key.</param>
            <param name="keyValue">The key value.</param>
        </member>
        <member name="P:ActiveUp.WebControls.Key.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Key.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:ActiveUp.WebControls.KeyCollection">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.KeyCollection"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.KeyCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.KeyCollection"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.KeyCollection.Add(ActiveUp.WebControls.Key)">
            <summary>
            Adds the specified key.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:ActiveUp.WebControls.KeyCollection.Add(System.String,System.String)">
            <summary>
            Adds the specified key name.
            </summary>
            <param name="keyName">Name of the key.</param>
            <param name="keyValue">The key value.</param>
        </member>
        <member name="M:ActiveUp.WebControls.KeyCollection.Remove(System.Int32)">
            <summary>
            Removes the specified index.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:ActiveUp.WebControls.KeyCollection.Remove(System.String)">
            <summary>
            Removes the specified name.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="P:ActiveUp.WebControls.KeyCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ActiveUp.WebControls.Key"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:ActiveUp.WebControls.KeyCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:ActiveUp.WebControls.Key"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="M:ActiveUp.WebControls.KeyCollection.Contains(System.String)">
            <summary>
            Determines whether [contains] [the specified name].
            </summary>
            <param name="name">The name.</param>
            <returns>
            	<c>true</c> if [contains] [the specified name]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:ActiveUp.WebControls.ExtendedButtonType">
            <summary>
            Enumeration to define the rendering type of the ExtendedButton control.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ExtendedButtonType.Button">
            <summary>
            The default rendering type. Renders a standard HTML button using the INPUT tag with BUTTON attribute.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ExtendedButtonType.Link">
            <summary>
            Renders the button as an hyper link.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ExtendedButtonType.Image">
            <summary>
            Rendes the button as an image button.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.ExtendedButton">
            <summary>
            ASP.NET control that provides extended features to the standard button including multi-styles, post in any form on the page, disable on submit, confirm on submit and more. 
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ExtendedButton.ResourceName">
            <summary>
            Gets the resource name containing the javascript logic.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ExtendedButton.ScriptKey">
            <summary>
            Gets the script key used to register the javascript logic.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ExtendedButton.ExternalScript">
            <summary>
            Gets or sets the relative or absolute path to the icons directory.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ExtendedButton.ButtonType">
            <summary>
            Gets or sets the type of button to render.
            </summary>
            <remarks>You can render the same button as a link, a button or an image. Please see the <see cref="P:ActiveUp.WebControls.ExtendedButton.ButtonType"/> enumeration for details.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.ExtendedButton.CausesValidation">
            <summary>
            Gets or sets the value indicating if the button cause the page validation.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ExtendedButton.DisableOnClick">
            <summary>
            Gets or sets the value indicating if the button should disable itself when clicked (submit).
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ExtendedButton.ConfirmationMessage">
            <summary>
            Gets or sets the text to use for the confirmation box.
            </summary>
            <remarks>If you leave this property empty, no confirmation is asked.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.ExtendedButton.Text">
            <summary>
            Gets or sets the text to use in the button.
            </summary>
            <remarks>This property is used in the Link and Button rendering modes.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.ExtendedButton.NavigateUrl">
            <summary>
            Gets or sets the URL to use for the button.
            </summary>
            <remarks>If this property is left empty, the standard behavior of the button is to do a postback. However if you specify a valid link, any server-side events will be ignored and the specified link (page) will be accessed just like a standard HTML hyperlink.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.ExtendedButton.TargetForm">
            <summary>
            Gets or sets the target Form object to post to.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ExtendedButton.ImageUrl">
            <summary>
            Gets or sets the image URL to use for the Image rendering mode.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ExtendedButton.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Adds HTML attributes and styles that need to be rendered
            to the specified <see cref="T:System.Web.UI.HtmlTextWriter" qualify="true"/>. This method is used primarily by control
            developers.
            </summary>
            <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter" qualify="true"/> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ExtendedButton.AddParsedSubObject(System.Object)">
            <summary>
            Notifies the server control that an element, either XML
            or HTML, was parsed, and adds the element to the server control's <see cref="T:System.Web.UI.ControlCollection"/>
            object.
            </summary>
            <param name="obj">An <see cref="T:System.Object"/> that represents the parsed element.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ExtendedButton.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the specified writer.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ExtendedButton.RenderExtendedButton(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the extended button.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="P:ActiveUp.WebControls.ExtendedButton.CommandArgument">
            <summary>
            Gets or sets the command argument.
            </summary>
            <value>The command argument.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ExtendedButton.CommandName">
            <summary>
            Gets or sets the command name.
            </summary>
            <value>The command name.</value>
        </member>
        <member name="E:ActiveUp.WebControls.ExtendedButton.Click">
            <summary>
            Click server event.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ExtendedButton.OnClick(ActiveUp.WebControls.ExtendedButtonClickEventArgs)">
            <summary>
            Raises the click event.
            </summary>
            <param name="e">The <see cref="T:ActiveUp.WebControls.ExtendedButtonClickEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:ActiveUp.WebControls.ExtendedButton.Command">
            <summary>
            Command server event.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ExtendedButton.OnCommand(System.Web.UI.WebControls.CommandEventArgs)">
            <summary>
            Raises the command event.
            </summary>
            <param name="e">The <see cref="T:System.Web.UI.WebControls.CommandEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:ActiveUp.WebControls.ExtendedButtonClickEventArgs">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ExtendedButtonClickEventArgs"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ExtendedButtonClickEventArgs.#ctor(ActiveUp.WebControls.ExtendedButtonType)">
            <summary>
            The default construtor.
            </summary>
            <param name="type">The type of button.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ExtendedButtonClickEventArgs.#ctor(ActiveUp.WebControls.ExtendedButtonType,System.Int32,System.Int32)">
            <summary>
            The ExtendedButtonClickEventArgs.
            </summary>
            <param name="type">The button type.</param>
            <param name="x">The x position of the click.</param>
            <param name="y">The y position of the click.</param>
        </member>
        <member name="F:ActiveUp.WebControls.ExtendedButtonClickEventArgs.X">
            <summary>
            The x position of the click.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ExtendedButtonClickEventArgs.Y">
            <summary>
            The y position of the click.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ExtendedButtonClickEventArgs.ButtonType">
            <summary>
            The button type.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.ExtendedTextBox">
            <summary>
            ASP.NET control that is used as a base class for others controls.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ExtendedTextBox.ResourceName">
            <summary>
            Gets the resource name containing the javascript logic.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ExtendedTextBox.ScriptKey">
            <summary>
            Gets the script key used to register the javascript logic.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ExtendedTextBox.ExternalScript">
            <summary>
            Gets or sets the relative or absolute path to the icons directory.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ExtendedTextBox.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the control.
            </summary>
            <param name="writer">The HtmlTextWriter.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ExtendedTextBox.RenderExtendedTextBox(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the extended text box.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ExtendedTextBox.AddParsedSubObject(System.Object)">
            <summary>
            Overridden. 
            </summary>
            <param name="obj">Object</param>
        </member>
        <member name="M:ActiveUp.WebControls.ExtendedTextBox.OnPreRender(System.EventArgs)">
            <summary>
            Overridden.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:ActiveUp.WebControls.ExtendedTextBox.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Load the posted data.
            </summary>
            <param name="postDataKey">The data key.</param>
            <param name="postCollection">The data collection.</param>
            <returns>Value indicating if the data changed.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ExtendedTextBox.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
            <summary>
            Called server-side when the text changed.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ExtendedTextBox.AutoPostBack">
            <summary>
            Gets or sets a value indicating whether an automatic postback to the server will occur whenever the user modifies the text in the TextBox control and then tabs out of the control.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ExtendedTextBox.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the contents of the TextBox control can be changed.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ExtendedTextBox.Text">
            <summary>
            Gets or sets the text content of the TextBox control.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ExtendedTextBox.Wrap">
            <summary>
            Gets or sets a value indicating whether the text content wraps within a multiline text box.
            </summary>
        </member>
        <member name="E:ActiveUp.WebControls.ExtendedTextBox.TextChanged">
            <summary>
            Occurs when the content of the text box changes between posts to the server.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ExtendedTextBox.EventTextChanged">
            <summary>
            The EventTextChanged event.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ExtendedTextBox.OnTextChanged(System.EventArgs)">
            <summary>
            Raises the TextChanged event. This allows you to handle the event directly.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="T:ActiveUp.WebControls.InputMode">
            <summary>
            Enumeration to define the input mode of the <see cref="T:ActiveUp.WebControls.MaskedTextBox"/> control.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.InputMode.NotSet">
            <summary>
            Any characters are allowed including numerics and special characters.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.InputMode.Alpha">
            <summary>
            Only alpha characters are allowed.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.InputMode.Numeric">
            <summary>
            Only numerics characters are allowed.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.InputMode.Percent">
            <summary>
            Only numerics characters are allowed with percent formatting applied.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.InputMode.Currency">
            <summary>
            Only numerics characters are allowed with currency formatting applied.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.InputMode.Date">
            <summary>
            Only numerics characters are allowed with the specified date formatting applied.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.InputMode.Mask">
            <summary>
            The specified mask is applied.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.MaskedTextBox">
            <summary>
            Masked textbox control to allows strictly formatted data input with real time previewing.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.MaskedTextBox.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Adds attributes to the control tag.
            </summary>
            <param name="writer">The current HtmlTextWriter object.</param>
        </member>
        <member name="P:ActiveUp.WebControls.MaskedTextBox.Mode">
            <summary>
            Gets or sets the input mode of the textbox.
            </summary>
            <remarks>Please refer to <see cref="T:ActiveUp.WebControls.InputMode"/> enumeration for details.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.MaskedTextBox.Precision">
            <summary>
            Gets or sets the precision of the decimals.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MaskedTextBox.Delimiter">
            <summary>
            Gets or sets the decimal delimiter.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MaskedTextBox.Symbol">
            <summary>
            Gets or sets the symbol to use for the percent and currency input modes.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MaskedTextBox.Mask">
            <summary>
            Gets or sets the mask to apply to the input.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MaskedTextBox.DateFormat">
            <summary>
            Gets or sets the date format to use in Date mode.
            </summary>
            <remarks>Use the following strings to specify the date parts : DD for day, MM for month and YYYY for year.</remarks>
        </member>
        <member name="T:ActiveUp.WebControls.NumericTextBox">
            <summary>
            ASP.NET control to input strictly formatted numerics.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.NumericTextBox.OnPreRender(System.EventArgs)">
            <summary>
            OnPreRender Call
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:ActiveUp.WebControls.NumericTextBox.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Add attributes to the tag.
            </summary>
            <param name="writer">The current HtmlTextWriter object.</param>
        </member>
        <member name="P:ActiveUp.WebControls.NumericTextBox.MinValue">
            <summary>
            Gets or sets the minimum value allowed.
            </summary>
            <remarks>Because the control allows the developer to specify multiple types of numerics, you need to specify the value as it's string representation.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.NumericTextBox.MaxValue">
            <summary>
            Gets or sets the maximum value allowed.
            </summary>
            <remarks>Because the control allows the developer to specify multiple types of numerics, you need to specify the value as it's string representation.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.NumericTextBox.Precision">
            <summary>
            Gets or sets the precision of the decimals.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.NumericTextBox.Delimiter">
            <summary>
            Gets or sets the decimal delimiter.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.NumericTextBox.CurrencySymbol">
            <summary>
            Gets or sets the currency symbol or code.
            </summary>
            <remarks>If you want to enable the currency auto format, just specify a symbol like $ or a code like USD in this property.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.NumericTextBox.NumericType">
            <summary>
            Gets or sets the numeric CLR type.
            </summary>
            <remarks>This property can be used to set automatically the maximum and minimum values depending of the type. For exemple if you need to have an Int32, you will have to specify NumericType.Int32 and the control will automatically set -2147483648 as the minimum value and 2147483647 as the maximum value. Please note that this features is only available for byte and int data types. For Double and Decimal, you have to enter the maximum and minimum value manually using the string representation of the data.</remarks>
        </member>
        <member name="T:ActiveUp.WebControls.NumericValues">
            <summary>
            Enumeration to specify the predefined numeric textbox values.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.NumericValues.NotSet">
            <summary>
            Uses the values specified in the different properties.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.NumericValues.Byte">
            <summary>
            Stricly accepts byte value.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.NumericValues.Int16">
            <summary>
            Stricly accepts 16bits integer value.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.NumericValues.Int32">
            <summary>
            Stricly accepts 32bits integer value.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.NumericValues.Int64">
            <summary>
            Stricly accepts 64bits integer value.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.OrderedListBox">
            <summary>
            ASP.NET control that allows to create styled listbox with client-side and server-side ordering, enumeration, move items to and from others listboxes, data bind and more...
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.OrderedListBox._dataSource">
            <summary>
            Data source used for data binding.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.OrderedListBox._useCounter">
            <summary>
            Used for the license count number.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBox.Items">
            <summary>
            Gets or sets the collection containing the items.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBox.DataMember">
            <summary>
            Gets or sets the specific table in the DataSource to bind to the <see cref="T:ActiveUp.WebControls.OrderedListBox"/>.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBox.DataSource">
            <summary>
            Gets or sets the data source for this <see cref="T:ActiveUp.WebControls.OrderedListBox"/>.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBox.DataTextField">
            <summary>
            Gets or sets the data source that provides the text content of <see cref="T:ActiveUp.WebControls.OrderedListBoxItem"/>.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBox.DataSelectedField">
            <summary>
            Gets or sets the data source that provides the selected state of <see cref="T:ActiveUp.WebControls.OrderedListBoxItem"/>.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBox.DataLockedField">
            <summary>
            Gets or sets the data source that provides the lock state of <see cref="T:ActiveUp.WebControls.OrderedListBoxItem"/>.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBox.DataTextFormatString">
            <summary>
            Gets or sets the formatting string used to control how data bound to the <see cref="T:ActiveUp.WebControls.OrderedListBox"/> control is displayed.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBox.DataValueField">
            <summary>
            Gets or sets the field of the data source that provides the value of each <see cref="T:ActiveUp.WebControls.OrderedListBoxItem"/>.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBox.Rows">
            <summary>
            Gets or sets the number of rows in height of the listbox.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBox.BorderWidth">
            <summary>
            Gets or sets the border width of the ordered list box.
            </summary>
            <value></value>
            <exception cref="T:System.ArgumentException">The specified border width is a negative value.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBox.BorderStyle">
            <summary>
            Gets or sets the border style of the ordered list box.
            </summary>
            <value></value>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBox.BorderColor">
            <summary>
            Gets or sets the border color of ordered list box.
            </summary>
            <value></value>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBox.MoveButtonsDisabled">
            <summary>
            Gets or sets a value that indicates whether or not the control render the move buttons. 
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBox.Enumerate">
            <summary>
            Gets or sets a value that indicates whether or not the control enumerate the items.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBox.MultipleSelectionEnabled">
            <summary>
            Gets or sets a value that indicates whether or not the control allows multiple selection. 
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBox.LeftListBox">
            <summary>
            Gets or sets the left ordered list box.
            </summary>
            <remarks>Actually, only controls listed in the design-time property windows are supported.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBox.RightListBox">
            <summary>
            Gets or sets the left ordered list box.
            </summary>
            <remarks>Actually, only controls listed in the design-time property windows are supported.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBox.Navigation">
            <summary>
            Gets or sets the navigation type.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBox.ButtonsCssClass">
            <summary>
            Gets or sets the css class to use with the buttons.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBox.ButtonUpText">
            <summary>
            Gets or sets the text to use with the up button.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBox.ButtonUpImage">
            <summary>
            Gets or sets the image to use with the up button.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBox.ButtonUpDisabled">
            <summary>
            Gets or sets the value indicating if the button is enabled or not.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBox.ButtonDownText">
            <summary>
            Gets or sets the text to use with the down button.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBox.ButtonDownImage">
            <summary>
            Gets or sets the image to use with the down button.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBox.ButtonDownDisabled">
            <summary>
            Gets or sets the value indicating if the button is disabled or not.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBox.ButtonLeftText">
            <summary>
            Gets or sets the text to use with the left button.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBox.ButtonLeftImage">
            <summary>
            Gets or sets the image to use with the left button.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBox.ButtonLeftDisabled">
            <summary>
            Gets or sets the value indicating if the button is disabled or not.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBox.ButtonRightText">
            <summary>
            Gets or sets the text to use with the right button.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBox.ButtonRightImage">
            <summary>
            Gets or sets the image to use with the right button.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBox.ButtonRightDisabled">
            <summary>
            Gets or sets the value indicating if the button is disabled or not.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBox.RenderType">
            <summary>
            Gets or sets the value indicating if the client side script is disabled or not.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBox.ScriptDirectory">
            <summary>
            Gets or sets the relative or absolute path to the directory where input API javascript file is.
            </summary>
            <remarks>If the value of this property is string.Empty, the external file script is not used and the API is rendered in the page together with the input render.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBox.ExternalScript">
            <summary>
            Gets or sets the relative or absolute path to the icons directory.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBox.IconsDirectory">
            <summary>
            Gets or sets the relative or absolute path to the external API javascript file.
            </summary>
            <remarks>If the value of this property is string.Empty, the external file script is not used and the API is rendered in the page together with the control render.</remarks>
        </member>
        <member name="M:ActiveUp.WebControls.OrderedListBox.RegisterAPIScriptBlock(System.Web.UI.Page)">
            <summary>
            Registers the API script block.
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="M:ActiveUp.WebControls.OrderedListBox.IsUpLevel">
            <summary>
            Determine if we need to register the client side script and render the control.
            </summary>
            <returns>0 if scripting not allowed, 1 if not an uplevel browser but scripting allowed, 2 if all is OK.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.OrderedListBox.OnPreRender(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary>
            <param name="e">Event Args</param>
        </member>
        <member name="M:ActiveUp.WebControls.OrderedListBox.Render(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Render this control to the output parameter specified.
            </summary>
            <param name="output"> The HTML writer to write out to </param>
        </member>
        <member name="M:ActiveUp.WebControls.OrderedListBox.RenderOrderedListBox(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the ordered list box.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.OrderedListBox.RenderItems(System.Web.UI.HtmlTextWriter)">
            <summary>
            Write the items to be rendered on the client.
            </summary>
            <param name="output">The HtmlTextWriter object that receives the server control content.</param>
        </member>
        <member name="M:ActiveUp.WebControls.OrderedListBox.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Processes post-back data from the control.
            </summary>
            <param name="postDataKey">The key identifier for the control.</param>
            <param name="postCollection">The collection of all incoming name values.</param>
            <returns>True if the state changes as a result of the post-back, otherwise it returns false.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.OrderedListBox.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
            <summary>
            Notify the ASP.NET application that the state of the control has changed.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.OrderedListBox.OnOrderIndexChanged(System.EventArgs)">
            <summary>
            Raise the SelectedIndexChanged of the <see cref="T:ActiveUp.WebControls.OrderedListBox"/> control. This allows you to handle the event directly.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="E:ActiveUp.WebControls.OrderedListBox.OrderIndexChanged">
            <summary>
            Oder index change server event.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.OrderedListBox.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
            <summary>
            Enables the control to process an event raised when a form is posted to the server.
            </summary>
            <param name="eventArgument">A String that represents an optional event argument to be passed to the event handler.</param>
        </member>
        <member name="M:ActiveUp.WebControls.OrderedListBox.OnDataBinding(System.EventArgs)">
            <summary>
            Raises the DataBinding event.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="T:ActiveUp.WebControls.OrderedListBoxConverter">
            <summary>
            This class is used at design time to select only valid data sources to page.
            </summary>
            <remarks>You should not use this class in your project.</remarks>
        </member>
        <member name="M:ActiveUp.WebControls.OrderedListBoxConverter.GetControls(System.ComponentModel.IContainer)">
            <summary>
            Gets the valid controls.
            </summary>
            <param name="container">The container.</param>
            <returns>A collection of valid controls.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.OrderedListBoxConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns a standard value collection.
            </summary>
            <param name="context">The context.</param>
            <returns>A standard value collection.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.OrderedListBoxConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Get standard values.
            </summary>
            <param name="context">The context.</param>
            <returns>A boolean value.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.OrderedListBoxConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Get standard values.
            </summary>
            <param name="context">The context.</param>
            <returns>A boolean value.</returns>
        </member>
        <member name="T:ActiveUp.WebControls.OrderedListBoxItem">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.OrderedListBoxItem"/>.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.OrderedListBoxItem.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.OrderedListBoxItem.#ctor(System.String,System.String)">
            <summary>
            Create a <see cref="T:ActiveUp.WebControls.OrderedListBoxItem"/> by specifying the text and the value.
            </summary>
            <param name="text">Text displayed.</param>
            <param name="val">Value associated to the text.</param>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBoxItem.Selected">
            <summary>
            Gets or sets if the <see cref="T:ActiveUp.WebControls.OrderedListBoxItem"/> is selected or not.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBoxItem.Locked">
            <summary>
            Gets or sets if the <see cref="T:ActiveUp.WebControls.OrderedListBoxItem"/> is locked or not.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBoxItem.Text">
            <summary>
            Gets or sets the text.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBoxItem.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBoxItem.Style">
            <summary>
            Gets or sets the style.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBoxItem.ViewState">
            <summary>
            Gets the view state of the item.
            </summary>
            <value>The view state of the item.</value>
        </member>
        <member name="M:ActiveUp.WebControls.OrderedListBoxItem.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)">
            <summary>
            Notifies the <see cref="T:ActiveUp.WebControls.OrderedListBoxItem"/> that an element, either XML or HTML, was parsed, and adds the element to the server control's ControlCollection object.
            </summary>
            <param name="obj">An Object that represents the parsed element.</param>
        </member>
        <member name="T:ActiveUp.WebControls.OrderedListBoxItemCollection">
            <summary>
            Collection of <see cref="T:ActiveUp.WebControls.OrderedListBoxItem"/>
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.OrderedListBoxItemCollection._items">
            <summary>
            ArrayList of <see cref="T:ActiveUp.WebControls.OrderedListBoxItem"/>.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.OrderedListBoxItemCollection.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBoxItemCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets a <see cref="T:ActiveUp.WebControls.OrderedListBoxItem"/> at the specified index.
            </summary>		
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBoxItemCollection.Item(System.Int32)">
            <summary>
            Gets or sets a <see cref="T:ActiveUp.WebControls.OrderedListBoxItem"/> at the specified index.
            </summary>		
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBoxItemCollection.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBoxItemCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBoxItemCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBoxItemCollection.IsFixedSize">
            <summary>
            Gets a boolean value indicating whether the current instance has a fixed size.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.OrderedListBoxItemCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the current instance is read-only.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.OrderedListBoxItemCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific <see cref="T:ActiveUp.WebControls.OrderedListBoxItem"/> from the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.OrderedListBoxItem"/> to remove from the collection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.OrderedListBoxItemCollection.Remove(ActiveUp.WebControls.OrderedListBoxItem)">
            <summary>
            Removes the first occurrence of a specific <see cref="T:ActiveUp.WebControls.OrderedListBoxItem"/> from the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.OrderedListBoxItem"/> to remove from the collection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.OrderedListBoxItemCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts a <see cref="T:ActiveUp.WebControls.OrderedListBoxItem"/> to the collection at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="item">The <see cref="T:ActiveUp.WebControls.OrderedListBoxItem"/> to insert into the Collection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.OrderedListBoxItemCollection.Insert(System.Int32,ActiveUp.WebControls.OrderedListBoxItem)">
            <summary>
            Inserts a <see cref="T:ActiveUp.WebControls.OrderedListBoxItem"/> to the collection at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="item">The <see cref="T:ActiveUp.WebControls.OrderedListBoxItem"/> to insert into the Collection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.OrderedListBoxItemCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds a <see cref="T:ActiveUp.WebControls.OrderedListBoxItem"/> to the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.OrderedListBoxItem"/> to add to the collection.</param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.OrderedListBoxItemCollection.Add(ActiveUp.WebControls.OrderedListBoxItem)">
            <summary>
            Adds a <see cref="T:ActiveUp.WebControls.OrderedListBoxItem"/> to the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.OrderedListBoxItem"/> to add to the collection.</param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.OrderedListBoxItemCollection.System#Collections#IList#Clear">
            <summary>
            Removes all <see cref="T:ActiveUp.WebControls.OrderedListBoxItem"/> from the collection.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.OrderedListBoxItemCollection.Clear">
            <summary>
            Removes all <see cref="T:ActiveUp.WebControls.OrderedListBoxItem"/> from the collection.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.OrderedListBoxItemCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether a <see cref="T:ActiveUp.WebControls.OrderedListBoxItem"/> is in the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.OrderedListBoxItem"/> to locate in the collection. The element to locate can be a null reference.</param>
            <returns>true if value is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.OrderedListBoxItemCollection.Contains(ActiveUp.WebControls.OrderedListBoxItem)">
            <summary>
            Determines whether a <see cref="T:ActiveUp.WebControls.OrderedListBoxItem"/> is in the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.OrderedListBoxItem"/> to locate in the collection. The element to locate can be a null reference.</param>
            <returns>true if value is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.OrderedListBoxItemCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of a specific <see cref="T:ActiveUp.WebControls.OrderedListBoxItem"/> in the current instance.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.OrderedListBoxItem"/> to locate in the current instance.</param>
            <returns>The index of value if found in the current instance; otherwise, -1.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.OrderedListBoxItemCollection.IndexOf(ActiveUp.WebControls.OrderedListBoxItem)">
            <summary>
            Determines the index of a specific <see cref="T:ActiveUp.WebControls.OrderedListBoxItem"/> in the current instance.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.OrderedListBoxItem"/> to locate in the current instance.</param>
            <returns>The index of value if found in the current instance; otherwise, -1.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.OrderedListBoxItemCollection.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:ActiveUp.WebControls.OrderedListBoxItem"/> at the specified index within the collection.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:ActiveUp.WebControls.OrderedListBoxItem"/> to remove.</param>
        </member>
        <member name="M:ActiveUp.WebControls.OrderedListBoxItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:ActiveUp.WebControls.OrderedListBoxItem"/> at the specified index within the collection.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:ActiveUp.WebControls.OrderedListBoxItem"/> to remove.</param>
        </member>
        <member name="M:ActiveUp.WebControls.OrderedListBoxItemCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.OrderedListBoxItemCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements from the current instance to the specified collection, starting at the specified index in the array.
            </summary>
            <param name="array">A one-dimensional, zero-based Array that is the destination of the elements copied from the current instance. </param>
            <param name="index">A Int32 that specifies the zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:ActiveUp.WebControls.OrderedListBoxItemCollection.GetOrderString">
            <summary>
            Gets the order string.
            </summary>
            <returns>The order sting.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.OrderedListBoxItemCollection.SetOrderString(System.String,System.Boolean)">
            <summary>
            Sets the order string of each items..
            </summary>
            <param name="order">The order.</param>
            <param name="enumerate">if set to <c>true</c> enumerated each item.</param>
        </member>
        <member name="M:ActiveUp.WebControls.OrderedListBoxItemCollection.MoveUp(System.Int32)">
            <summary>
            Move up an item at the start index.
            </summary>
            <param name="startIndex">The start index.</param>
        </member>
        <member name="M:ActiveUp.WebControls.OrderedListBoxItemCollection.MoveDown(System.Int32)">
            <summary>
            Moves the down an item at the start index.
            </summary>
            <param name="startIndex">The start index.</param>
        </member>
        <member name="M:ActiveUp.WebControls.OrderedListBoxItemCollection.MoveSelectedUp">
            <summary>
            Move the selected item up.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.OrderedListBoxItemCollection.MoveSelectedDown">
            <summary>
            Move the selected item down.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.OrderedListBoxItemCollection.MoveSelectedToListBox(System.Web.UI.Page,System.String)">
            <summary>
            Moves the selected item to list box.
            </summary>
            <param name="page">The page.</param>
            <param name="control">The control id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.OrderedListBoxItemCollection.SaveViewState">
            <summary>
            When implemented by a class, saves the changes to a server control's view state to an
            <see cref="T:System.Object"/> .
            </summary>
            <returns>
            The <see langword="Object"/> that contains the view state changes.
            </returns>
        </member>
        <member name="T:ActiveUp.WebControls.OrderedListBoxNavigation">
            <summary>
            Enumeration that define the navigation type for the listboxes.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.OrderedListBoxNavigation.NotSet">
            <summary>
            Nothing is explicitely set.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.OrderedListBoxNavigation.Link">
            <summary>
            Navigation uses hyperlinks.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.OrderedListBoxNavigation.Button">
            <summary>
            Navigation uses standard HTML buttons.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.OrderedListBoxNavigation.Image">
            <summary>
            Navigation uses images as buttons.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.DirectionLift">
            <summary>
            Direction of the slider.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.DirectionLift.Horizontal">
            <summary>
            Horizontal direction.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.DirectionLift.Vertical">
            <summary>
            Vertical direction
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Slider">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.Slider"/> object.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Slider.ValueChangedEventHandler">
            <summary>
            ValueChanged event handler.
            </summary>
        </member>
        <member name="E:ActiveUp.WebControls.Slider.ValueChanged">
            <summary>
            Occurs when the value is changed.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Slider.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Slider.RegisterScriptBlock">
            <summary>
            Register the client side script block in the ASP page.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Slider.OnPreRender(System.EventArgs)">
            <summary>
            Raises the PreRender event.
            </summary>
            <remarks>This method notifies the server control to perform any necessary prerendering steps prior to saving view state and rendering content.</remarks>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data. </param>
        </member>
        <member name="M:ActiveUp.WebControls.Slider.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends server control content to a provided HtmlTextWriter object, which writes the content to be rendered on the client.
            </summary>
            <param name="output">The HtmlTextWriter object that receives the server control content.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Slider.RenderSlider(System.Web.UI.HtmlTextWriter)">
            <summary>
            Render the slider.
            </summary>
            <param name="output">The HtmlTextWriter object that receives the server control content.</param>
        </member>
        <member name="P:ActiveUp.WebControls.Slider.ForeColor">
            <summary>
            The fore color of the object. Not used in this control.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Slider.Font">
            <summary>
            The font of the object. Not used in this control.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Slider.MinusArrowOnImage">
            <summary>
            Gets or sets the image displayed for default minus arrow.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Slider.MinusArrowOffImage">
            <summary>
            Gets or sets the image displayed for the up arrow when clicked.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Slider.PlusArrowOnImage">
            <summary>
            Gets or sets the image displayed for plus arrow when clicked.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Slider.PlusArrowOffImage">
            <summary>
            Gets or sets the image displayed for default down arrow.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Slider.LiftOff">
            <summary>
            Gets or sets the back slider image when the state is up.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Slider.LiftOn">
            <summary>
            Gets or sets the back slider image when the state is down.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Slider.LiftStartOff">
            <summary>
            Gets or sets the start image of the lift.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Slider.LiftCenterOff">
            <summary>
            Gets or sets the center image of the lift.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Slider.LiftGrabberOff">
            <summary>
            Gets or sets the grabber image of the lift.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Slider.LiftEndOff">
            <summary>
            Gets or sets the end image of the lift.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Slider.Value">
            <summary>
            Gets the current value of the slider.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Slider.ToolTip">
            <summary>
            Gets or sets the tool tip of the control. Not used in this control.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Slider.Min">
            <summary>
            Gets or sets the minimum value.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Slider.Max">
            <summary>
            Gets or sets the maximum value.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Slider.Step">
            <summary>
            Gets or sets the step of each operation.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Slider.DirectStep">
            <summary>
            Gets or sets the step of each operation.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Slider.SpeedArrow">
            <summary>
            Gets or sets the speed between each step when you click down an arrow.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Slider.SpeedOutLift">
            <summary>
            Gets or sets the speed between each step when you out the lift.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Slider.Direction">
            <summary>
            Gets or sets the direction of the slider.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Slider.Height">
            <summary>
            The height of the control.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Slider.Width">
            <summary>
            The width of the control.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Slider.Size">
            <summary>
            Gets or sets the size of the control.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Slider.LiftSize">
            <summary>
            Gets or sets the size of the lift.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Slider.ExternalScript">
            <summary>
            Gets or sets the relative or absolute path to the external ActiveCalendar API javascript file.
            </summary>
            <remarks>If the value of this property is string.Empty, the external file script is not used and the API is rendered in the page together with the ActiveCalendar render.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.Slider.ScriptDirectory">
            <summary>
            Gets or sets the relative or absolute path to the directory where the API javascript file is.
            </summary>
            <remarks>If the value of this property is string.Empty, the external file script is not used and the API is rendered in the page together with the control render.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.Slider.OnValueChangedClient">
            <summary>
            Gets or sets the client side code when the value changes.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Slider.OnValueChanged(System.EventArgs)">
            <summary>
            Raise the <see cref="E:ActiveUp.WebControls.Slider.ValueChanged"/> of the <see cref="T:ActiveUp.WebControls.Slider"/> control. This allows you to handle the event directly.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Slider.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
            <summary>
            Enables the control to process an event raised when a form is posted to the server.
            </summary>
            <param name="eventArgument">A String that represents an optional event argument to be passed to the event handler.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Slider.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Processes post-back data from the control.
            </summary>
            <param name="postDataKey">The key identifier for the control.</param>
            <param name="postCollection">The collection of all incoming name values.</param>
            <returns>True if the state changes as a result of the post-back, otherwise it returns false.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.Slider.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
            <summary>
            Notify the ASP.NET application that the state of the control has changed.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Loader">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.Loader"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Loader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.Loader"/> class.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Loader.AutoTrigger">
            <summary>
            Gets or sets a value indicating whether the trigger must be in automatic mode.
            </summary>
            <value><c>true</c> if the trigger must be in automatic mode; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Loader.TimeDelay">
            <summary>
            Gets or sets the time delay.
            </summary>
            <value>The time delay.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Loader.RenderOnPostBack">
            <summary>
            Gets or sets a value indicating whether the loader must be rendered on post back.
            </summary>
            <value><c>true</c> if the loader must be rendered on post back; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Loader.Text">
            <summary>
            Gets or sets the value containing the preload HTML.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Loader.Render(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Render this control to the output parameter specified.
            </summary>
            <param name="output"> The HTML writer to write out to </param>
        </member>
        <member name="M:ActiveUp.WebControls.Loader.RenderLoader(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the loader web control.
            </summary>
            <param name="output">The output writer.</param>
        </member>
        <member name="T:ActiveUp.WebControls.LoaderControlDesigner">
            <summary>
            This class is used to render the pager at design time.
            </summary>
            <remarks>You should not use this class in your project.</remarks>
        </member>
        <member name="M:ActiveUp.WebControls.LoaderControlDesigner.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.LoaderControlDesigner.GetDesignTimeHtml">
            <summary>
            Gets the design time HTML code.
            </summary>
            <returns>A string containing the HTML to render.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.LoaderControlDesigner.GetEmptyDesignTimeHtml">
            <summary>
            Gets the design time HTML code when empty (never used in ActivePager).
            </summary>
            <returns>A string containing the HTML to render.</returns>
        </member>
        <member name="T:ActiveUp.WebControls.PagePosition">
            <summary>
            Page position enumeration.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.PagePosition.Absolute">
            <summary>
            Absolute position.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.PagePosition.TopLeft">
            <summary>
            Top left position.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.PagePosition.TopCenter">
            <summary>
            Top center position.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.PagePosition.TopRight">
            <summary>
            Top right position.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.PagePosition.MiddleLeft">
            <summary>
            Middle left position.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.PagePosition.MiddleCenter">
            <summary>
            Middle center position.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.PagePosition.MiddleRight">
            <summary>
            Middle right position.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.PagePosition.BottomLeft">
            <summary>
            Bottom left position.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.PagePosition.BottomCenter">
            <summary>
            Bottom center position.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.PagePosition.BottomRight">
            <summary>
            Bottom right position.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.LocalizationManager">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.LocalizationManager"/> object.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizationManager.DefinedLanguages">
            <summary>
            Defined languages.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.LocalizationManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.LocalizationManager"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.LocalizationManager.GetActiveLanguageNumberFromCode">
            <summary>
            Gets the active language number from code.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.LocalizationManager.GetActiveLanguageNumber">
            <summary>
            Gets the active language number.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.LocalizationManager.GetActiveLanguageCode">
            <summary>
            Gets the active language code.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.LocalizationManager.GetActiveLanguageCode(System.String)">
            <summary>
            Gets the active language code.
            </summary>
            <param name="languages">The languages.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.LocalizationManager.GetCookie(System.String)">
            <summary>
            Gets the cookie.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.LocalizationManager.SetCookie(System.String,System.String)">
            <summary>
            Sets the cookie.
            </summary>
            <param name="key">The key.</param>
            <param name="val">The value.</param>
        </member>
        <member name="M:ActiveUp.WebControls.LocalizationManager.DeleteCookie(System.String)">
            <summary>
            Deletes the cookie.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:ActiveUp.WebControls.LocalizationManager.SetActiveLanguageCode(System.String,System.String)">
            <summary>
            Sets the active language code.
            </summary>
            <param name="code">The code.</param>
            <param name="languages">The languages.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.LocalizationManager.SetActiveLanguageCode(System.String)">
            <summary>
            Sets the active language code.
            </summary>
            <param name="code">The code.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.LocalizationManager.SetActiveLanguageNumber(System.Int32)">
            <summary>
            Sets the active language number.
            </summary>
            <param name="number">The number.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.LocalizationManager.SetActiveLanguageNumberFromCode(System.String)">
            <summary>
            Sets the active language number from code.
            </summary>
            <param name="code">The code.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.LocalizationManager.GetLanguage(System.String)">
            <summary>
            Gets the language.
            </summary>
            <param name="code">The code.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.LocalizationManager.GetLanguageCodeFromNumber(System.Int32)">
            <summary>
            Gets the language code from number.
            </summary>
            <param name="number">The number.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.LocalizationManager.GetLanguageCodes">
            <summary>
            Gets the language codes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.LocalizationManager.ParseCountryCode(System.String)">
            <summary>
            Parses the country code.
            </summary>
            <param name="acceptLanguage">The accept language.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.LocalizationManager.ParseCountryCode">
            <summary>
            Parses the country code.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.LocalizationManager.ParseLanguageCode(System.String)">
            <summary>
            Parses the language code.
            </summary>
            <param name="acceptLanguage">The accepted language.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.LocalizationManager.ParseLanguageCode">
            <summary>
            Parses the language code.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ActiveUp.WebControls.Menu">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.Menu"/> object.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Menu.CLIENTSIDE_API">
            <summary>
            Client side script block.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Menu.SCRIPTKEY">
            <summary>
            Unique client script key.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Menu.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.Menu"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Menu.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.Menu"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Menu._Init(System.String)">
            <summary>
            Initalize the new <see cref="T:ActiveUp.WebControls.Menu"/>.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Menu.RegisterAPIScriptBlock">
            <summary>
            Register the client-side script block in the ASPX page.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Menu.FindById(System.String)">
            <summary>
            Finds a menu item by his id.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.Menu.OnPreRender(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary>
            <param name="e">Event Args</param>
        </member>
        <member name="M:ActiveUp.WebControls.Menu.Render(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Render this control to the output parameter specified.
            </summary>
            <param name="output">Output stream that contains the HTML used to represent the control.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Menu.LoadFromXml(System.String)">
            <summary>
            Loads menu from XML.
            </summary>
            <param name="fileName">Name of the xml file.</param>
        </member>
        <member name="P:ActiveUp.WebControls.Menu.AutoPostBack">
            <summary>
            Gets or sets a value indicating whether the post back occurs after each menu item selection.
            </summary>
            <value><c>true</c> if the post back occus after each menu item selection; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Menu.BorderColor">
            <summary>
            Gets or sets the background color of the Web server control.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Menu.BorderWidth">
            <summary>
            Gets or sets the border width of the Web server control.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Menu.CellSpacing">
            <summary>
            Gets or sets the cell spacing of the table representing the menu.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Menu.CellPadding">
            <summary>
            Gets or sets the cell padding of the table representing the toolbar.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Menu.BackImage">
            <summary>
            Image used as background of the tool.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Menu.StyleMenuItems">
            <summary>
            Gets or sets the menu items style.
            </summary>
            <value>The menu items style.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Menu.ImageArrowSubItemMenu">
            <summary>
            Gets or sets the arrow image if a item contains a sub menu.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Menu.MenuItems">
            <summary>
            Gets or sets the collection containing the menu items.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Menu.DataSource">
            <summary>
            Gets or sets the main data source of the body template.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Menu.DataText">
            <summary>
            Gets or sets the field of the data source that provides the text content of the list items.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Menu.DataNavigateUrl">
            <summary>
            Gets or sets the field of the data source that provides the value of each link item.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Menu.DataTarget">
            <summary>
            Gets or sets the field of the data source that provides the value of each target item.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Menu.DataImage">
            <summary>
            Gets or sets the field of the data source that provides the value of each image item.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Menu.DataImageOver">
            <summary>
            Gets or sets the field of the data source that provides the value of each image over item.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Menu.DataClientEvent">
            <summary>
            Gets or sets the field of the data source that provides the value of each client side event item.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Menu.DataParent">
            <summary>
            Gets or sets the field of data parent.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Menu.SortColumn">
            <summary>
            Gets or sets the field for sorting nodes.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Menu.SortOrder">
            <summary>
            Gets or sets the field for sort order.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Menu.DataValue">
            <summary>
            Gets or sets the field of the data source that provides the value of each list item.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Menu.ScriptDirectory">
            <summary>
            Gets or sets the relative or absolute path to the directory where the API javascript file is.
            </summary>
            <remarks>If the value of this property is string.Empty, the external file script is not used and the API is rendered in the page together with the control render.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.Menu.ExternalScript">
            <summary>
            Gets or sets the filename of the external script file.
            </summary>
        </member>
        <member name="E:ActiveUp.WebControls.Menu.Click">
            <summary>
            Click server event.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Menu.OnClick(ActiveUp.WebControls.StringEventArgs)">
            <summary>
            Raises the click event.
            </summary>
            <param name="e">The <see cref="T:ActiveUp.WebControls.StringEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:ActiveUp.WebControls.Menu.StringEventHandler">
            <summary>
            Event handler contains a string as argument.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Menu.RaisePostBackEvent(System.String)">
            <summary>
            A RaisePostBackEvent.
            </summary>
            <param name="eventArgument">eventArgument</param>
        </member>
        <member name="M:ActiveUp.WebControls.Menu.RaisePostDataChangedEvent">
            <summary>
            When implemented by a class, signals the server control object to notify the ASP.NET application that the state of the
            control has changed.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Menu.LoadViewState(System.Object)">
            <summary>
            Loads the state of the view.
            </summary>
            <param name="savedState">State of the saved.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Menu.SaveViewState">
            <summary>
            Saves the view state of the control.
            </summary>
            <returns>The saved view state.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.Menu.TrackViewState">
            <summary>
            Tracks the view state.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Menu.DataBind">
            <summary>
            Binds a data source to the invoked server control and all its child
            controls.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.MenuComponentEditor">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.MenuComponentEditor"/> object.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.MenuDesigner">
            <summary>
            Designer of the <see cref="T:ActiveUp.WebControls.MenuDesigner"/> control.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.MenuDesigner.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuDesigner.Verbs">
            <summary>
            Gets the design-time verbs supported by the component that is associated with the designer.
            </summary>
            <value></value>
        </member>
        <member name="M:ActiveUp.WebControls.MenuDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initializes the designer and
            loads the specified component.
            </summary>
            <param name="component">The control element being designed.</param>
        </member>
        <member name="M:ActiveUp.WebControls.MenuDesigner.GetDesignTimeHtml">
            <summary>
            Gets the HTML that is used to represent the control at design time.
            </summary>
            <returns>The HTML that is used to represent the control at design time.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.MenuDesigner.GetErrorDesignTimeHtml(System.Exception)">
            <summary>
            Gets the HTML that provides information about the specified exception. This method is typically called after an error has been encountered at design time.
            </summary>
            <param name="e">The exception that occurred.</param>
            <returns>The HTML for the specified exception.</returns>
        </member>
        <member name="P:ActiveUp.WebControls.MenuDesigner.AllowResize">
            <summary>
            Gets a value
            indicating whether the control can be resized.
            </summary>
            <value></value>
        </member>
        <member name="T:ActiveUp.WebControls.MenuItem">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.MenuItem"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.MenuItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.MenuItem"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.MenuItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.MenuItem"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItem.Text">
            <summary>
            Gets or sets the text of the item.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItem.Align">
            <summary>
            Gets or sets the width of the menu item
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItem.Height">
            <summary>
            Gets or sets the height of an item menu.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItem.Width">
            <summary>
            Gets or sets the height of an item menu.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItem.Image">
            <summary>
            Gets or sets the image of the item.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItem.ImageOver">
            <summary>
            Gets or sets the image of the item.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItem.ViewState">
            <summary>
            Gets a dictionary of state information that allows you to save and restore the view
            state of a server control across multiple requests for the same page.
            </summary>
            <value></value>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItem.SubMenu">
            <summary>
            Gets or sets the sub menu.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItem.EmbeddedObject">
            <summary>
            Gets or sets the embedded object of the item.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItem.NavigateURL">
            <summary>
            Gets or sets the navigation link when a click occurs.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItem.Target">
            <summary>
            Gets or sets the target when a click occurs.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItem.OnClickClient">
            <summary>
            Gets or sets the onclick event client side.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.MenuItem.Render(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Render this control to the output parameter specified.
            </summary>
            <param name="output">Output stream that contains the HTML used to represent the control.</param>
        </member>
        <member name="M:ActiveUp.WebControls.MenuItem.RaisePostBackEvent(System.String)">
            <summary>
            A RaisePostBackEvent.
            </summary>
            <param name="eventArgument">eventArgument</param>
        </member>
        <member name="M:ActiveUp.WebControls.MenuItem.RaisePostDataChangedEvent">
            <summary>
            When implemented by a class, signals the server control object to notify the ASP.NET application that the state of the
            control has changed.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.MenuItemCollection">
            <summary>
            A Collection of <see cref="T:ActiveUp.WebControls.MenuItemCollection"/>.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.MenuItemCollection._toolMenuItemCollection">
            <summary>
            A collection of ToolMenuItem.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.MenuItemCollection.#ctor(System.Web.UI.ControlCollection)">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItemCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets a <see cref="T:ActiveUp.WebControls.MenuItemCollection"/> at the specified index.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItemCollection.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItemCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItemCollection.IsFixedSize">
            <summary>
            Gets a boolean value indicating whether the current instance has a fixed size.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItemCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the current instance is read-only.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItemCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.MenuItemCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements from the current instance to the specified collection, starting at the specified index in the array.
            </summary>
            <param name="array">A one-dimensional, zero-based Array that is the destination of the elements copied from the current instance. </param>
            <param name="index">A Int32 that specifies the zero-based index in array at which copying begins.</param>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItemCollection.Item(System.Int32)">
            <summary>
            Gets or sets a <see cref="T:ActiveUp.WebControls.MenuItem"/> at the specified index.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.MenuItemCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific <see cref="T:ActiveUp.WebControls.MenuItem"/> from the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.MenuItem"/> to remove from the collection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.MenuItemCollection.Remove(ActiveUp.WebControls.MenuItem)">
            <summary>
            Removes a <see cref="T:ActiveUp.WebControls.MenuItem"/> from the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.MenuItem"/> to remove from the collection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.MenuItemCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts a <see cref="T:ActiveUp.WebControls.MenuItem"/> to the collection at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="item">The <see cref="T:ActiveUp.WebControls.MenuItem"/> to insert into the Collection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.MenuItemCollection.Insert(System.Int32,ActiveUp.WebControls.MenuItem)">
            <summary>
            Inserts a <see cref="T:ActiveUp.WebControls.MenuItem"/> to the collection at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="item">The <see cref="T:ActiveUp.WebControls.MenuItem"/> to insert into the Collection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.MenuItemCollection.Add(System.Object)">
            <summary>
            Adds a <see cref="T:ActiveUp.WebControls.MenuItem"/> to the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.MenuItem"/> to add to the collection.</param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.MenuItemCollection.Add(ActiveUp.WebControls.MenuItem)">
            <summary>
            Adds a <see cref="T:ActiveUp.WebControls.MenuItem"/> to the collection
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.MenuItem"/> to add to the collection.</param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.MenuItemCollection.Clear">
            <summary>
            Removes all <see cref="T:ActiveUp.WebControls.MenuItem"/> from the collection.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.MenuItemCollection.Contains(System.Object)">
            <summary>
            Determines whether a <see cref="T:ActiveUp.WebControls.MenuItem"/> is in the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.MenuItem"/> to locate in the collection. The element to locate can be a null reference.</param>
            <returns>true if value is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.MenuItemCollection.Contains(ActiveUp.WebControls.MenuItem)">
            <summary>
            Determines whether a <see cref="T:ActiveUp.WebControls.MenuItem"/> is in the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.MenuItem"/> to locate in the collection. The element to locate can be a null reference.</param>
            <returns>true if value is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.MenuItemCollection.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific <see cref="T:ActiveUp.WebControls.MenuItemCollection"/> in the current instance.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.MenuItemCollection"/> to locate in the current instance.</param>
            <returns>The index of value if found in the current instance; otherwise, -1.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.MenuItemCollection.IndexOf(ActiveUp.WebControls.MenuItemCollection)">
            <summary>
            Determines the index of a specific <see cref="T:ActiveUp.WebControls.MenuItemCollection"/> in the current instance.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.MenuItemCollection"/> to locate in the current instance.</param>
            <returns>The index of value if found in the current instance; otherwise, -1.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.MenuItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:ActiveUp.WebControls.MenuItemCollection"/> at the specified index within the collection.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:ActiveUp.WebControls.MenuItemCollection"/> to remove.</param>
        </member>
        <member name="M:ActiveUp.WebControls.MenuItemCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.MenuItemCollection.SaveViewState">
            <summary>
            When implemented by a class, saves the changes to a server control's view state to an
            <see cref="T:System.Object"/> .
            </summary>
            <returns>
            The <see langword="Object"/> that contains the view state changes.
            </returns>
        </member>
        <member name="T:ActiveUp.WebControls.MenuItemProperty">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.MenuItemProperty"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.MenuItemProperty.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.MenuItemProperty"/> class.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItemProperty.UniqueID">
            <summary>
            Gets or sets the unique id.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItemProperty.Text">
            <summary>
            Gets or sets the displayed text.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItemProperty.Height">
            <summary>
            Gets or sets the height of the menu item
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItemProperty.Width">
            <summary>
            Gets or sets the width of the menu item
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItemProperty.Image">
            <summary>
            Gets or sets the image of the item.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItemProperty.ImageOver">
            <summary>
            Gets or sets the image of the item.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItemProperty.Target">
            <summary>
            Gets or sets the target of the item.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItemProperty.NavigateURL">
            <summary>
            Gets or sets the image over of the item.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItemProperty.Align">
            <summary>
            Gets or sets the align of the item.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItemProperty.OnClickClient">
            <summary>
            Gets or sets the on click client side event.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.MenuItemStyle">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.MenuItemStyle"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.MenuItemStyle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.MenuItemStyle"/> class.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItemStyle.AllowRollOver">
            <summary>
            Indicates if you want to allow rollover.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItemStyle.BackColor">
            <summary>
            Gets or sets the background color.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItemStyle.BackColorOver">
            <summary>
            Gets or sets the background color rollover.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItemStyle.BorderColor">
            <summary>
            Gets or sets the border color.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItemStyle.BorderColorOver">
            <summary>
            Gets or sets the border color rollover.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItemStyle.BorderStyle">
            <summary>
            Gets or sets the border style of a item menu.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItemStyle.BorderStyleOver">
            <summary>
            Gets or sets the border style rollover of a item menu.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItemStyle.BorderWidth">
            <summary>
            Gets or sets the border width of a item menu.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItemStyle.BorderWidthOver">
            <summary>
            Gets or sets the border width of a item menu.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItemStyle.CssClass">
            <summary>
            Gets or sets the CSS class.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItemStyle.CssClassOver">
            <summary>
            Gets or sets the CSS rollover class.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItemStyle.ForeColor">
            <summary>
            Gets or sets the fore color of an item menu.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItemStyle.ForeColorOver">
            <summary>
            Gets or sets the fore color rollover of an item menu.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItemStyle.Margin">
            <summary>
            Gets or sets the margin of a item menu.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuItemStyle.ViewState">
            <summary>
            Gets a dictionary of state information that allows you to save and restore the view
            state of a server control across multiple requests for the same page.
            </summary>
            <value></value>
        </member>
        <member name="M:ActiveUp.WebControls.MenuItemStyle.CreateHtmlCss(System.String,System.String)">
            <summary>
            Creates the HTML CSS.
            </summary>
            <param name="clientID">The client ID.</param>
            <param name="Name">The name.</param>
            <returns></returns>
        </member>
        <member name="T:ActiveUp.WebControls.MenuPropertyBuilderForm">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.MenuPropertyBuilderForm"/> object.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.MenuPropertyBuilderForm.components">
            <summary>
            Variable nécessaire au concepteur.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.MenuPropertyBuilderForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.MenuPropertyBuilderForm"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.MenuPropertyBuilderForm.#ctor(ActiveUp.WebControls.Menu)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.MenuPropertyBuilderForm"/> class.
            </summary>
            <param name="menu">The menu.</param>
        </member>
        <member name="M:ActiveUp.WebControls.MenuPropertyBuilderForm.Dispose(System.Boolean)">
            <summary>
            Nettoyage des ressources utilisées.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.MenuPropertyBuilderForm.InitializeComponent">
            <summary>
            Méthode requise pour la prise en charge du concepteur - ne modifiez pas
            le contenu de cette méthode avec l'éditeur de code.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.MenuPropertyBuilderForm.Main">
            <summary>
            Point d'entrée principal de l'application.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.MenuStyle">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.MenuStyle"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.MenuStyle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.MenuStyle"/> class.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuStyle.BackColor">
            <summary>
            Gets or sets the background color.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuStyle.BorderColor">
            <summary>
            Gets or sets the border color.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuStyle.BorderStyle">
            <summary>
            Gets or sets the border style of a item menu.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuStyle.BorderWidth">
            <summary>
            Gets or sets the border width of a item menu.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuStyle.CssClass">
            <summary>
            Gets or sets the CSS class.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuStyle.ForeColor">
            <summary>
            Gets or sets the fore color of an item menu.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.MenuStyle.ViewState">
            <summary>
            Gets a dictionary of state information that allows you to save and restore the view
            state of a server control across multiple requests for the same page.
            </summary>
            <value></value>
        </member>
        <member name="M:ActiveUp.WebControls.MenuStyle.CreateHtmlCss(System.String,System.String)">
            <summary>
            Creates the HTML CSS.
            </summary>
            <param name="clientID">The client ID.</param>
            <param name="Name">The name.</param>
            <returns></returns>
        </member>
        <member name="T:ActiveUp.WebControls.StringEventArgs">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.StringEventArgs"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.StringEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.StringEventArgs"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="P:ActiveUp.WebControls.StringEventArgs.Message">
            <summary>
            Gets the message.
            </summary>
            <value>The message.</value>
        </member>
        <member name="T:ActiveUp.WebControls.ToolSubMenu">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolSubMenu"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolSubMenu.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolSubMenu"/> class.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolSubMenu.CellSpacing">
            <summary>
            Gets or sets the cell spacing of the table representing the menu.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolSubMenu.CellPadding">
            <summary>
            Gets or sets the cell padding of the table representing the toolbar.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolSubMenu.StyleMenu">
            <summary>
            Gets or sets the style menu.
            </summary>
            <value>The style menu.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ToolSubMenu.StyleItems">
            <summary>
            Gets or sets the sub menu style items.
            </summary>
            <value>The sub menu style items.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ToolSubMenu.Items">
            <summary>
            Gets or sets the collection containing the sub menu items.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolSubMenu.ViewState">
            <summary>
            Gets a dictionary of state information that allows you to save and restore the view
            state of a server control across multiple requests for the same page.
            </summary>
            <value></value>
        </member>
        <member name="T:ActiveUp.WebControls.XmlMenu">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.XmlMenu"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.XmlMenu.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.XmlMenu"/> class.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.XmlMenu.ImageArrowSubItemMenu">
            <summary>
            Gets or sets the image arrow sub item menu.
            </summary>
            <value>The image arrow sub item menu.</value>
        </member>
        <member name="P:ActiveUp.WebControls.XmlMenu.StyleMenu">
            <summary>
            Gets or sets the style menu.
            </summary>
            <value>The style menu.</value>
        </member>
        <member name="P:ActiveUp.WebControls.XmlMenu.StyleMenuItems">
            <summary>
            Gets or sets the style menu items.
            </summary>
            <value>The style menu items.</value>
        </member>
        <member name="P:ActiveUp.WebControls.XmlMenu.MenuItems">
            <summary>
            Gets or sets the menu items.
            </summary>
            <value>The menu items.</value>
        </member>
        <member name="T:ActiveUp.WebControls.XmlMenuItem">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.XmlMenuItem"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.XmlMenuItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.XmlMenuItem"/> class.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.XmlMenuItem.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:ActiveUp.WebControls.XmlMenuItem.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:ActiveUp.WebControls.XmlMenuItem.Image">
            <summary>
            Gets or sets the image.
            </summary>
            <value>The image.</value>
        </member>
        <member name="P:ActiveUp.WebControls.XmlMenuItem.ImageOver">
            <summary>
            Gets or sets the image over.
            </summary>
            <value>The image over.</value>
        </member>
        <member name="P:ActiveUp.WebControls.XmlMenuItem.Align">
            <summary>
            Gets or sets the align.
            </summary>
            <value>The align.</value>
        </member>
        <member name="P:ActiveUp.WebControls.XmlMenuItem.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:ActiveUp.WebControls.XmlMenuItem.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:ActiveUp.WebControls.XmlMenuItem.NavigateURL">
            <summary>
            Gets or sets the navigate URL.
            </summary>
            <value>The navigate URL.</value>
        </member>
        <member name="P:ActiveUp.WebControls.XmlMenuItem.Target">
            <summary>
            Gets or sets the target.
            </summary>
            <value>The target.</value>
        </member>
        <member name="P:ActiveUp.WebControls.XmlMenuItem.OnClickClient">
            <summary>
            Gets or sets the on click client.
            </summary>
            <value>The on click client.</value>
        </member>
        <member name="P:ActiveUp.WebControls.XmlMenuItem.SubMenu">
            <summary>
            Gets or sets the sub menu.
            </summary>
            <value>The sub menu.</value>
        </member>
        <member name="T:ActiveUp.WebControls.XmlMenuItemCollection">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.XmlMenuItemCollection"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.XmlMenuItemCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.XmlMenuItemCollection"/> class.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.XmlMenuItemCollection.MenuItems">
            <summary>
            Gets or sets the menu items.
            </summary>
            <value>The menu items.</value>
        </member>
        <member name="T:ActiveUp.WebControls.XmlMenuItemStyle">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.XmlMenuItemStyle"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.XmlMenuItemStyle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.XmlMenuItemStyle"/> class.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.XmlMenuItemStyle.AllowRollOver">
            <summary>
            Gets or sets a value indicating whether rollover is allowed.
            </summary>
            <value><c>true</c> if rollover is allowed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.XmlMenuItemStyle.BackColorOver">
            <summary>
            Gets or sets the background color over.
            </summary>
            <value>The background color over.</value>
        </member>
        <member name="P:ActiveUp.WebControls.XmlMenuItemStyle.BorderColorOver">
            <summary>
            Gets or sets the border color over.
            </summary>
            <value>The border color over.</value>
        </member>
        <member name="P:ActiveUp.WebControls.XmlMenuItemStyle.BorderStyleOver">
            <summary>
            Gets or sets the border style over.
            </summary>
            <value>The border style over.</value>
        </member>
        <member name="P:ActiveUp.WebControls.XmlMenuItemStyle.BorderWidthOver">
            <summary>
            Gets or sets the border width over.
            </summary>
            <value>The border width over.</value>
        </member>
        <member name="P:ActiveUp.WebControls.XmlMenuItemStyle.CssClassOver">
            <summary>
            Gets or sets the CSS class over.
            </summary>
            <value>The CSS class over.</value>
        </member>
        <member name="P:ActiveUp.WebControls.XmlMenuItemStyle.Margin">
            <summary>
            Gets or sets the margin.
            </summary>
            <value>The margin.</value>
        </member>
        <member name="P:ActiveUp.WebControls.XmlMenuItemStyle.ForeColorOver">
            <summary>
            Gets or sets the fore color over.
            </summary>
            <value>The fore color over.</value>
        </member>
        <member name="P:ActiveUp.WebControls.XmlMenuItemStyle.BorderWidth">
            <summary>
            Gets or sets the border width.
            </summary>
            <value>The border width.</value>
        </member>
        <member name="T:ActiveUp.WebControls.XmlMenuStyle">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.XmlMenuStyle"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.XmlMenuStyle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.XmlMenuStyle"/> class.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.XmlMenuStyle.CellPadding">
            <summary>
            Gets or sets the cell padding.
            </summary>
            <value>The cell padding.</value>
        </member>
        <member name="P:ActiveUp.WebControls.XmlMenuStyle.CellSpacing">
            <summary>
            Gets or sets the cell spacing.
            </summary>
            <value>The cell spacing.</value>
        </member>
        <member name="T:ActiveUp.WebControls.XmlMenuStyleBase">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.XmlMenuStyleBase"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.XmlMenuStyleBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.XmlMenuStyleBase"/> class.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.XmlMenuStyleBase.BackColor">
            <summary>
            Gets or sets the background color.
            </summary>
            <value>The color of the back.</value>
        </member>
        <member name="P:ActiveUp.WebControls.XmlMenuStyleBase.BorderColor">
            <summary>
            Gets or sets the border color.
            </summary>
            <value>The color of the border.</value>
        </member>
        <member name="P:ActiveUp.WebControls.XmlMenuStyleBase.BorderStyle">
            <summary>
            Gets or sets the border style.
            </summary>
            <value>The border style.</value>
        </member>
        <member name="P:ActiveUp.WebControls.XmlMenuStyleBase.CssClass">
            <summary>
            Gets or sets the CSS class.
            </summary>
            <value>The CSS class.</value>
        </member>
        <member name="P:ActiveUp.WebControls.XmlMenuStyleBase.ForeColor">
            <summary>
            Gets or sets the fore color.
            </summary>
            <value>The fore color.</value>
        </member>
        <member name="P:ActiveUp.WebControls.XmlMenuStyleBase.BorderWidth">
            <summary>
            Gets or sets the border width.
            </summary>
            <value>The border width.</value>
        </member>
        <member name="T:ActiveUp.WebControls.XmlSubMenu">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.XmlSubMenu"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.XmlSubMenu.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.XmlSubMenu"/> class.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.XmlSubMenu.MenuItems">
            <summary>
            Gets or sets the menu items.
            </summary>
            <value>The menu items.</value>
        </member>
        <member name="P:ActiveUp.WebControls.XmlSubMenu.StyleMenu">
            <summary>
            Gets or sets the style menu.
            </summary>
            <value>The style menu.</value>
        </member>
        <member name="P:ActiveUp.WebControls.XmlSubMenu.StyleItems">
            <summary>
            Gets or sets the style items.
            </summary>
            <value>The style items.</value>
        </member>
        <member name="T:ActiveUp.WebControls.AlphaPager">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.AlphaPager"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.AlphaPager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.AlphaPager"/> class.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.AlphaPager.PagerElements">
            <summary>
            Gets or sets the pager elements.
            </summary>
            <value>The pager elements.</value>
        </member>
        <member name="P:ActiveUp.WebControls.AlphaPager.PagerFilters">
            <summary>
            Gets or sets the pager filters.
            </summary>
            <value>The pager filters.</value>
        </member>
        <member name="P:ActiveUp.WebControls.AlphaPager.CurrentPage">
            <summary>
            Gets or sets the current index.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.AlphaPager.CurrentFilter">
            <summary>
            Gets or sets the current filter.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.AlphaPager.CurrentKey">
            <summary>
            Gets or sets the current index.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.AlphaPager.CurrentLabel">
            <summary>
            Gets or sets the current index.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.AlphaPager.OnPreviousPage_Click(System.Object,System.EventArgs)">
            <summary>
            Executed when the previous page link is clicked.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:ActiveUp.WebControls.AlphaPager.OnNextPage_Click(System.Object,System.EventArgs)">
            <summary>
            Executed when the next page link is clicked.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:ActiveUp.WebControls.AlphaPager.OnGotoPage_Click(System.Object,System.EventArgs)">
            <summary>
            Executed when a specific page is clicked.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:ActiveUp.WebControls.AlphaPager.BuildInfo(System.Web.UI.WebControls.TableCell,System.Boolean)">
            <summary>
            Builds the information panel content.
            </summary>
            <param name="cell">The table cell.</param>
            <param name="designTime">Specify if we need the design time string.</param>
        </member>
        <member name="E:ActiveUp.WebControls.AlphaPager.FilterChanged">
            <summary>
            Occurs when the index is changed.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.AlphaPager.OnFilterChanged(System.EventArgs)">
            <summary>
            Call all IndexChanged event handlers if any.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="T:ActiveUp.WebControls.NumericPager">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.NumericPager"/> object.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.PagedControl">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.PagedControl"/> object.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.PagedControl._useCounter">
            <summary>
            Used for the license counter.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.PagedControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.PagedControl"/> class.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.PagedControl.PanelCssClass">
            <summary>
            Gets or sets the Cascading Style Sheet name of the panel where the status is displayed.
            </summary>
            <remarks>This property will affect the table line (TR) of the control that display both the info panel and navigation panel. To apply borders or other styles, use the <see cref="P:ActiveUp.WebControls.PagedControl.PagerStyle"/> property.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.PagedControl.CellPadding">
            <summary>
            Gets or sets the cell padding value of the table that contain the pager panels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.PagedControl.CellSpacing">
            <summary>
            Gets or sets the cell spacing value of the table that contain the page panels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.PagedControl.InfoTemplate">
            <summary>
            Gets or sets the navigation template of the pager.
            </summary>
            <remarks>The default value of this property is <c>Total Records: &lt;b&gt;$RECORDCOUNT$&lt;/b&gt; - Page: &lt;b&gt;$CURRENTPAGE$&lt;/b&gt; of &lt;b&gt;$PAGECOUNT$&lt;/b&gt;</c>.</remarks>
            <example>
            This property  allows your to specify exactly what you want to display in the information panel.<br></br>
            <br></br>
            The value of this property consist of a string containing both literal and tag content. To display the record count, you must include <c>$RECORDCOUNT$</c>.<br></br>
            <br></br>
            The available tags are :<br></br>
            <br></br>
            <c>$RECORDCOUNT$</c>  : display the total number of records contained in the list.<br></br>
            <c>$CURRENTPAGE$</c>  : display the current selected page in the list.<br></br>
            <c>$PAGECOUNT$</c>    : display the total number of pages contained in the list.<br></br>
            <c>$CURRENTINDEX$</c> : display the current index.<br></br>
            <br></br>
            <b>Example</b><br></br>
            <br></br>
            &quot;Page &lt;b&gt;$CURRENTPAGE$&lt;/b&gt;/$PAGECOUNT$. &lt;b&gt;$RECORDCOUNT$&lt;/b&gt; records found.&quot;
            <br></br>
            <i>... will display something like ...</i><br></br>
            <br></br>
            Page <b>2</b>/23. <b>237</b> records found.<br></br>
            </example>
        </member>
        <member name="P:ActiveUp.WebControls.PagedControl.InfoTemplateNoRecords">
            <summary>
            Gets or sets the info template used no records is available. If left empty InfoTemplate property will be used instead.
            </summary>
            <remarks>You can use the same tags as <seealso cref="P:ActiveUp.WebControls.PagedControl.InfoTemplate"/>.</remarks>
            <value>The info template.</value>
        </member>
        <member name="P:ActiveUp.WebControls.PagedControl.NavigationTemplate">
            <summary>
            Gets or sets the information template of the pager.
            </summary>
            <remarks>The default value of this property is <c>"$PREVIOUSPAGE$" + NavSeparator + "$FIRSTPAGE$ $PAGEGROUP$ $LASTPAGE$" + NavSeparator + "$NEXTPAGE$"</c>. The NavSeparator is obsolete but still used in the contructor to assure backward compatibility.</remarks>
            <example>
            This property allows your to specify exactly what you want to display in the navigation panel.<br></br>
            <br></br>
            The value of this property consist of a string containing both literal and tag content. To display the record count, you must include <c>$PREVIOUSPAGE$</c>.<br></br>
            <br></br>
            The available tags are :<br></br>
            <br></br>
            <c>$PAGESIZES$</c>  : display the page sizes selector.<br></br>
            <c>$PREVIOUSPAGE$</c>  : display the previous page link.<br></br>
            <c>$NEXTPAGE$</c>    : display the next page link.<br></br>
            <c>$FIRSTPAGE$</c> : display the first page link.<br></br>
            <c>$LASTPAGE$</c> : display the last page link.<br></br>
            <c>$PAGEGROUP$</c> : display the page group.<br></br>
            <c>$PAGESELECTOR$</c> : display the page selector (goto).<br></br>
            <br></br>
            <b>Example</b><br></br>
            <br></br>
            $PREVIOUSPAGE$ - $PAGEGROUG$ - $NEXTPAGE$
            <br></br>
            <i>... will display something like ...</i><br></br>
            <br></br>
            Prev. [1 2 3 4 5] Next<br></br>
            </example>
        </member>
        <member name="P:ActiveUp.WebControls.PagedControl.NavigationTemplateNoRecords">
            <summary>
            Gets or sets the navigation template used no records is available. If left empty NavigationTemplate property will be used instead.
            </summary>
            <remarks>You can use the same tags as <seealso cref="P:ActiveUp.WebControls.PagedControl.NavigationTemplate"/>.</remarks>
            <value>The navigation template.</value>
        </member>
        <member name="P:ActiveUp.WebControls.PagedControl.NavPanelVerticalAlign">
            <summary>
            Gets or sets the vertical alignment of the navigation panel content.
            </summary>
            <remarks>The pager is divided in two zone. The information zone that contain the information about the pager status and the navigation zone that contain all the navigation logic.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.PagedControl.NavPanelHorizontalAlign">
            <summary>
            Gets or sets the horizontal aligmnent of the navigation panel content.
            </summary>
            <remarks>The pager is divided in two zone. The information zone that contain the information about the pager status and the navigation zone that contain all the navigation logic.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.PagedControl.NavPanelDisabled">
            <summary>
            Gets or sets a value indicating whether [nav panel disabled].
            </summary>
            <value><c>true</c> if [nav panel disabled]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.PagedControl.InfoPanelVerticalAlign">
            <summary>
            Gets or sets the vertical aligmnent of the information panel content.
            </summary>
            <remarks>The pager is divided in two zone. The information zone that contain the information about the pager status and the navigation zone that contain all the navigation logic.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.PagedControl.InfoPanelHorizontalAlign">
            <summary>
            Gets or sets the horizontal aligmnent of the information panel content.
            </summary>
            <remarks>The pager is divided in two zone. The information zone that contain the information about the pager status and the navigation zone that contain all the navigation logic.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.PagedControl.HorizontalAlign">
            <summary>
            Gets or sets the horizontal aligmnent of the pager.
            </summary>
            <remarks>This property work exactly like the HorizontalAlign of a Table control.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.PagedControl.PagerStyle">
            <summary>
            Gets or sets the style of the pager.
            </summary>
            <remarks>If you want to apply a style for both information panel an navigation panel, using this property is the best thing to do.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.PagedControl.SelectorStyle">
            <summary>
            Gets or sets the style of the page selector.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.PagedControl.InfoPanelDisabled">
            <summary>
            Specify whether the information panel is displayed or not.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.PagedControl.PageSelectorEnabled">
            <summary>
            Specify whether the page selector navigation is displayed or not.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.PagedControl.PreviousText">
            <summary>
            Gets or sets the text to display for the previous page link.
            </summary>
            <remarks>The default value of this property is <c>&quot;&lt;b&gt;Prev.&lt;/b&gt;&quot;</c>.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.PagedControl.NextText">
            <summary>
            Gets or sets the text to display for the next page link.
            </summary>
            <remarks>The default value of this property is <c>&quot;&lt;b&gt;Next&lt;/b&gt;&quot;</c>.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.PagedControl.NavSeparator">
            <summary>
            Gets or sets the text to use as a separator between navigation elements.
            </summary>
            <remarks>The default value of this property is <c>&quot;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;</c>.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.PagedControl.PageGroupLeftSeparator">
            <summary>
            Gets or sets the text to use as a separator at the left of the page group.
            </summary>
            <remarks>The default value of this property is <c>[</c>.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.PagedControl.PageGroupRightSeparator">
            <summary>
            Gets or sets the text to use as a separator at the right of the page group.
            </summary>
            <remarks>The default value of this property is <c>]</c>.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.PagedControl.CausesValidation">
            <summary>
            Specify whether the link buttons cause the validation process to start when clicked.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.PagedControl.CreateChildControls">
            <summary>
            Create the child controls.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.PagedControl.DebugTrace(System.String)">
            <summary>
            Shows debug trace messages.
            </summary>
            <param name="line">The text to add in the trace.</param>
        </member>
        <member name="M:ActiveUp.WebControls.PagedControl.Render(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Render the control to the specified output.
            </summary>
            <param name="output">The HTML writer to write out to.</param>
        </member>
        <member name="M:ActiveUp.WebControls.PagedControl.RenderPagedControl(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the paged control.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="E:ActiveUp.WebControls.PagedControl.IndexChanged">
            <summary>
            Occurs when the index is changed.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.PagedControl.OnIndexChanged(System.EventArgs)">
            <summary>
            Call all IndexChanged event handlers if any.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="E:ActiveUp.WebControls.PagedControl.PageSizeChanged">
            <summary>
            Occurs when page size is changed.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.PagedControl.OnPageSizeChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:PageSizeChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:ActiveUp.WebControls.PagedControlConverter">
            <summary>
            This class is used at design time to select only valid data sources to page.
            </summary>
            <remarks>You should not use this class in your project.</remarks>
        </member>
        <member name="M:ActiveUp.WebControls.PagedControlConverter.GetControls(System.ComponentModel.IContainer)">
            <summary>
            Gets the valid controls.
            </summary>
            <param name="container">The container.</param>
            <returns>A collection of valid controls.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.PagedControlConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns a standard value collection.
            </summary>
            <param name="context">The context.</param>
            <returns>A standard value collection.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.PagedControlConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Get standard values.
            </summary>
            <param name="context">The context.</param>
            <returns>A boolean value.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.PagedControlConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Get standard values.
            </summary>
            <param name="context">The context.</param>
            <returns>A boolean value.</returns>
        </member>
        <member name="T:ActiveUp.WebControls.PagerBuilder">
             <summary>
             ActivePager is a .NET web control that encapsulate all the rendering and processing logic of a DataGrid, DataList or Repeater paging system.
             </summary>
             <example>
             <b>DataGrid Simple Integration</b><br></br>
             <br></br>
             Adding ActivePager to a DataGrid web controls is easy. The DataGrid web control includes it's own paging engine and ActivePager takes advantage of this.<br></br>
             <br></br>
             <u>First (and last) Step: Adding ActivePager</u><br></br>
             <br></br>
             All you need to do is add ActivePager in your web form (writing code or with the Visual Studio ToolBox) and select the datagrid you want to page. We assume you have previously added the code to bind the data to your DataGrid in the Page_Load or using the appropriate designer. Please note that the styles and column definitions are note displayed in this page to be more cleaner. You can stylize your DataGrid like you wish.<br></br>
             <br></br>
             <code>
             &lt;!--
             Here we add the DataGrid that will display the data.
            
             Please note that we don't need to set AllowPaging property to
             true or hide the standard pager using it's style visible property.
             ActivePager will adjust the needed values himself.
             --&gt;
             &lt;asp:datagrid id="dtgCustomers" Runat="server" Width="780"&gt;&lt;/asp:datagrid&gt;
             &lt;!--
             We add now ActivePager. Nothing special except that it's
             recommended to set the page size here, but you can also
             set it programmaticely.
             --&gt;
             &lt;AU:PagerBuilder id="dataPager" Runat="server" Width="780" PageSize="5"
                ControlToPage="dtgCustomers"&gt;&lt;/AU:PagerBuilder&gt;<br></br>
             </code>
             <br></br>
             <b>DataList or Repeater Integration</b><br></br>
             <br></br>
             Adding a paging system in a DataList or Repeater can be difficult if you start need to add each time all the methods, web controls and all the logic to make it work. There are a lot of tutorials that explain how to achieve this on the Internet. The problem is that most of them just explain the principle but not exploit all the possibilites. Also, these kind of tutorials don't take in consideration the re-usability. With ActivePager you have a single control you can use in all the page containing paged listings in all your projects.<br></br>
             <br></br>
             <u>First Step: Adding ActivePager</u><br></br>
             <br></br>
             We assume your DataList is allready on your web form. Add ActivePager in your web form (writing code or with the Visual Studio ToolBox).<br></br>
             <br></br>
             <code>
             &lt;!--
            	Here we add the DataList (or Repeater) that will display the data.
             --&gt;
             &lt;asp:datalist id="dtlCustomers" Runat="server" Width="780"&gt;
                &lt;ItemTemplate&gt;
                   &lt;b&gt;&lt;%# DataBinder.Eval(Container.DataItem, "CustomerID") %&gt;&lt;/b&gt;
                   - &lt;% DataBinder.Eval(Container.DataItem, "CompanyName") %&gt;
                &lt;/ItemTemplate&gt;
             &lt;/asp:datalist&gt;
             &lt;!--
             We add now ActivePager. Nothing special except that it's
             recommended to set the page size here, but you can also
             set it programmaticely.
             --&gt;
             &lt;AU:PagerBuilder id="dataPager" Runat="server" Width="780" PageSize="5"&gt;&lt;/AU:PagerBuilder&gt;
             </code>
             <br></br>
             <u>Second Step: Adding The Event Handler</u><br></br>
             <br></br>
             Unlike DataGrids, DataList, Repeater and other list controls don't implement indexes and paging features. We need to bind our DataList each time we change page.<br></br>
             <br></br>
             To achieve this we use the IndexChanged delegate of ActivePager. Add the following code to your page. Don't forget to adapt the data binding code to fits your requirements.<br></br>
             <br></br>
             <code>
             protected void Pager_IndexChanged(object sender, System.EventArgs e)
             {
                // Initialize our record count buffer variable.
                int recordCount = 0;
            
                // Get the datasource from your business object
                // or a previously defined DataSet.
                DataTable dataSource = BusinessObject.GetDataTable(dataPager.CurrentPage, dataPager.PageSize, ref recordCount);
            
                // Tell ActivePager how much records we have in our
                // datasource from the buffer that was updated by
                // you or your data source provider.
                dataPager.RecordCount = recordCount;
            
                // Traditional DataList data binding.
                dtlCustomers.DataSource = dataSource;
                dtlCustomers.DataBind();
             }
             </code>
             <br></br>
             Nothing special to say except you must tell ActivePager the number of total record your data source have. We need to do that since we only bind the data of the selected page.<br></br>
             <br></br>
             After that we need to assign our event handler to the IndexChanged event of ActivePager. In Design view click on ActivePager the open the Properties windows. Select the Events view then assign the handler we just added ...<br></br>
             <br></br>
             <u>Third Step: The Final Touch</u><br></br>
             <br></br>
             We need to populate our DataList (or Repeater) a first time when the web form is first executed. We add the following code :<br></br>
             <br></br>
             <code>
             private void Page_Load(object sender, System.EventArgs e)
             {
                // Bind our DataList only if it's the first time
                // the page is called.
                if (!Page.IsPostBack)
                   Pager_IndexChanged(null, null);
             }
             </code>
             </example>
        </member>
        <member name="M:ActiveUp.WebControls.PagerBuilder.#ctor">
            <summary>
            The default constructor. Initilize the default settings.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.PagerBuilder.RecordCount">
            <summary>
            Gets or sets the total number of records contained in the paged list.
            </summary>
            <remarks>This property is essential if you use a DataList, a Repeater or a DataGrid (with rebinding on index changes), this property needs to be set to let the control calculate all the states.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.PagerBuilder.PageSize">
            <summary>
            Gets or sets the number of items to display per page.
            </summary>
            <remarks>Only value greater than 0 are allowed. Setting this property to 0 or -1 will apply the default value 1.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.PagerBuilder.CurrentIndex">
            <summary>
            Gets or sets the current index.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.PagerBuilder.FirstLastDisabled">
            <summary>
            Specify whether the first and last page links are displayed or not.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.PagerBuilder.PreviousNextGroupDisabled">
            <summary>
            Specify whether the previous and next page group button links are displayed or not.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.PagerBuilder.PageGroupDisabled">
            <summary>
            Specify whether the page group navigation is displayed or not.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.PagerBuilder.FirstText">
            <summary>
            Gets or sets the text to display for the first page link. 
            </summary>
            <remarks>The default value of this property is <c>&quot;&lt;b&gt;&amp;lt;&amp;lt;&lt;/b&gt;&quot;</c>.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.PagerBuilder.LastText">
            <summary>
            Gets or sets the text to display for the last page link.
            </summary>
            <remarks>The default value of this property is <c>&quot;&lt;b&gt;&amp;gt;&amp;gt;&lt;/b&gt;&quot;</c>.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.PagerBuilder.CurrentPage">
            <summary>
            Gets or sets the current page index.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.PagerBuilder.CurrentGroup">
            <summary>
            Gets the current page group.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.PagerBuilder.PageCount">
            <summary>
            Gets the total number of pages in the paged list.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.PagerBuilder.ControlToPage">
            <summary>
            Gets or sets the control to page.
            </summary>
            <remarks>Actually, only controls listed in the design-time property windows are supported.</remarks>
        </member>
        <member name="M:ActiveUp.WebControls.PagerBuilder.OnInit(System.EventArgs)">
            <summary>
            Initialize the pager.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ActiveUp.WebControls.PagerBuilder.GetRecordCount(System.Object)">
            <summary>
            Gets the total number of records in the specified data source.
            </summary>
            <param name="dataSource">The datasource to count.</param>
            <returns>The total number or records.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.PagerBuilder.InitControlToPage">
            <summary>
            Initialize the control to page.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.PagerBuilder.OnPreRender(System.EventArgs)">
            <summary>
            Process all we need before rendering.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:ActiveUp.WebControls.PagerBuilder.OnPreviousPage_Click(System.Object,System.EventArgs)">
            <summary>
            Executed when the previous page link is clicked.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:ActiveUp.WebControls.PagerBuilder.OnNextPage_Click(System.Object,System.EventArgs)">
            <summary>
            Executed when the next page link is clicked.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:ActiveUp.WebControls.PagerBuilder.OnFirstPage_Click(System.Object,System.EventArgs)">
            <summary>
            Executed when the first page link is clicked.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:ActiveUp.WebControls.PagerBuilder.OnPreviousGroup_Click(System.Object,System.EventArgs)">
            <summary>
            Executed when the previous page group link is clicked.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:ActiveUp.WebControls.PagerBuilder.OnNextGroup_Click(System.Object,System.EventArgs)">
            <summary>
            Executed when the next page group link is clicked.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:ActiveUp.WebControls.PagerBuilder.OnLastPage_Click(System.Object,System.EventArgs)">
            <summary>
            Executed when the last page link is clicked.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:ActiveUp.WebControls.PagerBuilder.OnGotoPage_Click(System.Object,System.EventArgs)">
            <summary>
            Executed when a specific page is clicked.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:ActiveUp.WebControls.PagerBuilder.GetRecordIndex">
            <summary>
            Gets the records index.
            </summary>
            <returns>The current record index.</returns>
            <remarks>Please do not use this property.</remarks>
        </member>
        <member name="M:ActiveUp.WebControls.PagerBuilder.CopyState(ActiveUp.WebControls.PagerBuilder)">
            <summary>
            Copies the state.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:ActiveUp.WebControls.PagerBuilder.BuildInfo(System.Web.UI.WebControls.TableCell,System.Boolean)">
            <summary>
            Builds the information panel content.
            </summary>
            <param name="cell">The table cell.</param>
            <param name="designTime">Specify if we need the design time string.</param>
        </member>
        <member name="M:ActiveUp.WebControls.PagerBuilder.BuildNavigation(System.Web.UI.WebControls.TableCell)">
            <summary>
            Builds the navigation.
            </summary>
            <param name="cell">The cell.</param>
        </member>
        <member name="M:ActiveUp.WebControls.PagerBuilder.PrintStatus">
            <summary>
            Prints the property status in the trace log.
            </summary>
            <remarks>For debugging purposes only.</remarks>
        </member>
        <member name="T:ActiveUp.WebControls.PagedControlDesigner">
            <summary>
            This class is used to render the pager at design time.
            </summary>
            <remarks>You should not use this class in your project.</remarks>
        </member>
        <member name="M:ActiveUp.WebControls.PagedControlDesigner.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.PagedControlDesigner.GetDesignTimeHtml">
            <summary>
            Gets the design time HTML code.
            </summary>
            <returns>A string containing the HTML to render.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.PagedControlDesigner.GetEmptyDesignTimeHtml">
            <summary>
            Gets the design time HTML code when empty (never used in ActivePager).
            </summary>
            <returns>A string containing the HTML to render.</returns>
        </member>
        <member name="T:ActiveUp.WebControls.PagerElement">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.PagerElement"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.PagerElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.PagerElement"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.PagerElement.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.PagerElement"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="label">The label.</param>
        </member>
        <member name="M:ActiveUp.WebControls.PagerElement.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.PagerElement"/> class.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="P:ActiveUp.WebControls.PagerElement.Label">
            <summary>
            Gets or sets the element label (description).
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.PagerElement.Key">
            <summary>
            Gets or sets the element key.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.PagerElementCollection">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.PagerElementCollection"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.PagerElementCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.PagerElementCollection"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.PagerElementCollection.Add(ActiveUp.WebControls.PagerElement)">
            <summary>
            Adds the specified element.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:ActiveUp.WebControls.PagerElementCollection.Add(System.String,System.String)">
            <summary>
            Adds the specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="label">The label.</param>
        </member>
        <member name="M:ActiveUp.WebControls.PagerElementCollection.Add(System.String)">
            <summary>
            Adds the specified key.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:ActiveUp.WebControls.PagerElementCollection.Remove(System.Int32)">
            <summary>
            Removes at the specified index.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="P:ActiveUp.WebControls.PagerElementCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ActiveUp.WebControls.PagerElement"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:ActiveUp.WebControls.PagerElementCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:ActiveUp.WebControls.PagerElement"/> with the specified key.
            </summary>
            <value></value>
        </member>
        <member name="M:ActiveUp.WebControls.PagerElementCollection.GetIndexFromKey(System.String)">
            <summary>
            Gets the index from key.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.PagerElementCollection.Contains(System.String)">
            <summary>
            Determines whether contains the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns>
            	<c>true</c> if contains the specified key; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:ActiveUp.WebControls.PagerElementCollection.Labels">
            <summary>
            Gets the labels.
            </summary>
            <value>The labels.</value>
        </member>
        <member name="P:ActiveUp.WebControls.PagerElementCollection.Keys">
            <summary>
            Gets the keys.
            </summary>
            <value>The keys.</value>
        </member>
        <member name="T:ActiveUp.WebControls.Panel">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.Panel"/> object.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Panel.SCRIPTKEY">
            <summary>
            Unique client script key.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Panel.StateEventHandler">
            <summary>
            Event handler used for the <see cref="E:ActiveUp.WebControls.Panel.StateChanged"/> event.
            </summary>
        </member>
        <member name="E:ActiveUp.WebControls.Panel.StateChanged">
            <summary>
            Server event occurs when the state of the panel changes.
            </summary>
        </member>
        <member name="E:ActiveUp.WebControls.Panel.Clicked">
            <summary>
            Server event occurs when the click of the panel title occurs.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Panel.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Panel.BorderColor">
            <summary>
            Gets or sets the color of the border around the panel.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Panel.BorderStyle">
            <summary>
            Gets or sets the style of the border around the panel.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Panel.BorderWidth">
            <summary>
            Gets or sets the width of the border around the panel.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Panel.CellSpacing">
            <summary>
            Gets or sets the cell spacing of the panel.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Panel.CellPadding">
            <summary>
            Gets or sets the cell padding of the panel.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Panel.TitleBackColorCollapsed">
            <summary>
            Gets or sets the background color of the panel when it collapsed.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Panel.TitleBackColorExpanded">
            <summary>
            Gets or sets the background color of the panel when it expanded.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Panel.TitleMarginLeft">
            <summary>
            Gets or sets the margin left of the title.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Panel.ExpandedImage">
            <summary>
            Gets or sets the expanded image url.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Panel.CollapsedImage">
            <summary>
            Gets or sets the collapsed image url.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Panel.BackgroundImage">
            <summary>
            Gets or sets the background image url.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Panel.TitleHeight">
            <summary>
            Gets or sets the height of the title bar.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Panel.ScriptDirectory">
            <summary>
            Gets or sets the relative or absolute path to the directory where the API javascript file is.
            </summary>
            <remarks>If the value of this property is string.Empty, the external file script is not used and the API is rendered in the page together with the control render.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.Panel.ImagesDirectory">
            <summary>
            Gets or sets the relative or absolute path to the external Html TextBox API javascript file.
            </summary>
            <remarks>If the value of this property is string.Empty, the external file script is not used and the API is rendered in the page together with the Html TextBox render.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.Panel.ExternalScript">
            <summary>
            Gets or sets the filename of the external script file.
            </summary>
            
        </member>
        <member name="P:ActiveUp.WebControls.Panel.State">
            <summary>
            Gets or set the state of the pannel (Expanded or Collapsed).
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Panel.CanBeExpanded">
            <summary>
            Gets or sets if the panel can be expanded or not.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Panel.ScrollEffect">
            <summary>
            Gets or sets a value indicating whether the panel use effect when it expands or collapses.
            </summary>
            <value><c>true</c> if the panel use effect when it expands or collapses; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Panel.Speed">
            <summary>
            Gets or sets the speed of the scroll effect.
            </summary>
            <value>The speed of the scroll effect.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Panel.Frame">
            <summary>
            Gets or sets the frame.
            </summary>
            <value>The frame.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Panel.Fade">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ActiveUp.WebControls.Panel"/> use fade effect when it expands or collapses.
            </summary>
            <value><c>true</c> if fade; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Panel.TitleText">
            <summary>
            Gets or sets the title text of the panel.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Panel.ContentsText">
            <summary>
            Gets or sets the Html contents text.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Panel.OnTitleClickClientSide">
            <summary>
            Gets or sets the additional JScript client-side functions to call when the state of the panel changed.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Panel.Width">
            <summary>
            Gets or sets the width of the control.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Panel.RegisterAPIScriptBlock">
            <summary>
            Register the client-side script block in the ASPX page.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Panel.OnPreRender(System.EventArgs)">
            <summary>
            Notifies the <see cref="T:ActiveUp.WebControls.Panel"/> control to perform any necessary prerendering steps prior to saving view state and rendering content.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Panel.Render(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Render the <see cref="T:ActiveUp.WebControls.Panel"/> to the output parameter specified.
            </summary>
            <param name="output">Output stream that contains the HTML used to represent the <see cref="T:ActiveUp.WebControls.Panel"/>.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Panel.RenderPanel(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Render the <see cref="T:ActiveUp.WebControls.Panel"/> to the output parameter specified.
            </summary>
            <param name="output">Output stream that contains the HTML used to represent the <see cref="T:ActiveUp.WebControls.Panel"/>.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Panel.OnStateChanged(ActiveUp.WebControls.StateEventArgs)">
            <summary>
            Server event occurs when the state of the panel changes.
            </summary>
            <param name="e">The new state of the panel.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Panel.OnClicked(System.EventArgs)">
            <summary>
            Server event occurs when a click of the title occurs.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ActiveUp.WebControls.Panel.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Processes post-back data for a server control.
            </summary>
            <param name="postDataKey">Key identifier for the control.</param>
            <param name="postCollection">The collection of all incoming name values.</param>
            <returns>False if the server control's state does not change as a result of the post-back otherwise it returns true.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.Panel.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
            <summary>
            Signals the server control object to notify the ASP.NET application that the state of the control has changed.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Panel.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
            <summary>
            Enables the panel to process an event raised when a form is posted to the server.
            </summary>
            <param name="eventArgument">A String that represents an optional event argument to be passed to the event handler.</param>
        </member>
        <member name="T:ActiveUp.WebControls.PanelCollection">
            <summary>
            Collection of <see cref="T:ActiveUp.WebControls.Panel"/>
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.PanelCollection._panels">
            <summary>
            ArrayList of <see cref="T:ActiveUp.WebControls.Panel"/>.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.PanelCollection.#ctor(System.Web.UI.ControlCollection)">
            <summary>
            Create a collection of <see cref="T:ActiveUp.WebControls.Panel"/> by specifying the collections of controls.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.PanelCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets a <see cref="T:ActiveUp.WebControls.Panel"/> at the specified index.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.PanelCollection.Item(System.Int32)">
            <summary>
            Gets or sets a <see cref="T:ActiveUp.WebControls.Panel"/> at the specified index.
            </summary>		
        </member>
        <member name="P:ActiveUp.WebControls.PanelCollection.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.PanelCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.PanelCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.PanelCollection.IsFixedSize">
            <summary>
            Gets a boolean value indicating whether the current instance has a fixed size.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.PanelCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the current instance is read-only.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.PanelCollection.System#Collections#IList#Remove(System.Object)">
            <summary>	
            Removes the first occurrence of a specific <see cref="T:ActiveUp.WebControls.Panel"/> from the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.Panel"/> to remove from the collection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.PanelCollection.Remove(ActiveUp.WebControls.Panel)">
            <summary>
            Removes the first occurrence of a specific <see cref="T:ActiveUp.WebControls.Panel"/> from the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.Panel"/> to remove from the collection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.PanelCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts a <see cref="T:ActiveUp.WebControls.Panel"/> to the collection at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="item">The <see cref="T:ActiveUp.WebControls.Panel"/> to insert into the Collection.</param>		
        </member>
        <member name="M:ActiveUp.WebControls.PanelCollection.Insert(System.Int32,ActiveUp.WebControls.Panel)">
            <summary>
            Inserts a <see cref="T:ActiveUp.WebControls.Panel"/> to the collection at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="item">The <see cref="T:ActiveUp.WebControls.Panel"/> to insert into the Collection.</param>		
        </member>
        <member name="M:ActiveUp.WebControls.PanelCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds a <see cref="T:ActiveUp.WebControls.Panel"/> to the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.Panel"/> to add to the collection.</param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.PanelCollection.Add(ActiveUp.WebControls.Panel)">
            <summary>
            Adds a <see cref="T:ActiveUp.WebControls.Panel"/> to the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.Panel"/> to add to the collection.</param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.PanelCollection.System#Collections#IList#Clear">
            <summary>
            Removes all <see cref="T:ActiveUp.WebControls.Panel"/> from the collection.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.PanelCollection.Clear">
            <summary>
            Removes all <see cref="T:ActiveUp.WebControls.Panel"/> from the collection.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.PanelCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether a <see cref="T:ActiveUp.WebControls.Panel"/> is in the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.Panel"/> to locate in the collection. The element to locate can be a null reference.</param>
            <returns>true if value is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.PanelCollection.Contains(ActiveUp.WebControls.Panel)">
            <summary>
            Determines whether a <see cref="T:ActiveUp.WebControls.Panel"/> is in the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.Panel"/> to locate in the collection. The element to locate can be a null reference.</param>
            <returns>true if value is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.PanelCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of a specific <see cref="T:ActiveUp.WebControls.Panel"/> in the current instance.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.Panel"/> to locate in the current instance.</param>
            <returns>The index of value if found in the current instance; otherwise, -1.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.PanelCollection.IndexOf(ActiveUp.WebControls.Panel)">
            <summary>
            Determines the index of a specific <see cref="T:ActiveUp.WebControls.Panel"/> in the current instance.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.Panel"/> to locate in the current instance.</param>
            <returns>The index of value if found in the current instance; otherwise, -1.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.PanelCollection.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:ActiveUp.WebControls.Panel"/> at the specified index within the collection.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:ActiveUp.WebControls.Panel"/> to remove.</param>
        </member>
        <member name="M:ActiveUp.WebControls.PanelCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:ActiveUp.WebControls.Panel"/> at the specified index within the collection.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:ActiveUp.WebControls.Panel"/> to remove.</param>
        </member>
        <member name="M:ActiveUp.WebControls.PanelCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.PanelCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements from the current instance to the specified collection, starting at the specified index in the array.
            </summary>
            <param name="array">A one-dimensional, zero-based Array that is the destination of the elements copied from the current instance. </param>
            <param name="index">A Int32 that specifies the zero-based index in array at which copying begins.</param>
        </member>
        <member name="T:ActiveUp.WebControls.PanelDesigner">
            <summary>
            Designer of the <see cref="T:ActiveUp.WebControls.Panel"/> control.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.PanelDesigner.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.PanelDesigner.GetDesignTimeHtml">
            <summary>
            Gets the HTML that is used to represent the control at design time.
            </summary>
            <returns>The HTML that is used to represent the control at design time.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.PanelDesigner.GetErrorDesignTimeHtml(System.Exception)">
            <summary>
            Gets the HTML that provides information about the specified exception. This method is typically called after an error has been encountered at design time.
            </summary>
            <param name="e">The exception that occurred.</param>
            <returns>The HTML for the specified exception.</returns>
        </member>
        <member name="T:ActiveUp.WebControls.PanelGroup">
            <summary>
            Represents a group of <see cref="T:ActiveUp.WebControls.Panel"/> object.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.PanelGroup._panels">
            <summary>
            The collection of <see cref="T:ActiveUp.WebControls.Panel"/>.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.PanelGroup.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.PanelGroup.BorderColor">
            <summary>
            Gets or sets the border color around the panel group.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.PanelGroup.BorderWidth">
            <summary>
            Gets or sets the border width around the panel group.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.PanelGroup.BorderStyle">
            <summary>
            Gets or sets the border style around the panel group.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.PanelGroup.CellSpacing">
            <summary>
            Gets or sets the cell spacing of the panel group.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.PanelGroup.CellPadding">
            <summary>
            Gets or sets the cell padding of the panel group.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.PanelGroup.ScriptDirectory">
            <summary>
            Gets or sets the relative or absolute path to the directory where the API javascript file is.
            </summary>
            <remarks>If the value of this property is string.Empty, the external file script is not used and the API is rendered in the page together with the control render.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.PanelGroup.ImagesDirectory">
            <summary>
            Gets or sets the relative or absolute path to the external Html TextBox API javascript file.
            </summary>
            <remarks>If the value of this property is string.Empty, the external file script is not used and the API is rendered in the page together with the Html TextBox render.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.PanelGroup.ExternalScript">
            <summary>
            Gets or sets the filename of the external script file.
            </summary>
            
        </member>
        <member name="P:ActiveUp.WebControls.PanelGroup.Panels">
            <summary>
            Gets the Panels present in the group. 
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.PanelGroup.OnPreRender(System.EventArgs)">
            <summary>
            Notifies the <see cref="T:ActiveUp.WebControls.PanelGroup"/> control to perform any necessary prerendering steps prior to saving view state and rendering content.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.PanelGroup.Render(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Render the <see cref="T:ActiveUp.WebControls.Panel"/> to the output parameter specified.
            </summary>
            <param name="output">Output stream that contains the HTML used to represent the <see cref="T:ActiveUp.WebControls.Panel"/>.</param>
        </member>
        <member name="T:ActiveUp.WebControls.PanelGroupDesigner">
            <summary>
            Designer of the <see cref="T:ActiveUp.WebControls.PanelGroup"/> control.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.PanelGroupDesigner.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.PanelGroupDesigner.GetDesignTimeHtml">
            <summary>
            Gets the HTML that is used to represent the control at design time.
            </summary>
            <returns>The HTML that is used to represent the control at design time.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.PanelGroupDesigner.GetErrorDesignTimeHtml(System.Exception)">
            <summary>
            Gets the HTML that provides information about the specified exception. This method is typically called after an error has been encountered at design time.
            </summary>
            <param name="e">The exception that occurred.</param>
            <returns>The HTML for the specified exception.</returns>
        </member>
        <member name="T:ActiveUp.WebControls.PanelState">
            <summary>
            The state enumeration of the panel.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.PanelState.Expanded">
            <summary>
            Panel expanded.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.PanelState.Collapsed">
            <summary>
            Panel collapsed.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.StateEventArgs">
            <summary>
            Event argument when the state of the panel changes.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.StateEventArgs._state">
            <summary>
            Panel state.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.StateEventArgs.#ctor(ActiveUp.WebControls.PanelState)">
            <summary>
            Create a <see cref="T:ActiveUp.WebControls.StateEventArgs"/> by specifying the state.
            </summary>
            <param name="state">Panel state.</param>
        </member>
        <member name="P:ActiveUp.WebControls.StateEventArgs.State">
            <summary>
            Gets or sets the panel state.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.AnchorType">
            <summary>
            Anchor type enumeration.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.AnchorType.TopLeft">
            <summary>
            Top left anchor type.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.AnchorType.TopCenter">
            <summary>
            Top center anchor type.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.AnchorType.TopRight">
            <summary>
            Top right anchor type.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.AnchorType.MiddleLeft">
            <summary>
            Middle left anchor type.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.AnchorType.MiddleCenter">
            <summary>
            Middle center anchor type.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.AnchorType.MiddleRight">
            <summary>
            Middle right anchor type.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.AnchorType.BottomLeft">
            <summary>
            Bottom left anchor type.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.AnchorType.BottomCenter">
            <summary>
            Bottom center anchor type.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.AnchorType.BottomRight">
            <summary>
            Bottom right anchor type.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.FileCompression">
            <summary>
            File compression enumeration.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.FileCompression.CCITT3">
            <summary>
            CCITT3 file compression.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.FileCompression.CCITT4">
            <summary>
            CCITT4 file compression.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.FileCompression.LZW">
            <summary>
            LZW file compression.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.FileCompression.None">
            <summary>
            None file compression.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.FileCompression.Rle">
            <summary>
            Rle file compression.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.FileEventArgs">
            <summary>
            Provides data for the FileSave events of the <see cref="T:ActiveUp.WebControls.FileEventArgs"/> control.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.FileEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of FileEventArgs class.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.FileEventArgs.FileName">
            <summary>
            Gets or sets the file name.
            </summary>
            <value>The file name.</value>
        </member>
        <member name="T:ActiveUp.WebControls.FileFormat">
            <summary>
            File format enumeration.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.FileFormat.Bmp">
            <summary>
            Bmp file format.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.FileFormat.Emf">
            <summary>
            Emf file format.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.FileFormat.Exif">
            <summary>
            Exif file format.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.FileFormat.Gif">
            <summary>
            Gif file format.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.FileFormat.Jpeg">
            <summary>
            Jpeg file format.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.FileFormat.Png">
            <summary>
            Png file format.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.FileFormat.Tiff">
            <summary>
            Tiff file format.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.FileFormat.Wmf">
            <summary>
            Wmf file format.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.FlipType">
            <summary>
            Flip type enumeration.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.FlipType.Horizontal">
            <summary>
            Horizontal flip type.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.FlipType.Vertical">
            <summary>
            Vertical flip type.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.FlipType.Both">
            <summary>
            Horizontal and vertical flip type.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.HSL">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.HSL"/> object.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.HSL.Hue">
            <summary>
            Gets or sets the hue.
            </summary>
            <value>The hue.</value>
        </member>
        <member name="P:ActiveUp.WebControls.HSL.Saturation">
            <summary>
            Gets or sets the saturation.
            </summary>
            <value>The saturation.</value>
        </member>
        <member name="P:ActiveUp.WebControls.HSL.Luminance">
            <summary>
            Gets or sets the luminance.
            </summary>
            <value>The luminance.</value>
        </member>
        <member name="M:ActiveUp.WebControls.HSL.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.HSL"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.HSL.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.HSL"/> class.
            </summary>
            <param name="hue">The hue.</param>
            <param name="saturation">The saturation.</param>
            <param name="luminance">The luminance.</param>
        </member>
        <member name="P:ActiveUp.WebControls.HSL.RGB">
            <summary>
            Gets the RGB.
            </summary>
            <value>The RGB.</value>
        </member>
        <member name="M:ActiveUp.WebControls.HSL.FromRGB(System.Byte,System.Byte,System.Byte)">
            <summary>
            <see cref="T:ActiveUp.WebControls.HSL"/> from the RGB colors.
            </summary>
            <param name="red">The red color.</param>
            <param name="green">The green color.</param>
            <param name="blue">The blue color.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.HSL.FromRGB(System.Drawing.Color)">
            <summary>
            <see cref="T:ActiveUp.WebControls.HSL"/> from the RGB color.
            </summary>
            <param name="c">The color.</param>
            <returns></returns>
        </member>
        <member name="T:ActiveUp.WebControls.ImageEditor">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ImageEditor"/> object.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ImageEditor.UseSession">
            <summary>
            Gets or sets the value indicates if you want to use the session to generated the filename.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.ImageEditor.FileEventHandler">
            <summary>
            Event handler contains a file as argument.
            </summary>
        </member>
        <member name="E:ActiveUp.WebControls.ImageEditor.Save">
            <summary>
            Save server event.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ImageEditor.OnSave(System.Object,System.String)">
            <summary>
            Triggers the Save event.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ImageEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ImageEditor"/> class.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ImageEditor.ScriptDirectory">
            <summary>
            Gets or sets the relative or absolute path to the directory where the API javascript file is.
            </summary>
            <remarks>If the value of this property is string.Empty, the external file script is not used and the API is rendered in the page together with the Html TextBox render.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.ImageEditor.TempDirectory">
            <summary>
            Gets or sets the relative or absolute path to the directory where the temporary files will be created.
            </summary>
            <value>The temp directory.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ImageEditor.ImagesDirectory">
            <summary>
            Gets or sets the relative or absolute path to the directory where the images files will be created or uploaded.
            </summary>
            <value>The images directory.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ImageEditor.ExternalScript">
            <summary>
            Gets or sets the external script directory.
            </summary>
            <value>The external script.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ImageEditor.EditorMode">
            <summary>
            Gets or sets the editor mode.
            </summary>
            <value>The editor mode.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ImageEditor.EditorModeAfterUpload">
            <summary>
            Gets or sets the editor mode after upload.
            </summary>
            <value>The editor mode after upload.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ImageEditor.TdCssClass">
            <summary>
            Gets or sets the td CSS class.
            </summary>
            <value>The td CSS class.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ImageEditor.DirectWrite">
            <summary>
            Gets or sets a value indicating whether you writer directly into the picture.
            </summary>
            <value><c>true</c> if write directly into the picture; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ImageEditor.AllowUpload">
            <summary>
            Gets or sets a value indicating whether you allow the upload.
            </summary>
            <value><c>true</c> if you allow the upload; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ImageEditor.AllowEdition">
            <summary>
            Gets or sets a value indicating whether edition is allowed.
            </summary>
            <value><c>true</c> if edition is allowed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ImageEditor.AllowDelete">
            <summary>
            Gets or sets a value indicating whether delete is allowed.
            </summary>
            <value><c>true</c> if delete is allowed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ImageEditor.ImageViewHelpDisabled">
            <summary>
            Gets or sets a value indicating whether image view help is disabled.
            </summary>
            <value>
            	<c>true</c> if image view help is disabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ActiveUp.WebControls.ImageEditor.ImageViewHelpText">
            <summary>
            Gets or sets the image view help text.
            </summary>
            <value>The image view help text.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ImageEditor.ImageWidth">
            <summary>
            Gets or sets the width of the image.
            </summary>
            <value>The width of the image.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ImageEditor.ImageHeight">
            <summary>
            Gets or sets the height of the image.
            </summary>
            <value>The height of the image.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ImageEditor.ImageSize">
            <summary>
            Gets the image size.
            </summary>
            <value>The image size.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ImageEditor.Selection">
            <summary>
            Gets or sets the selection.
            </summary>
            <value>The selection.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ImageEditor.SaveSettings">
            <summary>
            Gets or sets the save settings.
            </summary>
            <value>The save settings.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ImageEditor.UploadSettings">
            <summary>
            Gets or sets the upload settings.
            </summary>
            <value>The upload settings.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ImageEditor.ImageURL">
            <summary>
            Gets or sets the image URL.
            </summary>
            <value>The image URL.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ImageEditor.SaveURL">
            <summary>
            Gets or sets the save URL.
            </summary>
            <value>The save URL.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ImageEditor.TempURL">
            <summary>
            Gets or sets the temp URL.
            </summary>
            <value>The temp URL.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ImageEditor.WorkFile">
            <summary>
            Gets the working file.
            </summary>
            <value>The working file.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ImageEditor.ToolsCreated">
            <summary>
            Gets the value indicating whether the control had created it's toolbar and tools collections based on the Template property layout.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ImageEditor.Toolbar">
            <summary>
            Gets or sets the toolbar.
            </summary>
            <value>The toolbar.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ImageEditor.AutoCreateTools">
            <summary>
            When set to false, the editor rendering engine will ignore the content of the <see cref="P:ActiveUp.WebControls.ImageEditor.Template"/> property.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ImageEditor.IconsDirectory">
            <summary>
            Gets or sets the relative or absolute path to the external Html TextBox API javascript file.
            </summary>
            <remarks>If the value of this property is string.Empty, the external file script is not used and the API is rendered in the page together with the Html TextBox render.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.ImageEditor.Template">
            <summary>
            Gets or sets the template or layout to use for the toolbar.
            </summary>
            <value>The template or layout to use for the toolbar.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ImageEditor.PictureFilters">
            <summary>
            Gets or sets the picture filters.
            </summary>
            <value>The picture filters.</value>
        </member>
        <member name="M:ActiveUp.WebControls.ImageEditor.GetTempFileName">
            <summary>
            Gets the temporary file name.
            </summary>
            <returns>The temporary file name.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ImageEditor.GetTempFileName(System.String)">
            <summary>
            Gets the temporary file name.
            </summary>
            <param name="prefix">The prefix.</param>
            <returns>The temporary file name.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ImageEditor.CreateTools">
            <summary>
            Creates the tools contained in the <see cref="P:ActiveUp.WebControls.ImageEditor.Template"/> property.
            </summary>
            <remarks>This method can be called if you change the layout of <see cref="P:ActiveUp.WebControls.ImageEditor.Template"/> property after the OnPreRender event of the <see cref="T:ActiveUp.WebControls.Editor"/> object was called.</remarks>
        </member>
        <member name="M:ActiveUp.WebControls.ImageEditor.CreateTools(System.String,System.Boolean)">
            <summary>
            Creates the tools contained in the <see cref="P:ActiveUp.WebControls.ImageEditor.Template"/> property.
            </summary>
            <remarks>This method can be called if you change the layout of <see cref="P:ActiveUp.WebControls.ImageEditor.Template"/> property after the OnPreRender event of the <see cref="T:ActiveUp.WebControls.Editor"/> object was called.</remarks>
        </member>
        <member name="M:ActiveUp.WebControls.ImageEditor.RegisterAPIScriptBlock">
            <summary>
            Register the Client-Side script block in the ASPX page.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ImageEditor.ImageObject">
            <summary>
            Gets the image object.
            </summary>
            <value>The image object.</value>
        </member>
        <member name="M:ActiveUp.WebControls.ImageEditor.OnLoad(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Load"/>
            event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ImageEditor.OnInit(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Init"/>
            event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ImageEditor.OnPreRender(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary>
            <param name="e">Event Args</param>
        </member>
        <member name="M:ActiveUp.WebControls.ImageEditor.Render(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Render this control to the output parameter specified.
            </summary>
            <param name="output">The HTML writer to write out to </param>
        </member>
        <member name="M:ActiveUp.WebControls.ImageEditor.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            A LoadPostData method.
            </summary>
            <param name="postDataKey">PostDataKey.</param>
            <param name="postCollection">postCollection.</param>
            <returns>bool</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ImageEditor.RaisePostDataChangedEvent">
            <summary>
            A RaisePostDataChangedEvent.
            </summary>
        </member>
        <member name="E:ActiveUp.WebControls.ImageEditor.SelectionChanged">
            <summary>
            The SelectionChanged event handler.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ImageEditor.OnSelectionChanged(System.EventArgs)">
            <summary>
            A OnSelectionChanged event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:ActiveUp.WebControls.ImageEditor.PreProcessing">
            <summary>
            The PreProcessing event handler.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ImageEditor.OnPreProcessing(System.EventArgs)">
            <summary>
            A OnPreProcessing event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:ActiveUp.WebControls.ImageEditor.PostProcessing">
            <summary>
            The PostProcessing event handler.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ImageEditor.OnPostProcessing(System.EventArgs)">
            <summary>
            A OnPostProcessing event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:ActiveUp.WebControls.ImageEditor.Upload">
            <summary>
            The OnUpload event handler.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ImageEditor.OnUpload(System.EventArgs)">
            <summary>
            A OnUpload event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ActiveUp.WebControls.ImageEditor.RaisePostBackEvent(System.String)">
            <summary>
            When implemented by a class, enables a server control to process an event raised when a form is posted to the server.
            </summary>
            <param name="eventArgument">A <see cref="T:System.String"/> that represents an optional event argument to be passed to the event handler.</param>
        </member>
        <member name="T:ActiveUp.WebControls.ImageEditorMode">
            <summary>
            Image editor mode enumeration.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ImageEditorMode.Edit">
            <summary>
            Edit image editor mode.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ImageEditorMode.View">
            <summary>
            View image editor mode.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ImageEditorMode.Upload">
            <summary>
            Upload image editor mode.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ImageEditorMode.NoImage">
            <summary>
            None image.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.ImageHandler">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ImageHandler"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ImageHandler.OnInit(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Init"/>
            event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ImageHandler.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.ImageHelper">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ImageHelper"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ImageHelper.Sizer(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sizers the specified current width.
            </summary>
            <param name="currentWidth">Current width.</param>
            <param name="currentHeight">Current height.</param>
            <param name="maxWidth">Maximum width.</param>
            <param name="maxHeight">Maximum heigth.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.ImageHelper.GetImageFormat(System.String)">
            <summary>
            Gets the image format.
            </summary>
            <param name="_outputFormat">The output format.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.ImageHelper.GetImageExt(System.String)">
            <summary>
            Gets the image extetion.
            </summary>
            <param name="outputFormat">The output format.</param>
            <returns></returns>
        </member>
        <member name="T:ActiveUp.WebControls.ImageJob">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ImageJob"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ImageJob.#ctor(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ImageJob"/> class.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="background">The background.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ImageJob.#ctor(System.Drawing.Image)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ImageJob"/> class.
            </summary>
            <param name="image">The image.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ImageJob.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ImageJob"/> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ImageJob.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ImageJob"/> class.
            </summary>
            <param name="filename">The filename.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ImageJob.Dispose">
            <summary>
            Disposes this instance.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ImageJob.Image">
            <summary>
            Gets or sets the image.
            </summary>
            <value>The image.</value>
        </member>
        <member name="M:ActiveUp.WebControls.ImageJob.Load(System.String)">
            <summary>
            Loads the specified filename.
            </summary>
            <param name="filename">The filename.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ImageJob.Load(System.IO.Stream)">
            <summary>
            Loads the specified stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ImageJob.ResizeImage(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Resizes the image.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="constrainProportions">if set to <c>true</c> constrain proportions.</param>
            <param name="resizeSmaller">if set to <c>true</c> resize smaller.</param>
            <param name="bilinear">if set to <c>true</c> using bilinear.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ImageJob.ResizeImage(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Resizes the image.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="constrainProportions">if set to <c>true</c> constrains proportions.</param>
            <param name="resizeSmaller">if set to <c>true</c> resize smaller.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ImageJob.ResizeCanvas(System.Int32,System.Int32,ActiveUp.WebControls.AnchorType,System.Drawing.Color)">
            <summary>
            Resizes the canvas.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="anchor">The anchor.</param>
            <param name="background">The background.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ImageJob.Crop(System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Crops the specified point.
            </summary>
            <param name="from">From point.</param>
            <param name="to">To point.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ImageJob.Crop(ActiveUp.WebControls.Selection)">
            <summary>
            Crops the image with the specified selection.
            </summary>
            <param name="selection">The selection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ImageJob.Crop(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Crops the image with specified selection.
            </summary>
            <param name="xFrom">The x from position.</param>
            <param name="yFrom">The y from position.</param>
            <param name="xTo">The x to position.</param>
            <param name="yTo">The y to position.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ImageJob.Flip(ActiveUp.WebControls.FlipType)">
            <summary>
            Flips the image with the specified flip type.
            </summary>
            <param name="flipType">Type of the flip.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ImageJob.Zoom(System.Int32,System.Int32,System.Single)">
            <summary>
            Zooms the image with the specified x position.
            </summary>
            <param name="xPos">The x position.</param>
            <param name="yPos">The y position.</param>
            <param name="factor">The factor.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ImageJob.Rotate(System.Single)">
            <summary>
            Rotates the image with the specified angle.
            </summary>
            <param name="angle">The angle.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ImageJob.RotateLeft">
            <summary>
            Rotates the image at left.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ImageJob.RotateRight">
            <summary>
            Rotates the image at right.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ImageJob.AddText(System.String,System.String,System.Int32,System.Drawing.FontStyle,System.Drawing.Color,System.Boolean,System.Int32,System.Int32,System.Drawing.StringAlignment)">
            <summary>
            Adds image text.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="size">The size.</param>
            <param name="style">The style.</param>
            <param name="foreColor">Fore color.</param>
            <param name="antialias">if set to <c>true</c> using of antialias.</param>
            <param name="xpos">The x position.</param>
            <param name="ypos">The y position.</param>
            <param name="aligment">The aligment.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ImageJob.Save">
            <summary>
            Saves the image.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ImageJob.Save(System.String)">
            <summary>
            Saves the image with the specified filename.
            </summary>
            <param name="filename">The filename.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ImageJob.Save(System.IO.Stream,ActiveUp.WebControls.FileFormat)">
            <summary>
            Saves the image with the specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <param name="imageFormat">The image format.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ImageJob.Save(System.IO.Stream,ActiveUp.WebControls.FileCompression,System.Int32,ActiveUp.WebControls.FileFormat)">
            <summary>
            Saves the image with the specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <param name="imageCompression">The image compression.</param>
            <param name="quality">The quality.</param>
            <param name="imageFormat">The image format.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ImageJob.Save(System.String,ActiveUp.WebControls.FileFormat)">
            <summary>
            Saves the image with the specified filename.
            </summary>
            <param name="filename">The filename.</param>
            <param name="imageFormat">The image format.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ImageJob.Save(System.String,ActiveUp.WebControls.FileCompression,System.Int32,ActiveUp.WebControls.FileFormat)">
            <summary>
            Saves the image with the specified filename.
            </summary>
            <param name="filename">The filename.</param>
            <param name="imageCompression">The image compression.</param>
            <param name="quality">The quality.</param>
            <param name="imageFormat">The image format.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ImageJob.Brightness(System.Int32)">
            <summary>
            Brightnesses the image with the specified brightness.
            </summary>
            <param name="brightness">The brightness.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ImageJob.Colorize(System.Int32,System.Int32,System.Int32)">
            <summary>
            Colorizes the image with the specified red.
            </summary>
            <param name="red">The red color.</param>
            <param name="green">The green color.</param>
            <param name="blue">The blue color.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ImageJob.Contrast(System.Int32)">
            <summary>
            Contrasts the specified contrast value.
            </summary>
            <param name="contrastValue">The contrast value.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ImageJob.Gamma(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gammas the image with the specified color.
            </summary>
            <param name="red">The red color.</param>
            <param name="green">The green color.</param>
            <param name="blue">The blue color.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ImageJob.GrayScale">
            <summary>
            Grayscale the image.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ImageJob.Invert">
            <summary>
            Inverts the image.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ImageJob.EdgeDetection(System.Byte)">
            <summary>
            Image edges detection.
            </summary>
            <param name="threshold">The threshold.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ImageJob.Jiffer(System.Int32)">
            <summary>
            Jiffers the image with the specified degree.
            </summary>
            <param name="degree">The degree.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ImageJob.Luminance(System.Int32)">
            <summary>
            Luminances the image with the specified factor.
            </summary>
            <param name="factor">The factor.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ImageJob.Pixelize(System.Int16,System.Boolean,System.Drawing.Color)">
            <summary>
            Pixelizes the image with the specified pixel size.
            </summary>
            <param name="pixelSize">Size of the pixel.</param>
            <param name="grid">if set to <c>true</c> [grid].</param>
            <param name="gridColor">Color of the grid.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ImageJob.Saturation(System.Int32)">
            <summary>
            Satures the images with the specified factor.
            </summary>
            <param name="factor">The factor.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ImageJob.Sphere">
            <summary>
            Spheres the image.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ImageJob.Water(System.Int32)">
            <summary>
            Waters the image with the specified wave.
            </summary>
            <param name="wave">The wave.</param>
        </member>
        <member name="T:ActiveUp.WebControls.ImageSettings">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ImageSettings"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ImageSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ImageSettings"/> class.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ImageSettings.Quality">
            <summary>
            Gets or sets the quality.
            </summary>
            <value>The quality.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ImageSettings.Format">
            <summary>
            Gets or sets the format.
            </summary>
            <value>The format.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ImageSettings.Compression">
            <summary>
            Gets or sets the compression.
            </summary>
            <value>The compression.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ImageSettings.ResizeSmaller">
            <summary>
            Gets or sets a value indicating whether resize smaller.
            </summary>
            <value><c>true</c> if resize smaller; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ImageSettings.ConstrainProportions">
            <summary>
            Gets or sets a value indicating whether constrain proportions.
            </summary>
            <value><c>true</c> if constrain proportions; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ImageSettings.MaxHeight">
            <summary>
            Gets or sets the maximum height.
            </summary>
            <value>The maximum height.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ImageSettings.MaxWidth">
            <summary>
            Gets or sets the maximum width.
            </summary>
            <value>The maximum width.</value>
        </member>
        <member name="T:ActiveUp.WebControls.Pixel">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.Pixel"/> object.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Pixel.Red">
            <summary>
            Red color.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Pixel.Green">
            <summary>
            Green color.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Pixel.Blue">
            <summary>
            Blue color
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Pixel.#ctor(System.Byte,System.Byte,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.Pixel"/> class.
            </summary>
            <param name="red">The red.</param>
            <param name="green">The green.</param>
            <param name="blue">The blue.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Pixel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.Pixel"/> class.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.QuickProcess">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.QuickProcess"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.QuickProcess"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.CreateThumbnail(System.String,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Creates the thumbnail.
            </summary>
            <param name="sourceImage">The source image.</param>
            <param name="destImage">The dest image.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="resizeSmaller">if set to <c>true</c> resizes smaller.</param>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.CreateThumbnail(System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Creates the thumbnail.
            </summary>
            <param name="sourceImage">The source image.</param>
            <param name="prefix">The prefix.</param>
            <param name="suffix">The suffix.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="resizeSmaller">if set to <c>true</c> resize smaller.</param>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.ResizeImage(System.String,System.Int32,System.Int32)">
            <summary>
            Resizes the image.
            </summary>
            <param name="sourceImage">The source image.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.ResizeImage(System.String,System.String,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Resizes the image.
            </summary>
            <param name="sourceImage">The source image.</param>
            <param name="destinationImage">The destination image.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="constrainProportions">if set to <c>true</c> constrain proportions.</param>
            <param name="resizeSmaller">if set to <c>true</c> resize smaller.</param>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.ResizeImage(System.String,System.String,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Resizes the image.
            </summary>
            <param name="sourceImage">The source image.</param>
            <param name="destinationImage">The destination image.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="constrainProportions">if set to <c>true</c> constrains proportions.</param>
            <param name="resizeSmaller">if set to <c>true</c> resizes smaller.</param>
            <param name="bilinear">if set to <c>true</c> using bilinear.</param>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.ResizeImage(System.Drawing.Image,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Resizes the image.
            </summary>
            <param name="image">The image.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="constrainProportions">if set to <c>true</c> constrains proportions.</param>
            <param name="resizeSmaller">if set to <c>true</c> resizes smaller.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.ResizeImage(System.Drawing.Image,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Resizes the image.
            </summary>
            <param name="image">The image.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="constrainProportions">if set to <c>true</c> constrains proportions.</param>
            <param name="resizeSmaller">if set to <c>true</c> resize smaller.</param>
            <param name="bilinear">if set to <c>true</c> using bilinear.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Resize(System.Drawing.Bitmap,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Resizes the specified bitmap.
            </summary>
            <param name="b">The b.</param>
            <param name="nWidth">Image width.</param>
            <param name="nHeight">Image width.</param>
            <param name="bBilinear">if set to <c>true</c> using bilinear.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.ResizeCanvas(System.String,System.Int32,System.Int32,ActiveUp.WebControls.AnchorType,System.Drawing.Color)">
            <summary>
            Resizes the canvas.
            </summary>
            <param name="filename">The file name.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="anchor">The anchor.</param>
            <param name="background">The background.</param>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.ResizeCanvas(System.Drawing.Image,System.Int32,System.Int32,ActiveUp.WebControls.AnchorType,System.Drawing.Color)">
            <summary>
            Resizes the canvas.
            </summary>
            <param name="image">The image.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="anchor">The anchor.</param>
            <param name="background">The background.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.GetImageFormat(System.String)">
            <summary>
            Gets the image format.
            </summary>
            <param name="format">The format.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Zoom(System.String,System.Int32,System.Int32,System.Single)">
            <summary>
            Zooms the specified file name.
            </summary>
            <param name="filename">The file name.</param>
            <param name="xPos">The x position.</param>
            <param name="yPos">The y position.</param>
            <param name="factor">The factor.</param>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Zoom(System.Drawing.Image,System.Int32,System.Int32,System.Single)">
            <summary>
            Zooms the specified image.
            </summary>
            <param name="image">The image.</param>
            <param name="xPos">The x position.</param>
            <param name="yPos">The y position.</param>
            <param name="factor">The factor.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.AddText(System.String,System.String,System.String,System.Int32,System.Drawing.FontStyle,System.Drawing.Color,System.Boolean,System.Int32,System.Int32,System.Drawing.StringAlignment)">
            <summary>
            Adds image text.
            </summary>
            <param name="filename">The filename.</param>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="size">The size.</param>
            <param name="style">The style.</param>
            <param name="foreColor">Color of the fore.</param>
            <param name="antialias">if set to <c>true</c> using antialias.</param>
            <param name="xpos">The x position.</param>
            <param name="ypos">The y position.</param>
            <param name="aligment">The aligment.</param>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.AddText(System.Drawing.Image,System.String,System.String,System.Int32,System.Drawing.FontStyle,System.Drawing.Color,System.Boolean,System.Int32,System.Int32,System.Drawing.StringAlignment)">
            <summary>
            Adds image text.
            </summary>
            <param name="image">The image.</param>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="size">The size.</param>
            <param name="style">The style.</param>
            <param name="foreColor">Color of the fore.</param>
            <param name="antialias">if set to <c>true</c> using antialias.</param>
            <param name="xpos">The x position.</param>
            <param name="ypos">The y position.</param>
            <param name="aligment">The aligment.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Crop(System.Drawing.Image,ActiveUp.WebControls.Selection)">
            <summary>
            Crops the specified image.
            </summary>
            <param name="image">The image.</param>
            <param name="selection">The selection.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Crop(System.Drawing.Image,System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Crops the specified image.
            </summary>
            <param name="image">The image.</param>
            <param name="from">From position.</param>
            <param name="to">To position.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Crop(System.String,ActiveUp.WebControls.Selection)">
            <summary>
            Crops the images.
            </summary>
            <param name="filename">The file name.</param>
            <param name="selection">The selection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Crop(System.String,System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Crops the image.
            </summary>
            <param name="filename">The filename.</param>
            <param name="from">From position.</param>
            <param name="to">To position.</param>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Crop(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Crops the image.
            </summary>
            <param name="filename">The filename.</param>
            <param name="xFrom">The x from position.</param>
            <param name="yFrom">The y from position.</param>
            <param name="xTo">The x to position.</param>
            <param name="yTo">The y to position.</param>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Crop(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Crops the image.
            </summary>
            <param name="image">The image.</param>
            <param name="xFrom">The x from position.</param>
            <param name="yFrom">The y from position.</param>
            <param name="xTo">The x to position.</param>
            <param name="yTo">The y to position.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Flip(System.Drawing.Image,ActiveUp.WebControls.FlipType)">
            <summary>
            Flips the image.
            </summary>
            <param name="image">The image.</param>
            <param name="flipType">Flip type..</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Flip(System.String,ActiveUp.WebControls.FlipType)">
            <summary>
            Flips the image.
            </summary>
            <param name="filename">The file name.</param>
            <param name="flipType">The flip type..</param>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Rotate(System.String,System.Single)">
            <summary>
            Rotates the image.
            </summary>
            <param name="filename">The file name.</param>
            <param name="angle">The angle.</param>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Rotate(System.Drawing.Image,System.Single)">
            <summary>
            Rotates the image.
            </summary>
            <param name="image">The image.</param>
            <param name="angle">The angle.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.RotateLeft(System.String)">
            <summary>
            Rotates at left.
            </summary>
            <param name="filename">The filename.</param>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.RotateRight(System.String)">
            <summary>
            Rotates at right.
            </summary>
            <param name="filename">The filename.</param>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.RotateLeft(System.Drawing.Image)">
            <summary>
            Rotates at left.
            </summary>
            <param name="image">The image.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.RotateRight(System.Drawing.Image)">
            <summary>
            Rotates at right.
            </summary>
            <param name="image">The image.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Brightness(System.String,System.Int32)">
            <summary>
            Brightnesses the specified source image.
            </summary>
            <param name="sourceImage">The source image.</param>
            <param name="brightness">The brightness.</param>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Brightness(System.String,System.String,System.Int32)">
            <summary>
            Brightnesses the specified source image.
            </summary>
            <param name="sourceImage">The source image.</param>
            <param name="destImage">The destination image.</param>
            <param name="brightness">The brightness.</param>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Brightness(System.Drawing.Image,System.Int32)">
            <summary>
            Brightnesses the specified image.
            </summary>
            <param name="image">The image.</param>
            <param name="brightness">The brightness.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.SmartByte(System.Int32)">
            <summary>
            Smart byte functions transform integer to byte
            with our way.
            </summary>
            <param name="_byte">The _byte.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Colorize(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Colorizes the specified source image.
            </summary>
            <param name="sourceImage">The source image.</param>
            <param name="red">The red color.</param>
            <param name="green">The green color.</param>
            <param name="blue">The blue color.</param>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Colorize(System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Colorizes the specified source image.
            </summary>
            <param name="sourceImage">The source image.</param>
            <param name="destImage">The destination image.</param>
            <param name="red">The red color.</param>
            <param name="green">The green color.</param>
            <param name="blue">The blue color.</param>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Colorize(System.Drawing.Image,System.Int32,System.Int32,System.Int32)">
            <summary>
            Colorizes the specified image.
            </summary>
            <param name="image">The image.</param>
            <param name="red">The red color.</param>
            <param name="green">The green color.</param>
            <param name="blue">The blue color.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Contrast(System.String,System.Int32)">
            <summary>
            Contrasts the specified source image.
            </summary>
            <param name="sourceImage">The source image.</param>
            <param name="contrastValue">The contrast value.</param>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Contrast(System.String,System.String,System.Int32)">
            <summary>
            Contrasts the specified source image.
            </summary>
            <param name="sourceImage">The source image.</param>
            <param name="destImage">The destination image.</param>
            <param name="contrastValue">The contrast value.</param>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Contrast(System.Drawing.Image,System.Int32)">
            <summary>
            Change contrast of the image
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.ContrastColor(System.Byte,System.Double)">
            <summary>
            Contrasts the color with specified value.
            </summary>
            <param name="color">color value</param>
            <param name="contrast">contrast value </param>
            <returns>contrasted color</returns>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Gamma(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gammas the specified source image.
            </summary>
            <param name="sourceImage">The source image.</param>
            <param name="red">The red color.</param>
            <param name="green">The green color.</param>
            <param name="blue">The blue color.</param>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Gamma(System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gammas the specified source image.
            </summary>
            <param name="sourceImage">The source image.</param>
            <param name="destImage">The destination image.</param>
            <param name="red">The red color.</param>
            <param name="green">The green color.</param>
            <param name="blue">The blue color.</param>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Gamma(System.Drawing.Image,System.Int32,System.Int32,System.Int32)">
            <summary>
            Change gamma of the picture using gamma pallete
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.GrayScale(System.String)">
            <summary>
            Grayscale the image.
            </summary>
            <param name="sourceImage">The source image.</param>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.GrayScale(System.String,System.String)">
            <summary>
            Grayscale the image.
            </summary>
            <param name="sourceImage">The source image.</param>
            <param name="destImage">The destination image.</param>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.GrayScale(System.Drawing.Image)">
            <summary>
            Grayscale filter for image
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Invert(System.String)">
            <summary>
            Inverts the specified source image.
            </summary>
            <param name="sourceImage">The source image.</param>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Invert(System.String,System.String)">
            <summary>
            Inverts the specified source image.
            </summary>
            <param name="sourceImage">The source image.</param>
            <param name="destImage">The destination image.</param>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Invert(System.Drawing.Image)">
            <summary>
            Inverts colors on image.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.EdgeDetection(System.String,System.Byte)">
            <summary>
            Image edge detection.
            </summary>
            <param name="sourceImage">The source image.</param>
            <param name="threshold">The threshold.</param>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.EdgeDetection(System.String,System.String,System.Byte)">
            <summary>
            Image edge detection.
            </summary>
            <param name="sourceImage">The source image.</param>
            <param name="destImage">The destination image.</param>
            <param name="threshold">The threshold.</param>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.EdgeDetection(System.Drawing.Image,System.Byte)">
            <summary>
            Image edges detection.
            </summary>
            <param name="image">The image.</param>
            <param name="threshold">The threshold.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Jiffer(System.String,System.Int32)">
            <summary>
            Jiffers the specified source image.
            </summary>
            <param name="sourceImage">The source image.</param>
            <param name="degree">The degree.</param>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Jiffer(System.String,System.String,System.Int32)">
            <summary>
            Jiffers the specified source image.
            </summary>
            <param name="sourceImage">The source image.</param>
            <param name="destImage">The destination image.</param>
            <param name="degree">The degree.</param>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Jiffer(System.Drawing.Image,System.Int32)">
            <summary>
            Making random jiffer for image. 
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Luminance(System.String,System.Int32)">
            <summary>
            Luminances the specified source image.
            </summary>
            <param name="sourceImage">The source image.</param>
            <param name="factor">The factor.</param>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Luminance(System.String,System.String,System.Int32)">
            <summary>
            Luminances the specified source image.
            </summary>
            <param name="sourceImage">The source image.</param>
            <param name="destImage">The destination image.</param>
            <param name="factor">The factor.</param>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Luminance(System.Drawing.Image,System.Int32)">
            <summary>
            Water effect for specified wave size
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Pixelize(System.String,System.Int16,System.Boolean,System.Drawing.Color)">
            <summary>
            Pixelizes the specified source image.
            </summary>
            <param name="sourceImage">The source image.</param>
            <param name="pixelSize">Size of the pixel.</param>
            <param name="grid">if set to <c>true</c> using grid.</param>
            <param name="gridColor">The grid color.</param>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Pixelize(System.String,System.String,System.Int16,System.Boolean,System.Drawing.Color)">
            <summary>
            Pixelizes the specified source image.
            </summary>
            <param name="sourceImage">The source image.</param>
            <param name="destImage">The dest image.</param>
            <param name="pixelSize">Size of the pixel.</param>
            <param name="grid">if set to <c>true</c> using grid.</param>
            <param name="gridColor">The grid color.</param>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Pixelize(System.Drawing.Image,System.Int16,System.Boolean,System.Drawing.Color)">
            <summary>
            Pixelize effect for specified wave size
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Saturation(System.String,System.Int32)">
            <summary>
            Saturations the specified source image.
            </summary>
            <param name="sourceImage">The source image.</param>
            <param name="factor">The factor.</param>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Saturation(System.String,System.String,System.Int32)">
            <summary>
            Saturations the specified source image.
            </summary>
            <param name="sourceImage">The source image.</param>
            <param name="destImage">The destination image.</param>
            <param name="factor">The factor.</param>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Saturation(System.Drawing.Image,System.Int32)">
            <summary>
            Change saturation of the picture using gamma pallete
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Sphere(System.String)">
            <summary>
            Spheres the specified source image.
            </summary>
            <param name="sourceImage">The source image.</param>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Sphere(System.String,System.String)">
            <summary>
            Spheres the specified source image.
            </summary>
            <param name="sourceImage">The source image.</param>
            <param name="destImage">The destination image.</param>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Sphere(System.Drawing.Image)">
            <summary>
            Sphere effect apply to the image.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Water(System.String,System.Int32)">
            <summary>
            Waters the specified source image.
            </summary>
            <param name="sourceImage">The source image.</param>
            <param name="wave">The wave.</param>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Water(System.String,System.String,System.Int32)">
            <summary>
            Waters the specified source image.
            </summary>
            <param name="sourceImage">The source image.</param>
            <param name="destImage">The destination image.</param>
            <param name="wave">The wave.</param>
        </member>
        <member name="M:ActiveUp.WebControls.QuickProcess.Water(System.Drawing.Image,System.Int32)">
            <summary>
            Waters the specified image.
            </summary>
            <param name="image">The image.</param>
            <param name="wave">The wave.</param>
            <returns></returns>
        </member>
        <member name="T:ActiveUp.WebControls.Selection">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.Selection"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Selection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.Selection"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Selection.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.Selection"/> class.
            </summary>
            <param name="values">The values.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Selection.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.Selection"/> class.
            </summary>
            <param name="x1">The top left x.</param>
            <param name="x2">The bottom right x.</param>
            <param name="y1">The top left y.</param>
            <param name="y2">The bottom right y.</param>
        </member>
        <member name="P:ActiveUp.WebControls.Selection.X1">
            <summary>
            Gets or sets the top left x.
            </summary>
            <value>The top left x.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Selection.Y1">
            <summary>
            Gets or sets the top left y.
            </summary>
            <value>The top left y.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Selection.X2">
            <summary>
            Gets or sets the bottom right x.
            </summary>
            <value>The bottom right x.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Selection.Y2">
            <summary>
            Gets or sets the bottom right y.
            </summary>
            <value>The bottom right y.</value>
        </member>
        <member name="M:ActiveUp.WebControls.Selection.Valid">
            <summary>
            Valids the selection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.Selection.ToCommaSeparated">
            <summary>
            Transforms to comma separated.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ActiveUp.WebControls.ToolCanvasSize">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolCanvasSize"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCanvasSize.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolCanvasSize"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCanvasSize.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolCanvasSize"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCanvasSize.OnPreRender(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary> 
            <param name="e">Event Args</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCanvasSize.RaisePostBackEvent(System.String)">
            <summary>
            A RaisePostBackEvent.
            </summary>
            <param name="eventArgument">eventArgument</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolCrop">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolCrop"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCrop.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolCrop"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCrop.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolCrop"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCrop.OnPreRender(System.EventArgs)">
            <summary>
            Notifies the tool to perform any necessary prerendering steps prior to saving view state and rendering content.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolFlip">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolFlip"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolFlip.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolFlip"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolFlip.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolFlip"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolFlip.OnPreRender(System.EventArgs)">
            <summary>
            Notifies the tool to perform any necessary prerendering steps prior to saving view state and rendering content.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolImageSize">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolImageSize"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolImageSize.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolImageSize"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolImageSize.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolImageSize"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolImageSize.OnPreRender(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary> 
            <param name="e">Event Args</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolImageSize.RaisePostBackEvent(System.String)">
            <summary>
            A RaisePostBackEvent.
            </summary>
            <param name="eventArgument">eventArgument</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolMirror">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolMirror"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolMirror.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolMirror"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolMirror.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolMirror"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolMirror.OnPreRender(System.EventArgs)">
            <summary>
            Notifies the tool to perform any necessary prerendering steps prior to saving view state and rendering content.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolRotate">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolRotate"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolRotate.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolRotate"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolRotate.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolRotate"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolRotate.OnPreRender(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary> 
            <param name="e">Event Args</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolRotate.RaisePostBackEvent(System.String)">
            <summary>
            A RaisePostBackEvent.
            </summary>
            <param name="eventArgument">eventArgument</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolSave">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolSave"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolSave.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolSave"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolSave.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolSave"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolSave.GetFileName(System.String)">
            <summary>
            Gets the file name.
            </summary>
            <param name="fileName">The file name.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolSave.OnPreRender(System.EventArgs)">
            <summary>
            Notifies the tool to perform any necessary prerendering steps prior to saving view state and rendering content.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolText">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolText"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolText.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolText"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolText.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolText"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolText.OnPreRender(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary> 
            <param name="e">Event Args</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolText.RaisePostBackEvent(System.String)">
            <summary>
            A RaisePostBackEvent.
            </summary>
            <param name="eventArgument">eventArgument</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolZoom">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolZoom"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolZoom.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolZoom"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolZoom.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolZoom"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolZoom.OnPreRender(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary> 
            <param name="e">Event Args</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolZoom.RaisePostBackEvent(System.String)">
            <summary>
            A RaisePostBackEvent.
            </summary>
            <param name="eventArgument">eventArgument</param>
        </member>
        <member name="T:ActiveUp.WebControls.Direction">
            <summary>
            Direction of the transition.
            </summary>
            <remarks>Used by Blinds, CheckerBoard and SmoothScroll. UpLeft, UpRight, DownLeft and DownRight are exclusively used by SmoothScroll transition.</remarks>
        </member>
        <member name="F:ActiveUp.WebControls.Direction.NotSet">
            <summary>
            No set, default will be used.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Direction.Up">
            <summary>
            Transition will go up.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Direction.UpLeft">
            <summary>
            Transition will go up left.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Direction.UpRight">
            <summary>
            Transition will go up right.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Direction.Down">
            <summary>
            Transition will go down.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Direction.DownLeft">
            <summary>
            Transition will go down left.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Direction.DownRight">
            <summary>
            Transition will go down right.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Direction.Left">
            <summary>
            Transition will go left.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Direction.Right">
            <summary>
            Transition will go right.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.IrisStyle">
            <summary>
            Style of the Iris transition
            </summary>
            <remarks>Used exclusively by the Iris transition.</remarks>
        </member>
        <member name="F:ActiveUp.WebControls.IrisStyle.NotSet">
            <summary>
            No set, default will be used.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.IrisStyle.Diamond">
            <summary>
            Diamond shape.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.IrisStyle.Circle">
            <summary>
            Circle shape.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.IrisStyle.Cross">
            <summary>
            Cross shape.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.IrisStyle.Plus">
            <summary>
            Plus shape.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.IrisStyle.Square">
            <summary>
            Square shape.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.IrisStyle.Star">
            <summary>
            Star shape.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Motion">
            <summary>
            Motion of the transition.
            </summary>
            <remarks>Used by Barn, GradientWipe, Iris and Strips transitions.</remarks>
        </member>
        <member name="F:ActiveUp.WebControls.Motion.NotSet">
            <summary>
            Not set, will use the default.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Motion.In">
            <summary>
            In motion.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Motion.Out">
            <summary>
            Out motion.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Orientation">
            <summary>
            Orientation of a transition
            </summary>
            <remarks>Used by Barn and RandomBars transitions.</remarks>
        </member>
        <member name="F:ActiveUp.WebControls.Orientation.NotSet">
            <summary>
            Not set, will use the default.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Orientation.Horizontal">
            <summary>
            Horizontal orientation.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Orientation.Vertical">
            <summary>
            Vertical orientation.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Rotator">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.Rotator"/> object.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Rotator._useCounter">
            <summary>
            Used for the license counter.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Rotator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.Rotator"/> class.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Rotator.Params">
            <summary>
            Gets or sets the transition parameters
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Rotator.ContentFile">
            <summary>
            Gets or sets the contents file.
            </summary>
            <value>The contents file.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Rotator.FrameRate">
            <summary>
            Gets or sets the frame rate.
            </summary>
            <value>The frame rate.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Rotator.AutoStart">
            <summary>
            Gets or sets a value indicating whether the rotator start automatically.
            </summary>
            <value><c>true</c> if the rotator start automatically; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Rotator.PauseOnMouseOver">
            <summary>
            Gets or sets a value indicating whether pause on mouse over.
            </summary>
            <value><c>true</c> if pause on mouse over; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Rotator.RandomStart">
            <summary>
            Gets or sets a value indicating whether random on start.
            </summary>
            <value><c>true</c> if random on start; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Rotator.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Rotator.Transition">
            <summary>
            Gets or sets the transition.
            </summary>
            <value>The transition.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Rotator.TextColor">
            <summary>
            Gets or sets the text color.
            </summary>
            <value>The text color.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Rotator.FadeColor">
            <summary>
            Gets or sets the fade color.
            </summary>
            <value>The fade color.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Rotator.FadeChars">
            <summary>
            Gets or sets the fade chars.
            </summary>
            <value>The fade chars.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Rotator.Speed">
            <summary>
            Gets or sets the speed.
            </summary>
            <value>The speed.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Rotator.Pause">
            <summary>
            Gets or sets the pause.
            </summary>
            <value>The pause.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Rotator.Slides">
            <summary>
            Gets the collection of slides.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Rotator.LoadContentFile">
            <summary>
            Loads the contents file.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Rotator.LoadContentFile(System.String)">
            <summary>
            Loads the contents file.
            </summary>
            <param name="location">The file name location.</param>
        </member>
        <member name="P:ActiveUp.WebControls.Rotator.ExternalScript">
            <summary>
            Gets or sets the relative or absolute path to the external Html TextBox API javascript file.
            </summary>
            <remarks>If the value of this property is string.Empty, the external file script is not used and the API is rendered in the page together with the Html TextBox render.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.Rotator.ScriptDirectory">
            <summary>
            Gets or sets the relative or absolute path to the directory where Rotator API javascript file is.
            </summary>
            <remarks>If the value of this property is string.Empty, the external file script is not used and the API is rendered in the page together with the Rotator render.</remarks>
        </member>
        <member name="M:ActiveUp.WebControls.Rotator.DataBind">
            <summary>
            Binds a data source to the invoked server control and all its child
            controls.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Rotator.CreateChildControls">
            <summary>
            Notifies server controls that use composition-based implementation to create any child
            controls they contain in preparation for posting back or rendering.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Rotator.CreateControlHierarchy(System.Boolean)">
            <summary>
            Creates the control hierarchy.
            </summary>
            <param name="useDataSource">if set to <c>true</c> if you want to use the data source.</param>
        </member>
        <member name="P:ActiveUp.WebControls.Rotator.DataSource">
            <summary>
            Gets or sets the data source.
            </summary>
            <value>The data source.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Rotator.DataMember">
            <summary>
            Gets or sets the data member.
            </summary>
            <value>The data member.</value>
        </member>
        <member name="M:ActiveUp.WebControls.Rotator.GetDataSource">
            <summary>
            Gets the data source.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ActiveUp.WebControls.Rotator.SlideTemplate">
            <summary>
            Gets or sets the slide template.
            </summary>
            <value>The slide template.</value>
        </member>
        <member name="M:ActiveUp.WebControls.Rotator.OnSlideDataBound(ActiveUp.WebControls.RotatorSlideEventArgs)">
            <summary>
            Raises the slide data bound event.
            </summary>
            <param name="e">The <see cref="T:ActiveUp.WebControls.RotatorSlideEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:ActiveUp.WebControls.Rotator.SlideDataBound">
            <summary>
            The SlideDataBound event handler.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Rotator.CreateSlide">
            <summary>
            Creates the slide.
            </summary>
            <returns></returns>
        </member>
        <member name="F:ActiveUp.WebControls.Rotator.EventSlideDataBound">
            <summary>
            Object event for the slide data binding.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Rotator.RotatorSlideEventHandler">
            <summary>
            Event handler conatains the slide.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Rotator.RegisterAPIScriptBlock(System.Web.UI.Page)">
            <summary>
            Registers the API script block.
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Rotator.OnPreRender(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary>
            <param name="e">Event Args</param>
        </member>
        <member name="M:ActiveUp.WebControls.Rotator.Render(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Render this control to the output parameter specified.
            </summary>
            <param name="output"> The HTML writer to write out to </param>
        </member>
        <member name="M:ActiveUp.WebControls.Rotator.RenderRotator(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the rotator.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="T:ActiveUp.WebControls.RotatorSlideEventArgs">
            <summary>
            The rotator slide event arguments
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.RotatorSlideEventArgs.#ctor(ActiveUp.WebControls.Slide)">
            <summary>
            Create an event arguments object
            </summary>
            <param name="slide">The slide</param>
        </member>
        <member name="P:ActiveUp.WebControls.RotatorSlideEventArgs.Slide">
            <summary>
            Gets or sets the slide
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.RotatorSlideEventArgs._slide">
            <summary>
            The slide
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.RotatorType">
            <summary>
            The rotator type.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.RotatorType.Ticker">
            <summary>
            Ticker rotator type.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.RotatorType.Html">
            <summary>
            Html rotator type.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Slide">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.Slide"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Slide.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.Slide"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Slide.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.Slide"/> class.
            </summary>
            <param name="content">The content.</param>
        </member>
        <member name="P:ActiveUp.WebControls.Slide.DataItem">
            <summary>
            Gets or sets the data item.
            </summary>
            <value>The data item.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Slide.Content">
            <summary>
            Gets or sets the contents.
            </summary>
            <value>The contents.</value>
        </member>
        <member name="M:ActiveUp.WebControls.Slide.Render(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Render this control to the output parameter specified.
            </summary>
            <param name="output"> The HTML writer to write out to </param>
        </member>
        <member name="T:ActiveUp.WebControls.SlideStyle">
            <summary>
            Slide type enumeration.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.SlideStyle.NotSet">
            <summary>
            Not set.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.SlideStyle.Hide">
            <summary>
            Hide slide style.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.SlideStyle.Push">
            <summary>
            Push slide style.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.SlideStyle.Swap">
            <summary>
            Swap slide style.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.SmoothStyle">
            <summary>
            Smooth style enumeration.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.SmoothStyle.NotSet">
            <summary>
            Not set.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.SmoothStyle.SmoothEnd">
            <summary>
            Smooth at end.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.SmoothStyle.SmoothStart">
            <summary>
            Smooth at start.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.SmoothStyle.SmoothStartAndEnd">
            <summary>
            Smooth at start and end.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.SmoothStyle.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.StretchStyle">
            <summary>
            Strech style enumeration.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.StretchStyle.NotSet">
            <summary>
            Not set.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.StretchStyle.Hide">
            <summary>
            Hide stretch style.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.StretchStyle.Push">
            <summary>
            Push stretch style.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.StretchStyle.Spin">
            <summary>
            Spin stretch style.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.TransitionProperties">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.TransitionProperties"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.TransitionProperties.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.TransitionProperties"/> class.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TransitionProperties.SmoothStyle">
            <summary>
            Gets or sets the smooth style.
            </summary>
            <value>The smooth style.</value>
        </member>
        <member name="P:ActiveUp.WebControls.TransitionProperties.WipeStyle">
            <summary>
            Gets or sets the wipe style.
            </summary>
            <value>The wipe style.</value>
        </member>
        <member name="P:ActiveUp.WebControls.TransitionProperties.Direction">
            <summary>
            Gets or sets the direction.
            </summary>
            <value>The direction.</value>
        </member>
        <member name="P:ActiveUp.WebControls.TransitionProperties.Motion">
            <summary>
            Gets or sets the motion.
            </summary>
            <value>The motion.</value>
        </member>
        <member name="P:ActiveUp.WebControls.TransitionProperties.Orientation">
            <summary>
            Gets or sets the orientation.
            </summary>
            <value>The orientation.</value>
        </member>
        <member name="P:ActiveUp.WebControls.TransitionProperties.IrisStyle">
            <summary>
            Gets or sets the iris style.
            </summary>
            <value>The iris style.</value>
        </member>
        <member name="P:ActiveUp.WebControls.TransitionProperties.SlideStyle">
            <summary>
            Gets or sets the slide style.
            </summary>
            <value>The slide style.</value>
        </member>
        <member name="P:ActiveUp.WebControls.TransitionProperties.StretchStyle">
            <summary>
            Gets or sets the stretch style.
            </summary>
            <value>The stretch style.</value>
        </member>
        <member name="P:ActiveUp.WebControls.TransitionProperties.Spokes">
            <summary>
            Gets or sets the spokes.
            </summary>
            <value>The spokes.</value>
        </member>
        <member name="P:ActiveUp.WebControls.TransitionProperties.GridSizeY">
            <summary>
            Gets or sets the grid size Y.
            </summary>
            <value>The grid size Y.</value>
        </member>
        <member name="P:ActiveUp.WebControls.TransitionProperties.GridSizeX">
            <summary>
            Gets or sets the grid size X.
            </summary>
            <value>The grid size X.</value>
        </member>
        <member name="P:ActiveUp.WebControls.TransitionProperties.MaxSquare">
            <summary>
            Gets or sets the maximum square.
            </summary>
            <value>The maximum square.</value>
        </member>
        <member name="P:ActiveUp.WebControls.TransitionProperties.SquaresY">
            <summary>
            Gets or sets the squares Y.
            </summary>
            <value>The squares Y.</value>
        </member>
        <member name="P:ActiveUp.WebControls.TransitionProperties.SquaresX">
            <summary>
            Gets or sets the squares X.
            </summary>
            <value>The squares X.</value>
        </member>
        <member name="P:ActiveUp.WebControls.TransitionProperties.Bands">
            <summary>
            Gets or sets the bands.
            </summary>
            <value>The bands.</value>
        </member>
        <member name="P:ActiveUp.WebControls.TransitionProperties.Overlap">
            <summary>
            Gets or sets the overlap.
            </summary>
            <value>The overlap.</value>
        </member>
        <member name="P:ActiveUp.WebControls.TransitionProperties.GradientSize">
            <summary>
            Gets or sets the gradient size.
            </summary>
            <value>The gradient size.</value>
        </member>
        <member name="T:ActiveUp.WebControls.Transition">
            <summary>
            Transition enumeration.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Transition.None">
            <summary>
            None transition.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Transition.Barn">
            <summary>
            Barn transition.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Transition.Blinds">
            <summary>
            Blinds transition.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Transition.CheckerBoard">
            <summary>
            Checker board transition.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Transition.Fade">
            <summary>
            Fade transition.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Transition.GradientWipe">
            <summary>
            Gradient wipe transition.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Transition.Inset">
            <summary>
            Inset transition.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Transition.Iris">
            <summary>
            Iris transition.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Transition.Pixelate">
            <summary>
            Pixelate transition.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Transition.RadialWipe">
            <summary>
            Radial wipe transition.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Transition.RandomBars">
            <summary>
            Random bars transition.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Transition.RandomDissolve">
            <summary>
            Random dissolve transition.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Transition.Slide">
            <summary>
            Slide transition.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Transition.SmoothScroll">
            <summary>
            Smooth scroll transition.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Transition.Spiral">
            <summary>
            Spiral transition.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Transition.Stretch">
            <summary>
            Stretch transition.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Transition.Strips">
            <summary>
            Strips transition.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Transition.Wheel">
            <summary>
            Wheel transition.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Transition.Zigzag">
            <summary>
            Zig zag transition.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.WipeStyle">
            <summary>
            Wipe style enumeration.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.WipeStyle.NotSet">
            <summary>
            Not set.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.WipeStyle.Clock">
            <summary>
            Clock wipe style.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.WipeStyle.Wedge">
            <summary>
            Wedge wipe style.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.WipeStyle.Radial">
            <summary>
            Radio wipe style.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.ImageSet">
            <summary>
            Summary description for ImageSet.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.TabControl">
            <summary>
            Summary description for Class1.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TabControl.TabPages">
            <summary>
            Gets or sets the collection containing the items.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.TabControl.GetResource(System.String)">
            <summary>
            Get the specified resource from the assembly.
            </summary>
            <param name="resource">The name of the resource.</param>
            <returns>The string representation of the resource.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.TabControl.GetResource(System.String,System.Type)">
            <summary>
            Get the specified resource from the assembly.
            </summary>
            <param name="resource">The name of the resource.</param>
            <param name="type">The type of the assembly.</param>
            <returns>The string representation of the resource.</returns>
        </member>
        <member name="P:ActiveUp.WebControls.TabControl.ScriptDirectory">
            <summary>
            Gets or sets the relative or absolute path to the directory where input API javascript file is.
            </summary>
            <remarks>If the value of this property is string.Empty, the external file script is not used and the API is rendered in the page together with the input render.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.TabControl.ExternalScript">
            <summary>
            Gets or sets the relative or absolute path to the icons directory.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.TabControl.IsUpLevel">
            <summary>
            Determine if we need to register the client side script and render the control.
            </summary>
            <returns>0 if scripting not allowed, 1 if not an uplevel browser but scripting allowed, 2 if all is OK.</returns>
        </member>
        <member name="P:ActiveUp.WebControls.TabControl.RenderType">
            <summary>
            Gets or sets the value indicating if the client side script is disabled or not.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.TabControl.OnPreRender(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary>
            <param name="e">Event Args</param>
        </member>
        <member name="M:ActiveUp.WebControls.TabControl.Render(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Render this control to the output parameter specified.
            </summary>
            <param name="output"> The HTML writer to write out to </param>
        </member>
        <member name="M:ActiveUp.WebControls.TabControl.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Processes post-back data from the control.
            </summary>
            <param name="postDataKey">The key identifier for the control.</param>
            <param name="postCollection">The collection of all incoming name values.</param>
            <returns>True if the state changes as a result of the post-back, otherwise it returns false.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.TabControl.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
            <summary>
            Notify the ASP.NET application that the state of the control has changed.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.TabControl.OnTabIndexChanged(System.EventArgs)">
            <summary>
            Raise the <see cref="!:SelectedIndexChanged"/> of the <see cref="T:ActiveUp.WebControls.ToolDropDownList"/> control. This allows you to handle the event directly.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.TabControl.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
            <summary>
            Enables the control to process an event raised when a form is posted to the server.
            </summary>
            <param name="eventArgument">A String that represents an optional event argument to be passed to the event handler.</param>
        </member>
        <member name="T:ActiveUp.WebControls.TabOrientation">
            <summary>
            Summary description for TabOrientation.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.TabPage">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.TabPage"/>.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.TabPage.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.TabPage.#ctor(System.String,System.String)">
            <summary>
            Create a <see cref="T:ActiveUp.WebControls.TabPage"/> by specifying the text and the value.
            </summary>
            <param name="text">Text displayed.</param>
            <param name="value">Value associated to the text.</param>
        </member>
        <member name="P:ActiveUp.WebControls.TabPage.Selected">
            <summary>
            Gets or sets if the <see cref="T:ActiveUp.WebControls.TabPage"/> is selected or not.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TabPage.Locked">
            <summary>
            Gets or sets if the <see cref="T:ActiveUp.WebControls.TabPage"/> is locked or not.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TabPage.Text">
            <summary>
            Gets or sets the text.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TabPage.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TabPage.Style">
            <summary>
            Gets or sets the style.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.TabPage.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)">
            <summary>
            Notifies the <see cref="T:ActiveUp.WebControls.TabPage"/> that an element, either XML or HTML, was parsed, and adds the element to the server control's ControlCollection object.
            </summary>
            <param name="obj">An Object that represents the parsed element.</param>
        </member>
        <member name="T:ActiveUp.WebControls.TabPageCollection">
            <summary>
            Collection of <see cref="T:ActiveUp.WebControls.TabPageCollection"/>
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.TabPageCollection._items">
            <summary>
            ArrayList of <see cref="T:ActiveUp.WebControls.TabPage"/>.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.TabPageCollection.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TabPageCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets a <see cref="T:ActiveUp.WebControls.TabPage"/> at the specified index.
            </summary>		
        </member>
        <member name="P:ActiveUp.WebControls.TabPageCollection.Item(System.Int32)">
            <summary>
            Gets or sets a <see cref="T:ActiveUp.WebControls.TabPage"/> at the specified index.
            </summary>		
        </member>
        <member name="P:ActiveUp.WebControls.TabPageCollection.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TabPageCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TabPageCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TabPageCollection.IsFixedSize">
            <summary>
            Gets a boolean value indicating whether the current instance has a fixed size.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TabPageCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the current instance is read-only.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.TabPageCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific <see cref="T:ActiveUp.WebControls.TabPage"/> from the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.TabPage"/> to remove from the collection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.TabPageCollection.Remove(ActiveUp.WebControls.TabPage)">
            <summary>
            Removes the first occurrence of a specific <see cref="T:ActiveUp.WebControls.TabPage"/> from the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.TabPage"/> to remove from the collection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.TabPageCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts a <see cref="T:ActiveUp.WebControls.TabPage"/> to the collection at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="item">The <see cref="T:ActiveUp.WebControls.TabPage"/> to insert into the Collection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.TabPageCollection.Insert(System.Int32,ActiveUp.WebControls.TabPage)">
            <summary>
            Inserts a <see cref="T:ActiveUp.WebControls.TabPage"/> to the collection at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="item">The <see cref="T:ActiveUp.WebControls.TabPage"/> to insert into the Collection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.TabPageCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds a <see cref="T:ActiveUp.WebControls.TabPage"/> to the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.TabPage"/> to add to the collection.</param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.TabPageCollection.Add(ActiveUp.WebControls.TabPage)">
            <summary>
            Adds a <see cref="T:ActiveUp.WebControls.TabPage"/> to the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.TabPage"/> to add to the collection.</param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.TabPageCollection.System#Collections#IList#Clear">
            <summary>
            Removes all <see cref="T:ActiveUp.WebControls.TabPage"/> from the collection.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.TabPageCollection.Clear">
            <summary>
            Removes all <see cref="T:ActiveUp.WebControls.TabPage"/> from the collection.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.TabPageCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether a <see cref="T:ActiveUp.WebControls.TabPage"/> is in the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.TabPage"/> to locate in the collection. The element to locate can be a null reference.</param>
            <returns>true if value is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.TabPageCollection.Contains(ActiveUp.WebControls.TabPage)">
            <summary>
            Determines whether a <see cref="T:ActiveUp.WebControls.TabPage"/> is in the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.TabPage"/> to locate in the collection. The element to locate can be a null reference.</param>
            <returns>true if value is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.TabPageCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of a specific <see cref="T:ActiveUp.WebControls.TabPage"/> in the current instance.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.TabPage"/> to locate in the current instance.</param>
            <returns>The index of value if found in the current instance; otherwise, -1.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.TabPageCollection.IndexOf(ActiveUp.WebControls.TabPage)">
            <summary>
            Determines the index of a specific <see cref="T:ActiveUp.WebControls.TabPage"/> in the current instance.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.TabPage"/> to locate in the current instance.</param>
            <returns>The index of value if found in the current instance; otherwise, -1.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.TabPageCollection.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:ActiveUp.WebControls.TabPage"/> at the specified index within the collection.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:ActiveUp.WebControls.TabPage"/> to remove.</param>
        </member>
        <member name="M:ActiveUp.WebControls.TabPageCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:ActiveUp.WebControls.TabPage"/> at the specified index within the collection.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:ActiveUp.WebControls.TabPage"/> to remove.</param>
        </member>
        <member name="M:ActiveUp.WebControls.TabPageCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.TabPageCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements from the current instance to the specified collection, starting at the specified index in the array.
            </summary>
            <param name="array">A one-dimensional, zero-based Array that is the destination of the elements copied from the current instance. </param>
            <param name="index">A Int32 that specifies the zero-based index in array at which copying begins.</param>
        </member>
        <member name="T:ActiveUp.WebControls.WebTimer">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.WebTimer"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.WebTimer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.WebTimer"/> class.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.WebTimer.ExternalScript">
            <summary>
            Gets or sets the relative or absolute path to the external API javascript file.
            </summary>
            <remarks>If the value of this property is string.Empty, the external file script is not used and the API is rendered in the page together with the Html TextBox render.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.WebTimer.ScriptDirectory">
            <summary>
            Gets or sets the relative or absolute path to the directory where the API javascript file is.
            </summary>
            <remarks>If the value of this property is string.Empty, the external file script is not used and the API is rendered in the page together with the control render.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.WebTimer.Interval">
            <summary>
            The frequency of ellapsed events in milliseconds.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.WebTimer.TargetDateTime">
            <summary>
            The target date/time for countdown.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.WebTimer.ClientSideEvent">
            <summary>
            Gets or sets the code to execute client side. 
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.WebTimer.AutoPostBack">
            <summary>
            Gets or sets a value that indicates whether or not the control posts back to the server each time a user interacts with the control. 
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.WebTimer.Repeat">
            <summary>
            Gets or sets a value that indicates whether or not the control repeat the time client-side. 
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.WebTimer.Countdown">
            <summary>
            Gets or sets a value that indicates whether or not the control repeat the time client-side. 
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.WebTimer.SynchToServer">
            <summary>
            Gets or sets a value that indicates whether or not the client time is synch to the server time. 
            </summary>
        </member>
        <member name="E:ActiveUp.WebControls.WebTimer.Tick">
            <summary>
            The Tick event handler. Fire when at each interval.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.WebTimer.OnTick(System.EventArgs)">
            <summary>
            A OnTick event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ActiveUp.WebControls.WebTimer.RaisePostBackEvent(System.String)">
            <summary>
            A RaisePostBackEvent.
            </summary>
            <param name="eventArgument">eventArgument</param>
        </member>
        <member name="M:ActiveUp.WebControls.WebTimer.RaisePostDataChangedEvent">
            <summary>
            When implemented by a class, signals the server control object to notify the ASP.NET application that the state of the
            control has changed.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.WebTimer.OnPreRender(System.EventArgs)">
            <summary>
            Notifies the tool to perform any necessary prerendering steps prior to saving view state and rendering content.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.WebTimer.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends the Popup content to a provided HtmlTextWriter object, which writes the content to be rendered on the client.
            </summary>
            <param name="output">The HtmlTextWriter object that receives the server control content.</param>
        </member>
        <member name="M:ActiveUp.WebControls.WebTimer.RenderWebTimer(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the web timer.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="T:ActiveUp.WebControls.WebTimerControlDesigner">
            <summary>
            This class is used to render the pager at design time.
            </summary>
            <remarks>You should not use this class in your project.</remarks>
        </member>
        <member name="M:ActiveUp.WebControls.WebTimerControlDesigner.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.WebTimerControlDesigner.GetDesignTimeHtml">
            <summary>
            Gets the design time HTML code.
            </summary>
            <returns>A string containing the HTML to render.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.WebTimerControlDesigner.GetEmptyDesignTimeHtml">
            <summary>
            Gets the design time HTML code when empty (never used in ActivePager).
            </summary>
            <returns>A string containing the HTML to render.</returns>
        </member>
        <member name="T:ActiveUp.WebControls.Align">
            <summary>
            Align enumeration.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Align.Left">
            <summary>
            Left align.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Align.Center">
            <summary>
            Center align.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Align.Right">
            <summary>
            Right align.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.LayoutPopupContent">
            <summary>
            Contains the layout for the contents of the popup.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.LayoutPopupContent.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.LayoutPopupContent.BackColor">
            <summary>
            Gets or sets the background color.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.LayoutPopupContent.BorderColor">
            <summary>
            Gets or sets the border color.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.LayoutPopupContent.BorderStyle">
            <summary>
            Gets or sets the border style.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.LayoutPopupContent.BorderWidth">
            <summary>
            Gets or sets the border width.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.LayoutPopupContent.ScrollBarColor">
            <summary>
            Gets or sets the scroll bar color.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.LayoutPopupTitle">
            <summary>
            Contains the layout for the title of the popup.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.LayoutPopupTitle.#ctor">
            <summary>
            Default constrcutor.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.LayoutPopupTitle.BackColor">
            <summary>
            Gets or sets the background color.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.LayoutPopupTitle.BackGradientFirstColor">
            <summary>
            Gets of sets the first gradient color for the title.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.LayoutPopupTitle.BackGradientLastColor">
            <summary>
            Gets or sets the last color for the title.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.LayoutPopupTitle.BorderColor">
            <summary>
            Gets or sets the border color.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.LayoutPopupTitle.InactiveBackColor">
            <summary>
            Gets or sets the inactive background color.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.LayoutPopupTitle.BorderStyle">
            <summary>
            Gets or sets the border style.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.LayoutPopupTitle.BorderWidth">
            <summary>
            Gets or sets the border width.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.LayoutPopupTitle.ForeColor">
            <summary>
            Gets or sets the text fore color.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.LayoutPopupTitle.Font">
            <summary>
            Gets or sets the font title of the popup.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.LayoutPopupWindow">
            <summary>
            Contains the layout for the window of the popup.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.LayoutPopupWindow.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.LayoutPopupWindow.BackColor">
            <summary>
            Gets or sets the background color.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.LayoutPopupWindow.BorderColor">
            <summary>
            Gets or sets the border color.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.LayoutPopupWindow.BorderStyle">
            <summary>
            Gets or sets the border style.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.LayoutPopupWindow.BorderWidth">
            <summary>
            Gets or sets the border width.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.OverflowType">
            <summary>
            Overflow type enumeration.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.OverflowType.Auto">
            <summary>
            Auto overflow type.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.OverflowType.Hidden">
            <summary>
            Hidden overflow type.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.OverflowType.Scroll">
            <summary>
            Scroll overflow type.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Popup">
            <summary>
            Represents a Popup control.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Popup._layoutWindow">
            <summary>
            Layout of the window.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Popup._layoutTitle">
            <summary>
            Layout of the title.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Popup._layoutContent">
            <summary>
            Layout of the contents.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Popup.SCRIPTKEY">
            <summary>
            Unique client script key.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Popup.CLIENTSIDE_API">
            <summary>
            
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Popup.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Popup.ScriptDirectory">
            <summary>
            Gets or sets the relative or absolute path to the directory where the API javascript file is.
            </summary>
            <remarks>If the value of this property is string.Empty, the external file script is not used and the API is rendered in the page together with the control render.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.Popup.AccessKey">
            <summary>
            Gets or sets the access key (underlined letter) that allows you to quickly navigate.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Popup.BackColor">
            <summary>
            Gets or sets the background color.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Popup.BorderColor">
            <summary>
            Gets or sets the border color.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Popup.BorderWidth">
            <summary>
            Gets or sets the border width.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Popup.BorderStyle">
            <summary>
            Gets or sets the border style.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Popup.CssClass">
            <summary>
            Gets or sets the Cascading Style Sheet (CSS) class rendered by Popup on the client.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Popup.Font">
            <summary>
            Gets the font properties associated with the Popup.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Popup.ForeColor">
            <summary>
            Gets or sets the foreground color (typically the color of the text) of the Web server control.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Popup.Enabled">
            <summary>
            Gets or sets a value indicating whether the Web server control is enabled.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Popup.UseStartupPosition">
            <summary>
            Gets or sets the value indicates if you want to use the startup position or not.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Popup.TransparentOnMove">
            <summary>
            Gets or sets if the popup must be transparent when moving.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Popup.StartupPosition">
            <summary>
            Gets or sets the startup position.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Popup.Width">
            <summary>
            Gets or sets the width.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Popup.Height">
            <summary>
            Gets or sets the height.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Popup.Dragable">
            <summary>
            Gets or sets if the popup can be dragged.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Popup.Overflow">
            <summary>
            Gets or sets the overflow of the popup.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Popup.ShowedOnStart">
            <summary>
            Gets or sets if the popup must be showed when the application starts.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Popup.LayoutWindow">
            <summary>
            Gets or sets the layout of the window.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Popup.LayoutTitle">
            <summary>
            Gets or sets the title layout.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Popup.LayoutContent">
            <summary>
            Gets or sets the layout contents.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Popup.ExternalScript">
            <summary>
            Gets or sets the filename of the external script file.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Popup.ShowTitle">
            <summary>
            Indicates if the title must be displayed or not.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Popup.AllowResize">
            <summary>
            Indicates if the popup must be resized.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Popup.ShowShadow">
            <summary>
            Gets or sets a value indicating whether the shadow must be displayed.
            </summary>
            <value><c>true</c> if the shadow must be displayed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Popup.DragFromContent">
            <summary>
            Indicates if you want to allow drag and drop from the content.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Popup.ShowWindow">
            <summary>
            Indicates if the window must be displayed or not.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Popup.TitleText">
            <summary>
            Gets or sets the title text.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Popup.ContentText">
            <summary>
            Gets or sets the content text.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Popup.ImagesDirectory">
            <summary>
            Gets or sets the directory where all the images are.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Popup.CloseImage">
            <summary>
            Gets or sets the image for the close button of the popup.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Popup.ResizeImage">
            <summary>
            Gets or sets the image for the resize image of the popup.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Popup.ContentDivId">
            <summary>
            Gets or sets the id of a hidden div to use as content.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Popup.AutoContent">
            <summary>
            Indicates if the size of the popup depends of the contents.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Popup.EnableSsl">
            <summary>
            Set to true if you need to use the control in a secure web page.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Popup.EnableSelection">
            <summary>
            Gets or sets the value indicates if you want to select the contents of the popup.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Popup.OnPreRender(System.EventArgs)">
            <summary>
            Notifies the Popup control to perform any necessary prerendering steps prior to saving view state and rendering content.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Popup.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends the Popup content to a provided HtmlTextWriter object, which writes the content to be rendered on the client.
            </summary>
            <param name="output">The HtmlTextWriter object that receives the server control content.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Popup.RenderPopup(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the popup.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Popup.RegisterAPIScriptBlock">
            <summary>
            Register the Client-Side script block in the ASPX page.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.PopupDesigner">
            <summary>
            Designer of the <see cref="T:ActiveUp.WebControls.Popup"/> control.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.PopupDesigner.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.PopupDesigner.AllowResize">
            <summary>
            Gets a value indicating whether the control can be resized.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.PopupDesigner.GetDesignTimeHtml">
            <summary>
            Gets the HTML that is used to represent the control at design time.
            </summary>
            <returns>The HTML that is used to represent the control at design time.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.PopupDesigner.GetEmptyDesignTimeHtml">
            <summary>
            Gets the HTML that is used to represent an empty control at design time.
            </summary>
            <returns>The HTML that is used to represent an empty control at design time. By default, this HTML contains the name of the component.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.PopupDesigner.GetErrorDesignTimeHtml(System.Exception)">
            <summary>
            Gets the HTML that provides information about the specified exception. This method is typically called after an error has been encountered at design time.
            </summary>
            <param name="e">The exception that occurred.</param>
            <returns>The HTML for the specified exception.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.PopupDesigner.DesignPopup(System.Web.UI.HtmlTextWriter@,ActiveUp.WebControls.Popup)">
            <summary>
            Create a Popup object at design time.
            </summary>
            <param name="writer">Output stream that contains the HTML used to represent the control.</param>
            <param name="popup"><see cref="T:ActiveUp.WebControls.Popup"/> object to design.</param>
        </member>
        <member name="T:ActiveUp.WebControls.Position">
            <summary>
            Position enumeration.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Position.Absolute">
            <summary>
            Absolute position.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Position.Relative">
            <summary>
            Relative position.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Toolbar">
            <summary>
            Represents a Toolbar object.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Toolbar.CLIENTSIDE_API">
            <summary>
            Client side script block.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Toolbar.SCRIPTKEY">
            <summary>
            Unique client script key.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Toolbar._tools">
            <summary>
            Collection of <see cref="T:ActiveUp.WebControls.ToolBase"/>.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Toolbar._useCounter">
            <summary>
            Used for the license counter.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Toolbar.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Toolbar.BackColor">
            <summary>
            Gets or sets the background color of the <see cref="T:ActiveUp.WebControls.Toolbar"/>.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Toolbar.BorderColor">
            <summary>
            Gets or sets the border color of the Web control.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Toolbar.BorderWidth">
            <summary>
            Gets or sets the border width of the Web server control.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Toolbar.BorderStyle">
            <summary>
            Gets or sets the border style of the Web server control.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Toolbar.Tools">
            <summary>
            Gets the collection of <see cref="T:ActiveUp.WebControls.ToolBase"/> items.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Toolbar.ScriptDirectory">
            <summary>
            Gets or sets the relative or absolute path to the directory where the API javascript file is.
            </summary>
            <remarks>If the value of this property is string.Empty, the external file script is not used and the API is rendered in the page together with the control render.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.Toolbar.CellSpacing">
            <summary>
            Gets or sets the cell spacing of the table representing the toolbar.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Toolbar.CellPadding">
            <summary>
            Gets or sets the cell padding of the table representing the toolbar.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Toolbar.Name">
            <summary>
            Gets or sets the name of the toolbar.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Toolbar.ExternalScript">
            <summary>
            Gets or sets the filename of the external script file.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Toolbar.Direction">
            <summary>
            Gets or sets the direction of the toolbar.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Toolbar.Layout">
            <summary>
            Layout to use for the toolbar.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Toolbar.ImagesDirectory">
            <summary>
            Gets or sets the relative or absolute path to the external Html TextBox API javascript file.
            </summary>
            <remarks>If the value of this property is string.Empty, the external file script is not used and the API is rendered in the page together with the Html TextBox render.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.Toolbar.DragAndDropImage">
            <summary>
            Gets or sets image used for the drag and drop.
            </summary>
            <value>The image used for the drag and drop.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Toolbar.Dragable">
            <summary>
            Gets or sets if the popup can be dragged.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Toolbar.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>The position.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Toolbar.BackImage">
            <summary>
            Image used as background of the tool.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Toolbar.EnableSsl">
            <summary>
            Set to true if you need to use the control in a secure web page.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Toolbar.RenderDesign(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders at the design time.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Toolbar.RegisterAPIScriptBlock">
            <summary>
            Register the client-side script block in the ASPX page.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Toolbar.OnPreRender(System.EventArgs)">
            <summary>
            Notifies the Popup control to perform any necessary prerendering steps prior to saving view state and rendering content.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Toolbar.Render(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Render this control to the output parameter specified.
            </summary>
            <param name="output">Output stream that contains the HTML used to represent the control.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Toolbar.Clone">
            <summary>
            Gets a real copy of the actual object. This will not return a reference.
            </summary>
            <returns>The new object.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.Toolbar.FindTool(System.String)">
            <summary>
            Finds the tool by specifing his id.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.Toolbar.FindTool(System.Type)">
            <summary>
            Finds the tool by specifying his id.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.Toolbar.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Processes post-back data from the control.
            <param name="postDataKey">The key identifier for the control.</param>
            <param name="postCollection">The collection of all incoming name values.</param>
            <returns>True if the state changes as a result of the post-back, otherwise it returns false.</returns>
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Toolbar.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
            <summary>
            Notify the ASP.NET application that the state of the control has changed.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.ToolbarCollection">
            <summary>
            Collection of <see cref="T:ActiveUp.WebControls.Toolbar"/>
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ToolbarCollection._toolbars">
            <summary>
            ArrayList of <see cref="T:ActiveUp.WebControls.Toolbar"/>.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolbarCollection.#ctor(System.Web.UI.ControlCollection)">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolbarCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets a <see cref="T:ActiveUp.WebControls.Toolbar"/> at the specified index.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolbarCollection.Item(System.Int32)">
            <summary>
            Gets or sets a <see cref="T:ActiveUp.WebControls.Toolbar"/> at the specified index.
            </summary>		
        </member>
        <member name="P:ActiveUp.WebControls.ToolbarCollection.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolbarCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolbarCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolbarCollection.IsFixedSize">
            <summary>
            Gets a boolean value indicating whether the current instance has a fixed size.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolbarCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the current instance is read-only.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolbarCollection.System#Collections#IList#Remove(System.Object)">
            <summary>	
            Removes the first occurrence of a specific <see cref="T:ActiveUp.WebControls.Toolbar"/> from the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.Toolbar"/> to remove from the collection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolbarCollection.Remove(ActiveUp.WebControls.Toolbar)">
            <summary>
            Removes the first occurrence of a specific <see cref="T:ActiveUp.WebControls.Toolbar"/> from the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.Toolbar"/> to remove from the collection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolbarCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts a <see cref="T:ActiveUp.WebControls.Toolbar"/> to the collection at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="item">The <see cref="T:ActiveUp.WebControls.Toolbar"/> to insert into the Collection.</param>		
        </member>
        <member name="M:ActiveUp.WebControls.ToolbarCollection.Insert(System.Int32,ActiveUp.WebControls.Toolbar)">
            <summary>
            Inserts a <see cref="T:ActiveUp.WebControls.Toolbar"/> to the collection at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="item">The <see cref="T:ActiveUp.WebControls.Toolbar"/> to insert into the Collection.</param>		
        </member>
        <member name="M:ActiveUp.WebControls.ToolbarCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds a <see cref="T:ActiveUp.WebControls.Toolbar"/> to the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.Toolbar"/> to add to the collection.</param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolbarCollection.Add(ActiveUp.WebControls.Toolbar)">
            <summary>
            Adds a <see cref="T:ActiveUp.WebControls.Toolbar"/> to the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.Toolbar"/> to add to the collection.</param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolbarCollection.System#Collections#IList#Clear">
            <summary>
            Removes all <see cref="T:ActiveUp.WebControls.Toolbar"/> from the collection.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolbarCollection.Clear">
            <summary>
            Removes all <see cref="T:ActiveUp.WebControls.Toolbar"/> from the collection.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolbarCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether a <see cref="T:ActiveUp.WebControls.Toolbar"/> is in the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.Toolbar"/> to locate in the collection. The element to locate can be a null reference.</param>
            <returns>true if value is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolbarCollection.Contains(ActiveUp.WebControls.Toolbar)">
            <summary>
            Determines whether a <see cref="T:ActiveUp.WebControls.Toolbar"/> is in the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.Toolbar"/> to locate in the collection. The element to locate can be a null reference.</param>
            <returns>true if value is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolbarCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of a specific <see cref="T:ActiveUp.WebControls.Toolbar"/> in the current instance.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.Toolbar"/> to locate in the current instance.</param>
            <returns>The index of value if found in the current instance; otherwise, -1.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolbarCollection.IndexOf(ActiveUp.WebControls.Toolbar)">
            <summary>
            Determines the index of a specific <see cref="T:ActiveUp.WebControls.Toolbar"/> in the current instance.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.Toolbar"/> to locate in the current instance.</param>
            <returns>The index of value if found in the current instance; otherwise, -1.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolbarCollection.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:ActiveUp.WebControls.Toolbar"/> at the specified index within the collection.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:ActiveUp.WebControls.Toolbar"/> to remove.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolbarCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:ActiveUp.WebControls.Toolbar"/> at the specified index within the collection.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:ActiveUp.WebControls.Toolbar"/> to remove.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolbarCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolbarCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements from the current instance to the specified collection, starting at the specified index in the array.
            </summary>
            <param name="array">A one-dimensional, zero-based Array that is the destination of the elements copied from the current instance. </param>
            <param name="index">A Int32 that specifies the zero-based index in array at which copying begins.</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolbarDesigner">
            <summary>
            Designer of the <see cref="T:ActiveUp.WebControls.Toolbar"/> control.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolbarDesigner.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolbarDesigner.GetDesignTimeHtml">
            <summary>
            Gets the HTML that is used to represent the control at design time.
            </summary>
            <returns>The HTML that is used to represent the control at design time.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolbarDesigner.GetErrorDesignTimeHtml(System.Exception)">
            <summary>
            Gets the HTML that provides information about the specified exception. This method is typically called after an error has been encountered at design time.
            </summary>
            <param name="e">The exception that occurred.</param>
            <returns>The HTML for the specified exception.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolbarDesigner.DesignToolbar(System.Web.UI.HtmlTextWriter@,ActiveUp.WebControls.Toolbar)">
            <summary>
            Create a Toolbar object at design time.
            </summary>
            <param name="output">The output.</param>
            <param name="toolbar">The toolbar.</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolbarDirection">
            <summary>
            Direction of each items in the toolbar.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ToolbarDirection.Horizontal">
            <summary>
            Horizontal direction.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ToolbarDirection.Vertical">
            <summary>
            Vertical direction.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.ToolbarHelper">
            <summary>
            Debug trace for the toolbar.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolbarHelper.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolbarHelper.DebugTrace(System.String)">
            <summary>
            Adds a string in the trace.
            </summary>
            <param name="traceText">The string to add.</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolbarLayout">
            <summary>
            Layout for the toolbar.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ToolbarLayout.Flow">
            <summary>
            Flow layout.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ToolbarLayout.Table">
            <summary>
            Table layout.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.ToolbarsContainer">
            <summary>
            Represents a ToolbarsContainer.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolbarsContainer.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolbarsContainer.Toolbars">
            <summary>
            Gets the Toolbars present in the container. 
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolbarsContainer.ExternalScript">
            <summary>
            Gets or sets the filename of the external script file.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolbarsContainer.ScriptDirectory">
            <summary>
            Gets or sets the relative or absolute path to the directory where ActiveToolbar API javascript file is.
            </summary>
            <remarks>If the value of this property is string.Empty, the external file script is not used and the API is rendered in the page together with the Html TextBox render.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.ToolbarsContainer.BackImage">
            <summary>
            Image used as background of the tool.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolbarsContainer.BackColor">
            <summary>
            Gets or sets the backround color of the container.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolbarsContainer.BackColorDock">
            <summary>
            Gets or sets the background color of the container when a <see cref="T:ActiveUp.WebControls.Toolbar"/> can be docked.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolbarsContainer.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>The position.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ToolbarsContainer.ToolbarsPosition">
            <summary>
            Gets or sets the toolbars position.
            </summary>
            <value>The toolbars position.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ToolbarsContainer.ImagesDirectory">
            <summary>
            Gets or sets the relative or absolute path to the external Html TextBox API javascript file.
            </summary>
            <remarks>If the value of this property is string.Empty, the external file script is not used and the API is rendered in the page together with the Html TextBox render.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.ToolbarsContainer.EnableSsl">
            <summary>
            Set to true if you need to use the control in a secure web page.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolbarsContainer.RenderDesign(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders at the design time.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolbarsContainer.RegisterAPIScriptBlock">
            <summary>
            Register the Client-Side script block in the ASPX page.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolbarsContainer.OnPreRender(System.EventArgs)">
            <summary>
            Notifies the Popup control to perform any necessary prerendering steps prior to saving view state and rendering content.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolbarsContainer.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends the Popup content to a provided HtmlTextWriter object, which writes the content to be rendered on the client.
            </summary>
            <param name="output">The HtmlTextWriter object that receives the server control content.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolbarsContainer.RenderToolbarsContainer(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the toolbars container.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolbarsContainer.FindTool(System.String)">
            <summary>
            Finds the tool by specifying the id.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolbarsContainer.FindTool(System.Type)">
            <summary>
            Finds the tool by specifying the type.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolbarsContainer.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
            <summary>
            Enables the control to process an event raised when a form is posted to the server.
            </summary>
            <param name="eventArgument">A String that represents an optional event argument to be passed to the event handler.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolbarsContainer.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
            <summary>
            Notify the ASP.NET application that the state of the control has changed.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.ToolbarsContainerDesigner">
            <summary>
            Designer of the <see cref="T:ActiveUp.WebControls.ToolbarsContainer"/> control.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolbarsContainerDesigner.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolbarsContainerDesigner.GetDesignTimeHtml">
            <summary>
            Gets the HTML that is used to represent the control at design time.
            </summary>
            <returns>The HTML that is used to represent the control at design time.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolbarsContainerDesigner.GetErrorDesignTimeHtml(System.Exception)">
            <summary>
            Gets the HTML that provides information about the specified exception. This method is typically called after an error has been encountered at design time.
            </summary>
            <param name="e">The exception that occurred.</param>
            <returns>The HTML for the specified exception.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolbarsContainerDesigner.DesignToolbarsContainer(System.Web.UI.HtmlTextWriter@,ActiveUp.WebControls.ToolbarsContainer)">
            <summary>
            Create a ToolbarContainers object at design time.
            </summary>
            <param name="output">Output stream that contains the HTML used to represent the control.</param>
            <param name="toolbarsContainer">The <see cref="T:ActiveUp.WebControls.ToolbarsContainer"/> object to design.</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolBase">
            <summary>
            Base class for each item in the <see cref="T:ActiveUp.WebControls.Toolbar"/>.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ToolBase._clientScriptBlock">
            <summary>
            
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ToolBase._clientScriptKey">
            <summary>
            
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ToolBase._startupScriptBlock">
            <summary>
            
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ToolBase._startupScriptKey">
            <summary>
            
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolBase.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolBase"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="P:ActiveUp.WebControls.ToolBase.ClientSideClick">
            <summary>
            Javascript code to execture client-side when the tool is clicked.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolBase.Text">
            <summary>
            Text to display with the tool.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolBase.ClientScriptKey">
            <summary>
            Gets or sets the key that will be used when registering the client-side script on the ASPX page.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolBase.ClientScriptBlock">
            <summary>
            Gets or sets the client-side script block to register with the tool.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolBase.StartupScriptBlock">
            <summary>
            Gets or sets the startup client-side script to register with the tool.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolBase.StartupScriptKey">
            <summary>
            Gets or sets the key that will be used when registering the startup client-side script on the ASPX page.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolBase.AllowRollOver">
            <summary>
            Indicates if you want to allow rollover.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolBase.BackImage">
            <summary>
            Image used as background of the tool.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolBase.EnableSsl">
            <summary>
            Set to true if you need to use the control in a secure web page.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolBase.RenderDesign(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders at the design time.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolBase.OnPreRender(System.EventArgs)">
            <summary>
            Notifies the Popup control to perform any necessary prerendering steps prior to saving view state and rendering content.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolButton">
            <summary>
            Represents a button.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolButton"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButton.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolButton"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="P:ActiveUp.WebControls.ToolButton.ImageURL">
            <summary>
            Gets or sets the relative link to the image to use for the tool.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolButton.OverImageURL">
            <summary>
            The relative link to the image to use when the mouse is over the tool.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolButton.NavigateURL">
            <summary>
            Target frame of the link.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolButton.Target">
            <summary>
            Target frame of the link.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolButton.AutoPostBack">
            <summary>
            Gets or sets a value that indicates whether or not the control posts back to the server each time a user interacts with the control. 
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolButton.PopupContents">
            <summary>
            Gets or sets the <see cref="T:ActiveUp.WebControls.Popup"/> associated with the tool.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolButton.UsePopupOnClick">
            <summary>
            Indicates if you want to use the <see cref="T:ActiveUp.WebControls.Popup"/> when a click occurs on the tool.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolButton.TextAlign">
            <summary>
            Text alignement of the tool.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolButton.BackImageRollOver">
            <summary>
            Image use as background when the mouse is over.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolButton.BorderColorRollOver">
            <summary>
            Border color of the tool when the mouse is over.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolButton.BorderStyleRollOver">
            <summary>
            Border style of the tool when the mouse is over.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolButton.BorderWidthRollOver">
            <summary>
            Border width of the tool when the mouse is over.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolButton.BackColorRollOver">
            <summary>
            Background color of the tool when the mouse is over.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolButton.BackColorClicked">
            <summary>
            "Background color of the tool when a click occurs.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolButton.BackImageClicked">
            <summary>
            Image used as background of the tool when a click occurs.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolButton.Type">
            <summary>
            Indicates the type of the tool.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolButton.Checked">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:ActiveUp.WebControls.ToolButton"/> control is checked.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolButton.GroupName">
            <summary>
            Group name used only when you use the tool as checkbox.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButton.RenderImage(System.Web.UI.HtmlTextWriter)">
            <summary>
            Render the tool to the specified HtmlTextWriter object. Usually a Page.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButton.RenderDisableImage(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders disabled image.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButton.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends the Popup content to a provided HtmlTextWriter object, which writes the content to be rendered on the client.
            </summary>
            <param name="output">The HtmlTextWriter object that receives the server control content.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButton.OnPreRender(System.EventArgs)">
            <summary>
            Notifies the tool to perform any necessary prerendering steps prior to saving view state and rendering content.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="E:ActiveUp.WebControls.ToolButton.Click">
            <summary>
            The Click event handler. Fire when you click on a node.
            </summary>
        </member>
        <member name="E:ActiveUp.WebControls.ToolButton.CheckedChanged">
            <summary>
            The CheckedChanged event handler. Fire when state of the checkbox change.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButton.OnClick(System.EventArgs)">
            <summary>
            A OnClick event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButton.OnCheckedChanged(System.EventArgs)">
            <summary>
            Raises the checked changed event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButton.RaisePostBackEvent(System.String)">
            <summary>
            A RaisePostBackEvent.
            </summary>
            <param name="eventArgument">eventArgument</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButton.RaisePostDataChangedEvent">
            <summary>
            When implemented by a class, signals the server control object to notify the ASP.NET application that the state of the
            control has changed.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.ToolButtonMenu">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolButtonMenu"/> object.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ToolButtonMenu._items">
            <summary>
            Collection of items present in the button menu.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButtonMenu.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolButtonMenu"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButtonMenu.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolButtonMenu"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="P:ActiveUp.WebControls.ToolButtonMenu.ImageURL">
            <summary>
            Gets or sets the relative link to the image to use for the tool.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolButtonMenu.AutoPostBack">
            <summary>
            Gets or sets a value that indicates whether or not the control posts back to the server each time a user interacts with the control. 
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolButtonMenu.TextAlign">
            <summary>
            Text alignement of the tool.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolButtonMenu.BackImageRollOver">
            <summary>
            Image use as background when the mouse is over.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolButtonMenu.BorderColorRollOver">
            <summary>
            Border color of the tool when the mouse is over.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolButtonMenu.BorderStyleRollOver">
            <summary>
            Border style of the tool when the mouse is over.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolButtonMenu.BorderWidthRollOver">
            <summary>
            Border width of the tool when the mouse is over.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolButtonMenu.BackColorRollOver">
            <summary>
            Background color of the tool when the mouse is over.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolButtonMenu.BackColorClicked">
            <summary>
            "Background color of the tool when a click occurs.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolButtonMenu.BackImageClicked">
            <summary>
            Image used as background of the tool when a click occurs.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolButtonMenu.DropImage">
            <summary>
            Image used for the dropdown menu.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolButtonMenu.Items">
            <summary>
            Gets or sets the collection containing the items.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolButtonMenu.LeftBackImage">
            <summary>
            Gets or sets the left background image.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolButtonMenu.WindowBorderColor">
            <summary>
            Gets or sets the window border color.
            </summary>
            <value>The window border color..</value>
        </member>
        <member name="P:ActiveUp.WebControls.ToolButtonMenu.WindowBorderStyle">
            <summary>
            Gets or sets the window border style.
            </summary>
            <value>The window border style.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ToolButtonMenu.WindowBorderWidth">
            <summary>
            Gets or sets the window border style.
            </summary>
            <value>The window border style.</value>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButtonMenu.RenderButtonMenu(System.Web.UI.HtmlTextWriter)">
            <summary>
            Render the tool to the specified HtmlTextWriter object. Usually a Page.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButtonMenu.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends the Popup content to a provided HtmlTextWriter object, which writes the content to be rendered on the client.
            </summary>
            <param name="output">The HtmlTextWriter object that receives the server control content.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButtonMenu.OnPreRender(System.EventArgs)">
            <summary>
            Notifies the tool to perform any necessary prerendering steps prior to saving view state and rendering content.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="E:ActiveUp.WebControls.ToolButtonMenu.Click">
            <summary>
            The Click event handler. Fire when you click on a node.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButtonMenu.OnClick(System.EventArgs)">
            <summary>
            A OnClick event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButtonMenu.RaisePostBackEvent(System.String)">
            <summary>
            A RaisePostBackEvent.
            </summary>
            <param name="eventArgument">eventArgument</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButtonMenu.RaisePostDataChangedEvent">
            <summary>
            When implemented by a class, signals the server control object to notify the ASP.NET application that the state of the
            control has changed.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButtonMenu.LoadViewState(System.Object)">
            <summary>
            Loads the saved view state.
            </summary>
            <param name="savedState">The saved view state.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButtonMenu.SaveViewState">
            <summary>
            Saves the view state.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButtonMenu.TrackViewState">
            <summary>
            Tracks the view state.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.ToolButtonMenuItem">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolItem"/>.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButtonMenuItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolButtonMenuItem"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButtonMenuItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolButtonMenuItem"/> class.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButtonMenuItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolButtonMenuItem"/> class.
            </summary>
            <param name="text">The text.</param>
            <param name="image">The image.</param>
        </member>
        <member name="P:ActiveUp.WebControls.ToolButtonMenuItem.Image">
            <summary>
            Gets or sets the Image.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolButtonMenuItem.Text">
            <summary>
            Gets or sets the text of the item.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolButtonMenuItem.ViewState">
            <summary>
            Gets the view state.
            </summary>
            <value>The view state.</value>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButtonMenuItem.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)">
            <summary>
            Notifies the <see cref="T:ActiveUp.WebControls.ToolButtonMenuItem"/> that an element, either XML or HTML, was parsed, and adds the element to the server control's ControlCollection object.
            </summary>
            <param name="obj">An Object that represents the parsed element.</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolButtonMenuItemCollection">
            <summary>
            Collection of <see cref="T:ActiveUp.WebControls.ToolButtonMenuItem"/>
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ToolButtonMenuItemCollection._items">
            <summary>
            ArrayList of <see cref="T:ActiveUp.WebControls.ToolButtonMenuItem"/>.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButtonMenuItemCollection.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolButtonMenuItemCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets a <see cref="T:ActiveUp.WebControls.ToolButtonMenuItem"/> at the specified index.
            </summary>		
        </member>
        <member name="P:ActiveUp.WebControls.ToolButtonMenuItemCollection.Item(System.Int32)">
            <summary>
            Gets or sets a <see cref="T:ActiveUp.WebControls.ToolButtonMenuItem"/> at the specified index.
            </summary>		
        </member>
        <member name="P:ActiveUp.WebControls.ToolButtonMenuItemCollection.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolButtonMenuItemCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolButtonMenuItemCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolButtonMenuItemCollection.IsFixedSize">
            <summary>
            Gets a boolean value indicating whether the current instance has a fixed size.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolButtonMenuItemCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the current instance is read-only.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButtonMenuItemCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific <see cref="T:ActiveUp.WebControls.ToolButtonMenuItem"/> from the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.ToolButtonMenuItem"/> to remove from the collection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButtonMenuItemCollection.Remove(ActiveUp.WebControls.ToolButtonMenuItem)">
            <summary>
            Removes the first occurrence of a specific <see cref="T:ActiveUp.WebControls.ToolButtonMenuItem"/> from the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.ToolButtonMenuItem"/> to remove from the collection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButtonMenuItemCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts a <see cref="T:ActiveUp.WebControls.ToolButtonMenuItem"/> to the collection at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="item">The <see cref="T:ActiveUp.WebControls.ToolButtonMenuItem"/> to insert into the Collection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButtonMenuItemCollection.Insert(System.Int32,ActiveUp.WebControls.ToolButtonMenuItem)">
            <summary>
            Inserts a <see cref="T:ActiveUp.WebControls.ToolButtonMenuItem"/> to the collection at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="item">The <see cref="T:ActiveUp.WebControls.ToolButtonMenuItem"/> to insert into the Collection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButtonMenuItemCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds a <see cref="T:ActiveUp.WebControls.ToolButtonMenuItem"/> to the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.ToolButtonMenuItem"/> to add to the collection.</param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButtonMenuItemCollection.Add(ActiveUp.WebControls.ToolButtonMenuItem)">
            <summary>
            Adds a <see cref="T:ActiveUp.WebControls.ToolButtonMenuItem"/> to the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.ToolButtonMenuItem"/> to add to the collection.</param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButtonMenuItemCollection.System#Collections#IList#Clear">
            <summary>
            Removes all <see cref="T:ActiveUp.WebControls.ToolButtonMenuItem"/> from the collection.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButtonMenuItemCollection.Clear">
            <summary>
            Removes all <see cref="T:ActiveUp.WebControls.ToolButtonMenuItem"/> from the collection.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButtonMenuItemCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether a <see cref="T:ActiveUp.WebControls.ToolButtonMenuItem"/> is in the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.ToolButtonMenuItem"/> to locate in the collection. The element to locate can be a null reference.</param>
            <returns>true if value is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButtonMenuItemCollection.Contains(ActiveUp.WebControls.ToolButtonMenuItem)">
            <summary>
            Determines whether a <see cref="T:ActiveUp.WebControls.ToolButtonMenuItem"/> is in the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.ToolButtonMenuItem"/> to locate in the collection. The element to locate can be a null reference.</param>
            <returns>true if value is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButtonMenuItemCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of a specific <see cref="T:ActiveUp.WebControls.ToolButtonMenuItem"/> in the current instance.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.ToolButtonMenuItem"/> to locate in the current instance.</param>
            <returns>The index of value if found in the current instance; otherwise, -1.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButtonMenuItemCollection.IndexOf(ActiveUp.WebControls.ToolButtonMenuItem)">
            <summary>
            Determines the index of a specific <see cref="T:ActiveUp.WebControls.ToolButtonMenuItem"/> in the current instance.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.ToolButtonMenuItem"/> to locate in the current instance.</param>
            <returns>The index of value if found in the current instance; otherwise, -1.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButtonMenuItemCollection.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:ActiveUp.WebControls.ToolButtonMenuItem"/> at the specified index within the collection.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:ActiveUp.WebControls.ToolButtonMenuItem"/> to remove.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButtonMenuItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:ActiveUp.WebControls.ToolButtonMenuItem"/> at the specified index within the collection.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:ActiveUp.WebControls.ToolButtonMenuItem"/> to remove.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButtonMenuItemCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButtonMenuItemCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements from the current instance to the specified collection, starting at the specified index in the array.
            </summary>
            <param name="array">A one-dimensional, zero-based Array that is the destination of the elements copied from the current instance. </param>
            <param name="index">A Int32 that specifies the zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButtonMenuItemCollection.System#Web#UI#IStateManager#TrackViewState">
            <summary>
            When implemented by a class, instructs the server control to track changes to its view state.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButtonMenuItemCollection.SaveViewState">
            <summary>
            When implemented by a class, saves the changes to a server control's view state to an
            <see cref="T:System.Object"/> .
            </summary>
            <returns>
            The <see langword="Object"/> that contains the view state changes.
            </returns>
        </member>
        <member name="T:ActiveUp.WebControls.ToolButtonMenuItemControlBuilder">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolButtonMenuItemControlBuilder"/>.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButtonMenuItemControlBuilder.AllowWhitespaceLiterals">
            <summary>
            Determines whether the white space literals in the control must be processed or ignored.
            </summary>
            <returns>True if the white space literals in the control must be processed, otherwise, false.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolButtonMenuItemControlBuilder.HtmlDecodeLiterals">
            <summary>
            Determines whether the literal string of an HTML control must be HTML decoded.
            </summary>
            <returns>True if the HTML control literal string is to be decoded, otherwise, false.</returns>
        </member>
        <member name="T:ActiveUp.WebControls.ToolButtonType">
            <summary>
            Tool button type enumeration.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ToolButtonType.Normal">
            <summary>
            Normal button type.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ToolButtonType.Checkbox">
            <summary>
            Checkbox button type.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.ToolCheckBox">
            <summary>
            Represents a checkbox.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ToolCheckBox.EventCheckedChanged">
            <summary>
            Event occurs when the checked value change.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCheckBox.#ctor">
            <summary>
            Default constrcutor.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolCheckBox.Checked">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:ActiveUp.WebControls.ToolCheckBox"/> control is checked.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolCheckBox.AutoPostBack">
            <summary>
            Gets or sets a value that indicates whether or not the control posts back to the server each time a user interacts with the control. 
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolCheckBox.BorderColorRollOver">
            <summary>
            Gets or sets the border color when the mouse is over the <see cref="T:ActiveUp.WebControls.ToolCheckBox"/>.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolCheckBox.TextAlign">
            <summary>
            Gets or sets text alignment options for the <see cref="T:ActiveUp.WebControls.ToolCheckBox"/>.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolCheckBox.SaveCheckedViewState">
            <summary>
            Save the checked value in the viewstate.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCheckBox.OnPreRender(System.EventArgs)">
            <summary>
            Notifies the ToolCheckBox control to perform any necessary prerendering steps prior to saving view state and rendering content.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCheckBox.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends the ToolCheckBox content to a provided HtmlTextoutput object, which writes the content to be rendered on the client.
            </summary>
            <param name="output">The HtmlTextoutput object that receives the server control content.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCheckBox.RenderLabel(System.Web.UI.HtmlTextWriter,System.String,System.String)">
            <summary>
            Write the label to be rendered on the client.
            </summary>
            <param name="output">Output stream that contains the HTML used to represent the control.</param>
            <param name="text">Text to render.</param>
            <param name="clientID">Id to identify the <see cref="T:ActiveUp.WebControls.ToolCheckBox"/>.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCheckBox.RenderInputTag(System.Web.UI.HtmlTextWriter,System.String)">
            <summary>
            Write the input tag to be rendered on the client.
            </summary>
            <param name="output">Output stream that contains the HTML used to represent the control.</param>
            <param name="clientID">Id to identify the <see cref="T:ActiveUp.WebControls.ToolCheckBox"/>.</param>
        </member>
        <member name="E:ActiveUp.WebControls.ToolCheckBox.CheckedChanged">
            <summary>
            Occurs when the value of the <see cref="P:ActiveUp.WebControls.ToolCheckBox.Checked"/> property changes between posts to the server.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCheckBox.OnCheckedChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:ActiveUp.WebControls.ToolCheckBox.CheckedChanged"/> event of the <see cref="T:ActiveUp.WebControls.ToolCheckBox"/> control. This allows you to handle the event directly.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCheckBox.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
            <summary>
            Notify the ASP.NET application that the state of the control has changed.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCheckBox.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Processes post-back data from the control.
            <param name="postDataKey">The key identifier for the control.</param>
            <param name="postCollection">The collection of all incoming name values.</param>
            <returns>True if the state changes as a result of the post-back, otherwise it returns false.</returns>
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.ToolCollection">
            <summary>
            A Collection of <see cref="T:ActiveUp.WebControls.ToolBase"/>.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ToolCollection._tools">
            <summary>
            ArrayList of <see cref="T:ActiveUp.WebControls.ToolBase"/>.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCollection.#ctor(System.Web.UI.ControlCollection)">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets a <see cref="T:ActiveUp.WebControls.ToolBase"/> at the specified index.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolCollection.Item(System.Int32)">
            <summary>
            Gets or sets a <see cref="T:ActiveUp.WebControls.ToolBase"/> at the specified index.
            </summary>		
        </member>
        <member name="P:ActiveUp.WebControls.ToolCollection.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolCollection.IsFixedSize">
            <summary>
            Gets a boolean value indicating whether the current instance has a fixed size.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the current instance is read-only.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCollection.System#Collections#IList#Remove(System.Object)">
            <summary>	
            Removes the first occurrence of a specific <see cref="T:ActiveUp.WebControls.ToolBase"/> from the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.ToolBase"/> to remove from the collection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCollection.Remove(ActiveUp.WebControls.ToolBase)">
            <summary>
            Removes the first occurrence of a specific <see cref="T:ActiveUp.WebControls.ToolBase"/> from the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.ToolBase"/> to remove from the collection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts a <see cref="T:ActiveUp.WebControls.Toolbar"/> to the collection at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="item">The <see cref="T:ActiveUp.WebControls.Toolbar"/> to insert into the Collection.</param>		
        </member>
        <member name="M:ActiveUp.WebControls.ToolCollection.Insert(System.Int32,ActiveUp.WebControls.ToolBase)">
            <summary>
            Inserts a <see cref="T:ActiveUp.WebControls.ToolBase"/> to the collection at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="item">The <see cref="T:ActiveUp.WebControls.ToolBase"/> to insert into the Collection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds a <see cref="T:ActiveUp.WebControls.ToolBase"/> to the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.ToolBase"/> to add to the collection.</param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCollection.Add(ActiveUp.WebControls.ToolBase)">
            <summary>
            Adds a <see cref="T:ActiveUp.WebControls.ToolBase"/> to the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.ToolBase"/> to add to the collection.</param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCollection.System#Collections#IList#Clear">
            <summary>
            Removes all <see cref="T:ActiveUp.WebControls.ToolBase"/> from the collection.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCollection.Clear">
            <summary>
            Removes all <see cref="T:ActiveUp.WebControls.ToolBase"/> from the collection.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether a <see cref="T:ActiveUp.WebControls.ToolBase"/> is in the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.ToolBase"/> to locate in the collection. The element to locate can be a null reference.</param>
            <returns>true if value is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCollection.Contains(ActiveUp.WebControls.ToolBase)">
            <summary>
            Determines whether a <see cref="T:ActiveUp.WebControls.ToolBase"/> is in the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.ToolBase"/> to locate in the collection. The element to locate can be a null reference.</param>
            <returns>true if value is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of a specific <see cref="T:ActiveUp.WebControls.ToolBase"/> in the current instance.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.ToolBase"/> to locate in the current instance.</param>
            <returns>The index of value if found in the current instance; otherwise, -1.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCollection.IndexOf(ActiveUp.WebControls.ToolBase)">
            <summary>
            Determines the index of a specific <see cref="T:ActiveUp.WebControls.ToolBase"/> in the current instance.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.ToolBase"/> to locate in the current instance.</param>
            <returns>The index of value if found in the current instance; otherwise, -1.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCollection.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:ActiveUp.WebControls.ToolBase"/> at the specified index within the collection.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:ActiveUp.WebControls.ToolBase"/> to remove.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:ActiveUp.WebControls.ToolBase"/> at the specified index within the collection.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:ActiveUp.WebControls.ToolBase"/> to remove.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements from the current instance to the specified collection, starting at the specified index in the array.
            </summary>
            <param name="array">A one-dimensional, zero-based Array that is the destination of the elements copied from the current instance. </param>
            <param name="index">A Int32 that specifies the zero-based index in array at which copying begins.</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolCollectionEditor">
            <summary>
            Provides a user interface that can edit most types of the <see cref="T:ActiveUp.WebControls.ToolCollection"/> at design time.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCollectionEditor.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolCollectionEditor"/> class using the specified collection type.
            </summary>
            <param name="type">The type of the collection for this editor to edit.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCollectionEditor.CreateNewItemTypes">
            <summary>
            Gets the data types that this <see cref="T:ActiveUp.WebControls.ToolCollectionEditor"/> can contain.
            </summary>
            <returns>An array of data types that this collection can contain.</returns>
        </member>
        <member name="T:ActiveUp.WebControls.ToolColorPicker">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolColorPicker"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolColorPicker.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolColorPicker"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolColorPicker.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolColorPicker"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolColorPicker.SelectedIndexChangedEventHandler">
            <summary>
            SelectedIndexChanged event handler.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ToolColorPicker._borderColorRollOver">
            <summary>
            Collection of <see cref="T:ActiveUp.WebControls.ToolItem"/>
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ToolColorPicker.CLIENTSIDE_API">
            <summary>
            Client side script block.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ToolColorPicker.ACTIVETOOLBARSCRIPTKEY">
            <summary>
            Unique client script key.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ToolColorPicker._items">
            <summary>
            Collection of items present in the dropdown.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ToolColorPicker._allowDHTML">
            <summary>
            Indicates if the control can be use dhtml.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolColorPicker.Items">
            <summary>
            Gets or sets the collection containing the items.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolColorPicker.Text">
            <summary>
            Gets or sets the text displayed.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolColorPicker.DropDownListType">
            <summary>
            Gets or sets the type of rendering.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolColorPicker.SelectedIndex">
            <summary>
            Gets or sets the current selected index.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolColorPicker.SelectedItem">
            <summary>
            Gets or sets the current selected item.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolColorPicker.BorderColor">
            <summary>
            Gets or sets the border color.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolColorPicker.BorderColorRollOver">
            <summary>
            Gets or sets the boder color rollover.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolColorPicker.BorderWidth">
            <summary>
            Gets or sets the border width.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolColorPicker.BorderStyle">
            <summary>
            Gets or sets the border style.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolColorPicker.Cellpadding">
            <summary>
            Gets or sets the amount of space between the contents of a cell and the cell's border.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolColorPicker.Cellspacing">
            <summary>
            Gets or sets the amount of space between cells.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolColorPicker.BackColorItems">
            <summary>
            Gets or sets the background color items.
            </summary>
            <value>The back color items.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ToolColorPicker.SelectedBackColorBorder">
            <summary>
            Gets or sets the selected background color border.
            </summary>
            <value>The selected background color border.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ToolColorPicker.SelectedBackColorItem">
            <summary>
            Gets or sets the selected background color item.
            </summary>
            <value>The selected background color item.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ToolColorPicker.BackColor">
            <summary>
            Gets or sets the background color.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolColorPicker.WindowBorderColor">
            <summary>
            Gets or sets the window border color.
            </summary>
            <value>The color of the window border.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ToolColorPicker.WindowBorderStyle">
            <summary>
            Gets or sets the window border style.
            </summary>
            <value>The window border style.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ToolColorPicker.WindowBorderWidth">
            <summary>
            Gets or sets the window border width.
            </summary>
            <value>The window border width.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ToolColorPicker.ItemBorderColor">
            <summary>
            Gets or sets the border color of each <see cref="T:ActiveUp.WebControls.ToolItem"/>.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolColorPicker.ItemBorderColorRollOver">
            <summary>
            Gets or sets the border color rollover of each <see cref="T:ActiveUp.WebControls.ToolItem"/>.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolColorPicker.ItemAlign">
            <summary>
            Gets or sets the alignment of each <see cref="T:ActiveUp.WebControls.ToolItem"/>.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolColorPicker.ItemBorderStyle">
            <summary>
            Gets or sets the border style of each <see cref="T:ActiveUp.WebControls.ToolItem"/>.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolColorPicker.ItemBorderWidth">
            <summary>
            Gets or sets the border width of each <see cref="T:ActiveUp.WebControls.ToolItem"/>.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolColorPicker.DropDownImage">
            <summary>
            Gets or sets the relative link to the dropdown image to use.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolColorPicker.IndentText">
            <summary>
            Gets or sets the text to use for the indentation.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolColorPicker.AutoPostBack">
            <summary>
            Gets or sets a value that indicates whether or not the control posts back to the server each time a user interacts with the control. 
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolColorPicker.ChangeToSelectedText">
            <summary>
            Gets or sets the value the component have to take when an item is selected.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolColorPicker.CloseDropDownOnClickItem">
            <summary>
            Gets or sets a value indicating whether the drop down color close on click item].
            </summary>
            <value>
            	<c>true</c> if the drop down color close on click; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:ActiveUp.WebControls.ToolColorPicker.ClearSelection">
            <summary>
            Remove the selection to all items.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolColorPicker.RegisterAPIScriptBlock">
            <summary>
             Register the client-side script block in the ASPX page.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolColorPicker.RenderItems(System.Web.UI.HtmlTextWriter)">
            <summary>
            Write the items to be rendered on the client.
            </summary>
            <param name="output">The HtmlTextWriter object that receives the server control content.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolColorPicker.AllowDHTML">
            <summary>
            Determine if we need to register the client side script and render the calendar, selectors with validation or selectors only.
            </summary>
            <returns>0 if scripting not allowed, 1 if not an uplevel browser but scripting allowed, 2 if all is OK.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolColorPicker.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
            <summary>
            Enables the control to process an event raised when a form is posted to the server.
            </summary>
            <param name="eventArgument">A String that represents an optional event argument to be passed to the event handler.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolColorPicker.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Processes post-back data from the control.
            </summary>
            <param name="postDataKey">The key identifier for the control.</param>
            <param name="postCollection">The collection of all incoming name values.</param>
            <returns>True if the state changes as a result of the post-back, otherwise it returns false.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolColorPicker.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
            <summary>
            Notify the ASP.NET application that the state of the control has changed.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolColorPicker.LoadViewState(System.Object)">
            <summary>
            Loads the view state.
            </summary>
            <param name="savedState">The saved view state.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolColorPicker.SaveViewState">
            <summary>
            Saves the view state.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolColorPicker.TrackViewState">
            <summary>
            Tracks the view state.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolColorPicker.OnPreRender(System.EventArgs)">
            <summary>
            Notifies the Popup control to perform any necessary prerendering steps prior to saving view state and rendering content.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolColorPicker.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the specified output.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="P:ActiveUp.WebControls.ToolColorPicker.WidthPopup">
            <summary>
            Gets or sets the popup width.
            </summary>
            <value>The width popup.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ToolColorPicker.HeightPopup">
            <summary>
            Gets or sets the popup height.
            </summary>
            <value>The popup height.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ToolColorPicker.Image">
            <summary>
            Gets or sets the image.
            </summary>
            <value>The image.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ToolColorPicker.UseSquareColor">
            <summary>
            Gets or sets a value indicating whether use square color in the title.
            </summary>
            <value><c>true</c> if use square color in the title; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ToolColorPicker.SelectedColor">
            <summary>
            Gets or sets the selected color.
            </summary>
            <value>The selected color.</value>
        </member>
        <member name="M:ActiveUp.WebControls.ToolColorPicker.RenderDesign(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders at the design time.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolColorPickerDesigner">
            <summary>
            Designer of the <see cref="T:ActiveUp.WebControls.ToolColorPickerDesigner"/> control.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolColorPickerDesigner.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolColorPickerDesigner.AllowResize">
            <summary>
            Gets a value indicating whether the control can be resized.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolColorPickerDesigner.GetDesignTimeHtml">
            <summary>
            Gets the HTML that is used to represent the control at design time.
            </summary>
            <returns>The HTML that is used to represent the control at design time.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolColorPickerDesigner.GetEmptyDesignTimeHtml">
            <summary>
            Gets the HTML that is used to represent an empty control at design time.
            </summary>
            <returns>The HTML that is used to represent an empty control at design time. By default, this HTML contains the name of the component.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolColorPickerDesigner.GetErrorDesignTimeHtml(System.Exception)">
            <summary>
            Gets the HTML that provides information about the specified exception. This method is typically called after an error has been encountered at design time.
            </summary>
            <param name="e">The exception that occurred.</param>
            <returns>The HTML for the specified exception.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolColorPickerDesigner.DesignColorPicker(System.Web.UI.HtmlTextWriter@,ActiveUp.WebControls.ToolColorPicker)">
            <summary>
            Create a DropDownList object at design time.
            </summary>
            <param name="output">Output stream that contains the HTML used to represent the control.</param>
            <param name="colorPicker"><see cref="T:ActiveUp.WebControls.ToolColorPicker"/> object to design.</param>
            
        </member>
        <member name="T:ActiveUp.WebControls.SelectedText">
            <summary>
            Text value of the component when a item is selected.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.SelectedText.None">
            <summary>
            No change.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.SelectedText.Text">
            <summary>
            Take the text of the <see cref="T:ActiveUp.WebControls.ToolItem"/>.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.SelectedText.Value">
            <summary>
            Take the value of the <see cref="T:ActiveUp.WebControls.ToolItem"/>
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.ToolDropDownList">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolDropDownList"/>.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.ToolDropDownList.SelectedIndexChangedEventHandler">
            <summary>
            SelectedIndexChanged event handler.
            </summary>
        </member>
        <member name="E:ActiveUp.WebControls.ToolDropDownList.SelectedIndexChanged">
            <summary>
            Occurs when the selected index is changed.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ToolDropDownList._borderColorRollOver">
            <summary>
            Collection of <see cref="T:ActiveUp.WebControls.ToolItem"/>
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ToolDropDownList._dataSource">
            <summary>
            Data source used for data binding.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ToolDropDownList._oldSelectedIndex">
            <summary>
            Old selected index before selecting the new one.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ToolDropDownList.CLIENTSIDE_API">
            <summary>
            Client side script block.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ToolDropDownList.ACTIVETOOLBARSCRIPTKEY">
            <summary>
            Unique client script key.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ToolDropDownList._items">
            <summary>
            Collection of items present in the dropdown.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ToolDropDownList._allowDHTML">
            <summary>
            Indicates if the control can be use dhtml.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolDropDownList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolDropDownList"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolDropDownList.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolDropDownList"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="P:ActiveUp.WebControls.ToolDropDownList.Items">
            <summary>
            Gets or sets the collection containing the items.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolDropDownList.Text">
            <summary>
            Gets or sets the text displayed.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolDropDownList.DropDownListType">
            <summary>
            Gets or sets the type of rendering.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolDropDownList.SelectedIndex">
            <summary>
            Gets or sets the current selected index.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolDropDownList.SelectedItem">
            <summary>
            Gets or sets the current selected item.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolDropDownList.BorderColor">
            <summary>
            Gets or sets the border color.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolDropDownList.BorderColorRollOver">
            <summary>
            Gets or sets the boder color rollover.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolDropDownList.BorderWidth">
            <summary>
            Gets or sets the border width.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolDropDownList.BorderStyle">
            <summary>
            Gets or sets the border style.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolDropDownList.Cellpadding">
            <summary>
            Gets or sets the amount of space between the contents of a cell and the cell's border.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolDropDownList.Cellspacing">
            <summary>
            Gets or sets the amount of space between cells.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolDropDownList.BackColorItems">
            <summary>
            Gets or sets the background color items.
            </summary>
            <value>The background color items.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ToolDropDownList.BackColor">
            <summary>
            Gets or sets the background color.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolDropDownList.WindowBorderColor">
            <summary>
            Gets or sets the window border color.
            </summary>
            <value>The window border color.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ToolDropDownList.WindowBorderStyle">
            <summary>
            Gets or sets the window border style.
            </summary>
            <value>The window border style.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ToolDropDownList.WindowBorderWidth">
            <summary>
            Gets or sets the window border width.
            </summary>
            <value>The window border width.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ToolDropDownList.ItemBorderColor">
            <summary>
            Gets or sets the border color of each <see cref="T:ActiveUp.WebControls.ToolItem"/>.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolDropDownList.ItemBorderColorRollOver">
            <summary>
            Gets or sets the border color rollover of each <see cref="T:ActiveUp.WebControls.ToolItem"/>.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolDropDownList.ItemAlign">
            <summary>
            Gets or sets the alignment of each <see cref="T:ActiveUp.WebControls.ToolItem"/>.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolDropDownList.ItemBackColor">
            <summary>
            Gets or sets the background color of each <see cref="T:ActiveUp.WebControls.ToolItem"/>.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolDropDownList.ItemBackColorRollOver">
            <summary>
            Gets or sets the background color of each <see cref="T:ActiveUp.WebControls.ToolItem"/>.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolDropDownList.ItemBorderStyle">
            <summary>
            Gets or sets the border style of each <see cref="T:ActiveUp.WebControls.ToolItem"/>.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolDropDownList.ItemBorderWidth">
            <summary>
            Gets or sets the border width of each <see cref="T:ActiveUp.WebControls.ToolItem"/>.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolDropDownList.DropDownImage">
            <summary>
            Gets or sets the relative link to the dropdown image to use.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolDropDownList.IndentText">
            <summary>
            Gets or sets the text to use for the indentation.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolDropDownList.AutoPostBack">
            <summary>
            Gets or sets a value that indicates whether or not the control posts back to the server each time a user interacts with the control. 
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolDropDownList.ChangeToSelectedText">
            <summary>
            Gets or sets the value the component have to take when an item is selected.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolDropDownList.DataMember">
            <summary>
            Gets or sets the specific table in the DataSource to bind to the <see cref="T:ActiveUp.WebControls.ToolDropDownList"/>.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolDropDownList.DataSource">
            <summary>
            Gets or sets the data source for this <see cref="T:ActiveUp.WebControls.ToolDropDownList"/>.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolDropDownList.DataTextField">
            <summary>
            Gets or sets the data source that provides the text content of <see cref="T:ActiveUp.WebControls.ToolItem"/>.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolDropDownList.DataTextOnlyField">
            <summary>
            Gets or sets the .
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolDropDownList.DataTextFormatString">
            <summary>
            Gets or sets the formatting string used to control how data bound to the <see cref="T:ActiveUp.WebControls.ToolDropDownList"/> control is displayed.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolDropDownList.DataValueField">
            <summary>
            Gets or sets the field of the data source that provides the value of each <see cref="T:ActiveUp.WebControls.ToolItem"/>.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolDropDownList.DataParentField">
            <summary>
            Gets or sets the field of the data source that provides the parent id.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolDropDownList.DataKeyField">
            <summary>
            Gets or sets the field of the data source that provides the foreign data key.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolDropDownList.DataMasterValue">
            <summary>
            Gets or sets the field of the data source that provides the foreign data master value.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolDropDownList.DataMasterText">
            <summary>
            Gets or sets the field of the data source that provides the foreign data master text.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolDropDownList.TranslateForeignData">
            <summary>
            Gets or sets the value indicating if we need to translate the foreign data.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolDropDownList.ItemsAreaHeight">
            <summary>
            Gets or sets the items area height.
            </summary>
            <value>The items area height.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ToolDropDownList.CloseDropDownOnClickItem">
            <summary>
            Gets or sets a value indicating whether close drop down on click item.
            </summary>
            <value>
            	<c>true</c> if close drop down on click item; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:ActiveUp.WebControls.ToolDropDownList.ClearSelection">
            <summary>
            Remove the selection to all items.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolDropDownList.RegisterAPIScriptBlock">
            <summary>
             Register the client-side script block in the ASPX page.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolDropDownList.OnPreRender(System.EventArgs)">
            <summary>
            Notifies the Popup control to perform any necessary prerendering steps prior to saving view state and rendering content.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolDropDownList.OnDataBinding(System.EventArgs)">
            <summary>
            Raises the DataBinding event.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolDropDownList.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends the Popup content to a provided HtmlTextWriter object, which writes the content to be rendered on the client.
            </summary>
            <param name="output">The HtmlTextWriter object that receives the server control content.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolDropDownList.RenderItems(System.Web.UI.HtmlTextWriter)">
            <summary>
            Write the items to be rendered on the client.
            </summary>
            <param name="output">The HtmlTextWriter object that receives the server control content.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolDropDownList.AllowDHTML">
            <summary>
            Determine if we need to register the client side script and render the calendar, selectors with validation or selectors only.
            </summary>
            <returns>0 if scripting not allowed, 1 if not an uplevel browser but scripting allowed, 2 if all is OK.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolDropDownList.OnSelectedIndexChanged(System.EventArgs)">
            <summary>
            Raise the <see cref="E:ActiveUp.WebControls.ToolDropDownList.SelectedIndexChanged"/> of the <see cref="T:ActiveUp.WebControls.ToolDropDownList"/> control. This allows you to handle the event directly.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolDropDownList.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
            <summary>
            Enables the control to process an event raised when a form is posted to the server.
            </summary>
            <param name="eventArgument">A String that represents an optional event argument to be passed to the event handler.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolDropDownList.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Processes post-back data from the control.
            </summary>
            <param name="postDataKey">The key identifier for the control.</param>
            <param name="postCollection">The collection of all incoming name values.</param>
            <returns>True if the state changes as a result of the post-back, otherwise it returns false.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolDropDownList.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
            <summary>
            Notify the ASP.NET application that the state of the control has changed.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolDropDownList.LoadViewState(System.Object)">
            <summary>
            Loads the view state.
            </summary>
            <param name="savedState">The saved view state.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolDropDownList.SaveViewState">
            <summary>
            Save the view state.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolDropDownList.TrackViewState">
            <summary>
            Tracks the view state.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolDropDownList.RenderDesign(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the DropDownList at the design time.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolDropDownListDesigner">
            <summary>
            Designer of the <see cref="T:System.Web.UI.WebControls.DropDownList"/> control.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolDropDownListDesigner.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolDropDownListDesigner.AllowResize">
            <summary>
            Gets a value indicating whether the control can be resized.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolDropDownListDesigner.GetDesignTimeHtml">
            <summary>
            Gets the HTML that is used to represent the control at design time.
            </summary>
            <returns>The HTML that is used to represent the control at design time.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolDropDownListDesigner.GetEmptyDesignTimeHtml">
            <summary>
            Gets the HTML that is used to represent an empty control at design time.
            </summary>
            <returns>The HTML that is used to represent an empty control at design time. By default, this HTML contains the name of the component.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolDropDownListDesigner.GetErrorDesignTimeHtml(System.Exception)">
            <summary>
            Gets the HTML that provides information about the specified exception. This method is typically called after an error has been encountered at design time.
            </summary>
            <param name="e">The exception that occurred.</param>
            <returns>The HTML for the specified exception.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolDropDownListDesigner.DesignDropDownList(System.Web.UI.HtmlTextWriter@,ActiveUp.WebControls.ToolDropDownList)">
            <summary>
            Create a DropDownList object at design time.
            </summary>
            <param name="output">Output stream that contains the HTML used to represent the control.</param>
            <param name="ddl"><see cref="T:System.Web.UI.WebControls.DropDownList"/> object to design.</param>
            
        </member>
        <member name="T:ActiveUp.WebControls.ToolDropDownListType">
            <summary>
            Tool drop down list type enumeration.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ToolDropDownListType.NotSet">
            <summary>
            Not set.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ToolDropDownListType.DHTML">
            <summary>
            DHTML drop down list type.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ToolDropDownListType.HTML">
            <summary>
            HTML drop down list type.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.ToolItem">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolItem"/>.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolItem.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolItem.#ctor(System.String,System.String)">
            <summary>
            Create a <see cref="T:ActiveUp.WebControls.ToolItem"/> by specifying the text and the value.
            </summary>
            <param name="text">Text displayed.</param>
            <param name="val">The value.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolItem.#ctor(System.Web.UI.WebControls.WebControl)">
            <summary>
            Create a <see cref="T:ActiveUp.WebControls.ToolItem"/> by specifying an embedded control.
            </summary>
            <param name="embeddedControl"></param>
        </member>
        <member name="P:ActiveUp.WebControls.ToolItem.Selected">
            <summary>
            Gets or sets if the <see cref="T:ActiveUp.WebControls.ToolItem"/> is selected or not.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolItem.Text">
            <summary>
            Gets or sets the text.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolItem.TextOnly">
            <summary>
            Gets or sets the text.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolItem.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolItem.EmbeddedControl">
            <summary>
            Gets or sets the embedde control.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolItem.ViewState">
            <summary>
            Gets the view state.
            </summary>
            <value>The view state.</value>
        </member>
        <member name="M:ActiveUp.WebControls.ToolItem.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)">
            <summary>
            Notifies the <see cref="T:ActiveUp.WebControls.ToolItem"/> that an element, either XML or HTML, was parsed, and adds the element to the server control's ControlCollection object.
            </summary>
            <param name="obj">An Object that represents the parsed element.</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolItemCollection">
            <summary>
            Collection of <see cref="T:ActiveUp.WebControls.ToolItem"/>
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ToolItemCollection._items">
            <summary>
            ArrayList of <see cref="T:ActiveUp.WebControls.ToolItem"/>.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolItemCollection.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolItemCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets a <see cref="T:ActiveUp.WebControls.ToolItem"/> at the specified index.
            </summary>		
        </member>
        <member name="P:ActiveUp.WebControls.ToolItemCollection.Item(System.Int32)">
            <summary>
            Gets or sets a <see cref="T:ActiveUp.WebControls.ToolItem"/> at the specified index.
            </summary>		
        </member>
        <member name="P:ActiveUp.WebControls.ToolItemCollection.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolItemCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolItemCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolItemCollection.IsFixedSize">
            <summary>
            Gets a boolean value indicating whether the current instance has a fixed size.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolItemCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the current instance is read-only.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolItemCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific <see cref="T:ActiveUp.WebControls.ToolItem"/> from the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.ToolItem"/> to remove from the collection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolItemCollection.Remove(ActiveUp.WebControls.ToolItem)">
            <summary>
            Removes the first occurrence of a specific <see cref="T:ActiveUp.WebControls.ToolItem"/> from the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.ToolItem"/> to remove from the collection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolItemCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts a <see cref="T:ActiveUp.WebControls.ToolItem"/> to the collection at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="item">The <see cref="T:ActiveUp.WebControls.ToolItem"/> to insert into the Collection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolItemCollection.Insert(System.Int32,ActiveUp.WebControls.ToolItem)">
            <summary>
            Inserts a <see cref="T:ActiveUp.WebControls.ToolItem"/> to the collection at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="item">The <see cref="T:ActiveUp.WebControls.ToolItem"/> to insert into the Collection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolItemCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds a <see cref="T:ActiveUp.WebControls.ToolItem"/> to the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.ToolItem"/> to add to the collection.</param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolItemCollection.Add(ActiveUp.WebControls.ToolItem)">
            <summary>
            Adds a <see cref="T:ActiveUp.WebControls.ToolItem"/> to the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.ToolItem"/> to add to the collection.</param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolItemCollection.System#Collections#IList#Clear">
            <summary>
            Removes all <see cref="T:ActiveUp.WebControls.ToolItem"/> from the collection.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolItemCollection.Clear">
            <summary>
            Removes all <see cref="T:ActiveUp.WebControls.ToolItem"/> from the collection.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolItemCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether a <see cref="T:ActiveUp.WebControls.ToolItem"/> is in the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.ToolItem"/> to locate in the collection. The element to locate can be a null reference.</param>
            <returns>true if value is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolItemCollection.Contains(ActiveUp.WebControls.ToolItem)">
            <summary>
            Determines whether a <see cref="T:ActiveUp.WebControls.ToolItem"/> is in the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.ToolItem"/> to locate in the collection. The element to locate can be a null reference.</param>
            <returns>true if value is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolItemCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of a specific <see cref="T:ActiveUp.WebControls.ToolItem"/> in the current instance.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.ToolItem"/> to locate in the current instance.</param>
            <returns>The index of value if found in the current instance; otherwise, -1.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolItemCollection.IndexOf(ActiveUp.WebControls.ToolItem)">
            <summary>
            Determines the index of a specific <see cref="T:ActiveUp.WebControls.ToolItem"/> in the current instance.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.ToolItem"/> to locate in the current instance.</param>
            <returns>The index of value if found in the current instance; otherwise, -1.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolItemCollection.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:ActiveUp.WebControls.ToolItem"/> at the specified index within the collection.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:ActiveUp.WebControls.ToolItem"/> to remove.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:ActiveUp.WebControls.ToolItem"/> at the specified index within the collection.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:ActiveUp.WebControls.ToolItem"/> to remove.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolItemCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolItemCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements from the current instance to the specified collection, starting at the specified index in the array.
            </summary>
            <param name="array">A one-dimensional, zero-based Array that is the destination of the elements copied from the current instance. </param>
            <param name="index">A Int32 that specifies the zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolItemCollection.FindByValue(System.String)">
            <summary>
            Finds the tool by value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolItemCollection.FindByText(System.String)">
            <summary>
            Finds the tool the by text.
            </summary>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolItemCollection.SaveViewState">
            <summary>
            When implemented by a class, saves the changes to a server control's view state to an
            <see cref="T:System.Object"/> .
            </summary>
            <returns>
            The <see langword="Object"/> that contains the view state changes.
            </returns>
        </member>
        <member name="T:ActiveUp.WebControls.ToolItemControlBuilder">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolItemControlBuilder"/>.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolItemControlBuilder.AllowWhitespaceLiterals">
            <summary>
            Determines whether the white space literals in the control must be processed or ignored.
            </summary>
            <returns>True if the white space literals in the control must be processed, otherwise, false.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolItemControlBuilder.HtmlDecodeLiterals">
            <summary>
            Determines whether the literal string of an HTML control must be HTML decoded.
            </summary>
            <returns>True if the HTML control literal string is to be decoded, otherwise, false.</returns>
        </member>
        <member name="T:ActiveUp.WebControls.ToolRadioButton">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolRadioButton"/>.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolRadioButton.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolRadioButton.GroupName">
            <summary>
            Gets or sets the name of the group that the radio button belongs to.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolRadioButton.UniqueGroupName">
            <summary>
            Gets an unique group name.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolRadioButton.ValueAttribute">
            <summary>
            Gets the value attribute.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolRadioButton.OnPreRender(System.EventArgs)">
            <summary>
            Notifies the Popup control to perform any necessary prerendering steps prior to saving view state and rendering content.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolRadioButton.RenderInputTag(System.Web.UI.HtmlTextWriter,System.String)">
            <summary>
            Write the input tag to be rendered on the client.
            </summary>
            <param name="output">Output stream that contains the HTML used to represent the control.</param>
            <param name="clientID">Id to identify the <see cref="T:ActiveUp.WebControls.ToolRadioButton"/>.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolRadioButton.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Processes post-back data from the control.
            <param name="postDataKey">The key identifier for the control.</param>
            <param name="postCollection">The collection of all incoming name values.</param>
            <returns>True if the state changes as a result of the post-back, otherwise it returns false.</returns>
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolRadioButton.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
            <summary>
            Notify the ASP.NET application that the state of the control has changed.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.ToolSpacer">
            <summary> 
            Represents a <see cref="T:ActiveUp.WebControls.ToolSpacer"/>.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolSpacer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolSpacer"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolSpacer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolSpacer"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolSpacer.RenderTool(System.Web.UI.HtmlTextWriter)">
            <summary>
            Render the tool to the specified HtmlTextWriter object. Usually a Page.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolSpacer.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends the Popup content to a provided HtmlTextWriter object, which writes the content to be rendered on the client.
            </summary>
            <param name="output">The HtmlTextWriter object that receives the server control content.</param>
        </member>
        <member name="P:ActiveUp.WebControls.ToolSpacer.ImageURL">
            <summary>
            Gets or sets the relative link to the image to use.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.ToolTextBox">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolTextBox"/> object.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ToolTextBox.EventTextChanged">
            <summary>
            Event occurs when the text value change.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolTextBox.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolTextBox.AutoPostBack">
            <summary>
            Gets or sets a value that indicates whether or not the control posts back to the server each time a user interacts with the control. 
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolTextBox.BackColor">
            <summary>
            Gets or sets the background color.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolTextBox.BorderColor">
            <summary>
            Gets or sets the border color.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolTextBox.BorderWidth">
            <summary>
            Gets or sets the border width.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolTextBox.BorderStyle">
            <summary>
            Gets or sets the border style.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolTextBox.Columns">
            <summary>
            Gets or sets the display width of the <see cref="T:ActiveUp.WebControls.ToolTextBox"/> in characters.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolTextBox.MaxLength">
            <summary>
            Gets or sets the maximum number of characters allowed in the <see cref="T:ActiveUp.WebControls.ToolTextBox"/>.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolTextBox.TextMode">
            <summary>
            Gets or sets the behavior mode (single-line, multiline, or password) of the <see cref="T:ActiveUp.WebControls.ToolTextBox"/>.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolTextBox.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the contents of the <see cref="T:ActiveUp.WebControls.ToolTextBox"/> control can be changed.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolTextBox.Rows">
            <summary>
            Gets or sets the number of rows displayed in a multiline text box.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolTextBox.Wrap">
            <summary>
            Gets or sets a value indicating whether the text content wraps within a multiline text box.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolTextBox.BorderColorRollOver">
            <summary>
            Gets or the the border color.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolTextBox.TagKey">
            <summary>
            Use the TagKey property to determine the System.Web.UI.HtmlTextWriterTag value that is associated with this <see cref="T:ActiveUp.WebControls.ToolTextBox"/>.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolTextBox.SaveTextViewState">
            <summary>
            Indicates if the Text property have to be saved in the ViewState.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolTextBox.OnPreRender(System.EventArgs)">
            <summary>
            Notifies the Popup control to perform any necessary prerendering steps prior to saving view state and rendering content.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolTextBox.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends the Popup content to a provided HtmlTextWriter object, which writes the content to be rendered on the client.
            </summary>
            <param name="output">The HtmlTextWriter object that receives the server control content.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolTextBox.AddParsedSubObject(System.Object)">
            <summary>
            Notifies the <see cref="T:ActiveUp.WebControls.ToolTextBox"/> that an element, either XML or HTML, was parsed, and adds the element to the server control's ControlCollection object.
            </summary>
            <param name="obj">An Object that represents the parsed element.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolTextBox.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Adds HTML attributes and styles that need to be rendered to the specified System.Web.UI.HtmlTextWriter.
            </summary>
            <param name="output">A System.Web.UI.HtmlTextWriter that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="E:ActiveUp.WebControls.ToolTextBox.TextChanged">
            <summary>
            Occurs when the content of the text box changes between posts to the server.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolTextBox.OnTextChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:ActiveUp.WebControls.ToolTextBox.TextChanged"/> event. This allows you to handle the event directly.
            </summary>
            <param name="e">A System.EventArgs that contains event information.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolTextBox.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Processes post-back data from the control.
            <param name="postDataKey">The key identifier for the control.</param>
            <param name="postCollection">The collection of all incoming name values.</param>
            <returns>True if the state changes as a result of the post-back, otherwise it returns false.</returns>
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolTextBox.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
            <summary>
            Notify the ASP.NET application that the state of the control has changed.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Icon">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.Icon"/> object.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.IconSet">
            <summary>
            The icons necessary to display the treeview.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.IconSet.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.IconSet.Expanded">
            <summary>
            Gets or sets the image path for the expanded element.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.IconSet.Collapsed">
            <summary>
            Gets or sets the image path for the collapsed element.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.IconSet.Connection">
            <summary>
            Gets or sets the image path for the connection element.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.IconSet.Default">
            <summary>
            Gets or sets the image path for the default element item.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.IconSet.Orphan">
            <summary>
            Gets or sets the image path for the orphan element.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.IconSet.Last">
            <summary>
            Gets or sets the image path for the last element.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Node">
            <summary>
            Represents a node in case of using xml file.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Node._key">
            <summary>
            Key of the node (must be unique).
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Node._parentKey">
            <summary>
            Key of the parent node, 0 indicate that it's root.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Node._label">
            <summary>
            Text displayed.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Node._link">
            <summary>
            Link of the node.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Node._target">
            <summary>
            Target of the link.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Node._expanded">
            <summary>
            Indicates if it must be expanded or not.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Node._selected">
            <summary>
            Indicates if the node is selected (checkbox)
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Node._icon">
            <summary>
            The icon of the node;
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Node.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Node.#ctor(System.String)">
            <summary>
            Create a node from the key.
            </summary>
            <param name="key">Unique key identifies the node.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Node.#ctor(System.String,System.String)">
            <summary>
            Create a node from the key and the label.
            </summary>
            <param name="key">Unique key identifies the node.</param>
            <param name="label">Text displayed.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Node.#ctor(System.String,System.String,System.String)">
            <summary>
            Create a node from the key, label and the link.
            </summary>
            <param name="key">Unique key identifies the node.</param>
            <param name="label">Text displayed.</param>
            <param name="link">Link of the node.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Node.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Create a node from the key, parent key, label and link.
            </summary>
            <param name="key">Uniqe key identifies the node.</param>
            <param name="parentKey">Parent key to identify the parent node.</param>
            <param name="label">Text displayed.</param>
            <param name="link">Link of the node.</param>
        </member>
        <member name="P:ActiveUp.WebControls.Node.Key">
            <summary>
            Gets or sets the unqiue key.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Node.ParentKey">
            <summary>
            Gets or sets the parent key to identify the parent node.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Node.Label">
            <summary>
            Gets or sets the label to display.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Node.Link">
            <summary>
            Gets or sets the link.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Node.Target">
            <summary>
            Gets or sets the target of the link. 
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Node.Expanded">
            <summary>
            Gets or sets if the node must be expanded or not. It has effect only if it has elements.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Node.Selected">
            <summary>
            Gets or sets if the node must be selected or not.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Node.Icon">
            <summary>
            Gets or sets the icons.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Nodes">
            <summary>
            A collection of nodes.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Nodes._nodes">
            <summary>
            List of nodes.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Nodes.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Nodes.NodesList">
            <summary>
            Gets or sets the list of nodes
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.TreeNode">
            <summary>
            Represents a node.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.TreeNode.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.TreeNode.GetNewID">
            <summary>
            Gets the new ID.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ActiveUp.WebControls.TreeNode.AccessKey">
            <summary>
            Gets or sets the access key (underlined letter) that allows you to quickly navigate to the Web server control.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeNode.BackColor">
            <summary>
            Gets or sets the background color of the Web server control.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeNode.BorderColor">
            <summary>
            Gets or sets the border color of the Web control.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeNode.BorderWidth">
            <summary>
            Gets or sets the border width of the Web server control.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeNode.BorderStyle">
            <summary>
            Gets or sets the border style of the Web server control.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeNode.CssClass">
            <summary>
            Gets or sets the Cascading Style Sheet (CSS) class rendered by the Web server control on the client.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeNode.Font">
            <summary>
            Gets the font properties associated with the Web server control.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeNode.ForeColor">
            <summary>
            Gets or sets the foreground color (typically the color of the text) of the Web server control.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeNode.Enabled">
            <summary>
            Gets or sets a value indicating whether the Web server control is enabled.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeNode.TabIndex">
            <summary>
            Gets or sets the tab index of the Web server control.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeNode.ToolTip">
            <summary>
            Gets or sets the text displayed when the mouse pointer hovers over the Web server control.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeNode.Height">
            <summary>
            Gets or sets the height of the Web server control.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeNode.Width">
            <summary>
            Gets or sets the width of the Web server control.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeNode.Visible">
            <summary>
            Gets or sets a value that indicates whether a server control is rendered as UI on the page.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeNode.EnableViewState">
            <summary>
            Gets or sets a value indicating whether the server control persists its view state, and the view state of any child controls it contains, to the requesting client.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeNode.ID">
            <summary>
            Gets or sets the programmatic identifier assigned to the server control.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeNode.Selected">
            <summary>
            Gets or sets the selected state.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeNode.Expanded">
            <summary>
            Gets or sets the expanded state of the node.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeNode.Icon">
            <summary>
            Gets or sets the displayed icon for the node.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeNode.BaseTree">
            <summary>
            Gets or sets the base tree.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeNode.ParentNode">
            <summary>
            Gets or sets the parent node.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeNode.NodeStyle">
            <summary>
            Gets or sets the style of the current node.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeNode.Nodes">
            <summary>
            Gets the collection of child nodes.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeNode.Text">
            <summary>
            Gets or sets the displayed text.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeNode.Link">
            <summary>
            Gets or sets the link of the current node.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeNode.Target">
            <summary>
            Gets or sets the target frame of the link.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeNode.Key">
            <summary>
            Gets or sets the unique key identifies the node.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeNode.ParentKey">
            <summary>
            Gets or sets the parent key to identify the parent node.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.TreeNode.AddNode(ActiveUp.WebControls.TreeNode)">
            <summary>
            Add a node in the treeview specifying the node.
            </summary>
            <param name="treeNode">The node to add.</param>
            <returns>The node added.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.TreeNode.AddNode(System.String,System.String)">
            <summary>
            Add a node in the treeview specifying the text and the link.
            </summary>
            <param name="text">Displayed text.</param>
            <param name="link">Link of the node.</param>
            <returns>The node added.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.TreeNode.AddNode(System.String,System.String,System.String)">
            <summary>
            Add a node in the treeview specifying the key, text and link.
            </summary>
            <param name="uniqueKey">Key of the node (must be unique for each node).</param>
            <param name="text">Displayed text.</param>
            <param name="link">Link of the node.</param>
            <returns>The node added.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.TreeNode.AddNode(System.String,System.String,System.String,System.String)">
            <summary>
            Add a node in the treeview specifying the key, text, link and target.
            </summary>
            <param name="uniqueKey">Key of the node (must be unique for each node).</param>
            <param name="text">Displayed text.</param>
            <param name="link">Link of the node.</param>
            <param name="target">Target frame of the link.</param>
            <returns>The node added.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.TreeNode.AddNode(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Add a node in the treeview specifying the key, text, link, target and expanded.
            </summary>
            <param name="uniqueKey">Key of the node (must be unique for each node).</param>
            <param name="text">Displayed text.</param>
            <param name="link">Link of the node.</param>
            <param name="target">Target frame of the link.</param>
            <param name="expanded">Indicates if the node must be expanded.</param>
            <returns>The node added.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.TreeNode.AddNode(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Add a node in the treeview specifying the key, text, link, target and expanded.
            </summary>
            <param name="uniqueKey">Key of the node (must be unique for each node).</param>
            <param name="text">Displayed text.</param>
            <param name="link">Link of the node.</param>
            <param name="target">Target frame of the link.</param>
            <param name="expanded">Indicates if the node must be expanded.</param>
            <param name="selected">Selection of the node.</param>
            <returns>The node added.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.TreeNode.AddNode(System.String,System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Add a node in the treeview specifying the key, text, link, target, expanded and the icon.
            </summary>
            <param name="uniqueKey">Key of the node (must be unique for each node).</param>
            <param name="text">Displayed text.</param>
            <param name="link">Link of the node.</param>
            <param name="target">Target frame of the link.</param>
            <param name="expanded">Indicates if the node must be expanded.</param>
            <param name="icon">Icons of the node.</param>
            <returns>The node added.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.TreeNode.AddNode(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Boolean)">
            <summary>
            Add a node in the treeview specifying the key, text, link, target, expanded and the icon.
            </summary>
            <param name="uniqueKey">Key of the node (must be unique for each node).</param>
            <param name="text">Displayed text.</param>
            <param name="link">Link of the node.</param>
            <param name="target">Target frame of the link.</param>
            <param name="expanded">Indicates if the node must be expanded.</param>
            <param name="icon">Icons of the node.</param>
            <param name="selected">Selection of the node.</param>
            <returns>The node added.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.TreeNode.AddNode(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Web.UI.WebControls.Style)">
            <summary>
            Add a node in the treeview specifying the key, text, link, target, expanded, icon and the node style.
            </summary>
            <param name="uniqueKey">Key of the node (must be unique for each node).</param>
            <param name="text">Displayed text.</param>
            <param name="link">Link of the node.</param>
            <param name="target">Target frame of the link.</param>
            <param name="expanded">Indicates if the node must be expanded.</param>
            <param name="icon">Icons of the node.</param>
            <param name="nodeStyle">Style of the node.</param>
            <returns>The node added.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.TreeNode.FindNode(System.String)">
            <summary>
            Find a node.
            </summary>
            <param name="key">The unique key identifies the node.</param>
            <returns>The treenode found, otherwise null.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.TreeNode.FindNodeById(System.String)">
            <summary>
            Finds node the node by id.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="P:ActiveUp.WebControls.TreeNode.SelectedNodes">
            <summary>
            Gets the collection of node of selected node.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.TreeNode.OnPreRender(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary>
            <param name="e">Event Args</param>
        </member>
        <member name="M:ActiveUp.WebControls.TreeNode.Render(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Render this control to the output parameter specified.
            </summary>
            <param name="output"> The HTML writer to write out to </param>
        </member>
        <member name="M:ActiveUp.WebControls.TreeNode.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            A LoadPostData method.
            </summary>
            <param name="postDataKey">PostDataKey.</param>
            <param name="postCollection">postCollection.</param>
            <returns>bool</returns>
        </member>
        <member name="M:ActiveUp.WebControls.TreeNode.RaisePostDataChangedEvent">
            <summary>
            A RaisePostDataChangedEvent.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.TreeNode.RaisePostBackEvent(System.String)">
            <summary>
            A RaisePostBackEvent.
            </summary>
            <param name="eventArgument">eventArgument</param>
        </member>
        <member name="E:ActiveUp.WebControls.TreeNode.StateChanged">
            <summary>
            The StateChanged event handler.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.TreeNode.OnStateChanged(System.EventArgs)">
            <summary>
            A OnStateChanged event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:ActiveUp.WebControls.TreeNode.SelectionChanged">
            <summary>
            The StateChanged event handler.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.TreeNode.OnSelectionChanged(System.EventArgs)">
            <summary>
            A OnStateChanged event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:ActiveUp.WebControls.TreeNode.Click">
            <summary>
            The Click event handler. Fire when you click on a node.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.TreeNode.OnClick(System.EventArgs)">
            <summary>
            A OnClick event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:ActiveUp.WebControls.TreeNodeCollection">
            <summary>
            Represents a collection of nodes.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.TreeNodeCollection.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.TreeNodeCollection.Add(ActiveUp.WebControls.TreeNode)">
            <summary>
            Add a node in the collection specifying  the node.
            </summary>
            <param name="treeNode">Node to add.</param>
        </member>
        <member name="M:ActiveUp.WebControls.TreeNodeCollection.Add(System.String,System.String,System.String,System.String)">
            <summary>
            Add a node in the collection specifying the text, link, target and the unique key.
            </summary>
            <param name="text">Text displayed.</param>
            <param name="link">Link of the node.</param>
            <param name="target">Target of the link.</param>
            <param name="key">Unique key of the node.</param>
        </member>
        <member name="M:ActiveUp.WebControls.TreeNodeCollection.Remove(System.Int32)">
            <summary>
            Remove a node at the specified index position.
            </summary>
            <param name="index">Index of the node to delete.</param>
        </member>
        <member name="M:ActiveUp.WebControls.TreeNodeCollection.Remove(System.String)">
            <summary>
            Remove a node whith the specified key.
            </summary>
            <param name="key">Unique key identify the node.</param>
        </member>
        <member name="P:ActiveUp.WebControls.TreeNodeCollection.Item(System.Int32)">
            <summary>
            Get a node at the specified index.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.TreeNodeCollection.Contains(System.String)">
            <summary>
            Indicates if the collection contains a node with the specified key.
            </summary>
            <param name="key">Key to find.</param>
            <returns>True if the collection contains the node with the specified key, otherwise, false.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.TreeNodeCollection.op_Addition(ActiveUp.WebControls.TreeNodeCollection,ActiveUp.WebControls.TreeNodeCollection)">
            <summary>
            Allows the developer to add a collection of Nodes objects in another one.
            </summary>
            <param name="first">The first collection.</param>
            <param name="second">The second collection.</param>
            <returns>The concacened collection.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.TreeNodeCollection.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Render the collection.
            </summary>
            <param name="output">Write to the output.</param>
        </member>
        <member name="T:ActiveUp.WebControls.DataSourceOrder">
            <summary>
            Sourcer order field.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.DataSourceOrder.Ascending">
            <summary>
            Ascending order.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.DataSourceOrder.Descending">
            <summary>
            Descending order.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.SelectionType">
            <summary>
            Selection type enumeration.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.SelectionType.None">
            <summary>
            None selection
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.SelectionType.CheckBox">
            <summary>
            Checkbox selection.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.SelectionType.Single">
            <summary>
            Single selection.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.TreeView">
            <summary>
            Represents the TreeView control.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.TreeView._useCounter">
            <summary>
            Used for the license counter.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.TreeView.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeView.DataSource">
            <summary>
            Gets or sets the main data source of the body template.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.TreeView.DataBind">
            <summary>
            Binds a data source the treeview.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.TreeView.AddNodes(System.String)">
            <summary>
            Add a new child node.
            </summary>
            <param name="parent">Parent key to identify the parent node.</param>
        </member>
        <member name="P:ActiveUp.WebControls.TreeView.Font">
            <summary>
            Gets the font properties associated with the tree view.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeView.TextMode">
            <summary>
            Gets or sets the text mode. If true, the treeview is displayed as text, otherwise it's displayed as html.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeView.SelectionType">
            <summary>
            Gets or sets the selection type.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeView.Icons">
            <summary>
            Gets or sets the icons necessary to display the treeview.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeView.DataText">
            <summary>
            Gets or sets the field of the data source that provides the text content of the list items.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeView.DataValue">
            <summary>
            Gets or sets the field of the data source that provides the value of each list item.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeView.DataLink">
            <summary>
            Gets or sets the field of the data source that provides the value of each link item.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeView.DataTarget">
            <summary>
            Gets or sets the field of the data source that provides the value of each target item.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeView.DataIcon">
            <summary>
            Gets or sets the field of the data source that provides the value of each target item.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeView.DataExpanded">
            <summary>
            Gets or sets the field of the data source that provides if the item must be expanded.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeView.DataSelected">
            <summary>
            Gets or sets the data source that provides if the item must be selected
            </summary>
            <value>The data selected.</value>
        </member>
        <member name="P:ActiveUp.WebControls.TreeView.DataParent">
            <summary>
            Gets or sets the field of data parent.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeView.SortColumn">
            <summary>
            Gets or sets the field for sorting nodes.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeView.SortOrder">
            <summary>
            Gets or sets the field for sort order.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeView.LinkFormat">
            <summary>
            Gets or sets the format of the link.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeView.ScriptDirectory">
            <summary>
            Gets or sets the relative or absolute path to the directory where the API javascript file is.
            </summary>
            <remarks>If the value of this property is string.Empty, the external file script is not used and the API is rendered in the page together with the control render.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.TreeView.DisplayMasterNode">
            <summary>
            Gets or sets the value indicates if the master node must be displayed or not.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeView.ExternalScript">
            <summary>
            Gets or sets the filename of the external script file.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.TreeView.GetResource(System.String)">
            <summary>
            Get the specified resource from the assembly.
            </summary>
            <param name="resource">The name of the resource.</param>
            <returns>The string representation of the resource.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.TreeView.OnPreRender(System.EventArgs)">
            <summary>
            Raises the PreRender event.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.TreeView.RegisterAPIScriptBlock(System.Web.UI.Page)">
            <summary>
            Registers the API script block.
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="M:ActiveUp.WebControls.TreeView.Render(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Render this control to the output parameter specified.
            </summary>
            <param name="output"> The HTML writer to write out to </param>
        </member>
        <member name="M:ActiveUp.WebControls.TreeView.LoadFromXml(System.String)">
            <summary>
            Load a treeview structure from a xml file.
            </summary>
            <param name="fileName">File path of the xml file.</param>
        </member>
        <member name="P:ActiveUp.WebControls.TreeView.NodesStyleSelected">
            <summary>
            Gets or sets the nodes style selected.
            </summary>
            <value>The nodes style selected.</value>
        </member>
        <member name="P:ActiveUp.WebControls.TreeView.UseSameClickEvent">
            <summary>
            Gets or sets a value indicating whether use same click event.
            </summary>
            <value><c>true</c> if use same click event; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.TreeView.AutoCheckChildren">
            <summary>
            Gets or sets the value indicating if you want to auto check/uncheck children when this node checked/unchecked.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeView.SelectedGrayed">
            <summary>
            Gets or sets the value indicating if you want to gray parent node when not all children are checked.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeView.PanelWidth">
            <summary>
            Gets or sets the panel width.
            </summary>
            <value>The panel width.</value>
        </member>
        <member name="P:ActiveUp.WebControls.TreeView.PanelHeight">
            <summary>
            Gets or sets the panel height.
            </summary>
            <value>The panel height.</value>
        </member>
        <member name="P:ActiveUp.WebControls.TreeView.LoadOnDemand">
            <summary>
            Gets or sets the value indicating if you want to gray parent node when not all children are checked.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TreeView.Path">
            <summary>
            Gets or sets the path indicates where the LoadOnDemand.aspx event handler is located.
            </summary>
            <value>The path.</value>
        </member>
        <member name="M:ActiveUp.WebControls.TreeView.RenderNodesOnDemand(ActiveUp.WebControls.TreeNode,System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the nodes on demand.
            </summary>
            <param name="parent">The node parent.</param>
            <param name="output">The output.</param>
        </member>
        <member name="T:ActiveUp.WebControls.TreeViewConverter">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.TreeViewConverter"/> object.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.UploadApplet">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.UploadApplet"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.UploadApplet.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends server control content to a provided HtmlTextWriter object, which writes the content to be rendered on the client.
            </summary>
            <param name="output">The HtmlTextWriter object that receives the server control content.</param>
        </member>
        <member name="M:ActiveUp.WebControls.UploadApplet.GetCode(System.String,System.Drawing.Color,System.Boolean,System.Boolean)">
            <summary>
            Gets the code.
            </summary>
            <param name="name">The name.</param>
            <param name="content">The content.</param>
            <param name="notEmpty">if set to <c>true</c> not an empty code.</param>
            <param name="param">if set to <c>true</c> use parameter.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.UploadApplet.GetCode(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Gets the code.
            </summary>
            <param name="name">The name.</param>
            <param name="content">The content.</param>
            <param name="notEmpty">if set to <c>true</c> not empty.</param>
            <param name="param">if set to <c>true</c> use parameter.</param>
            <returns></returns>
        </member>
        <member name="P:ActiveUp.WebControls.UploadApplet.License">
            <summary>
            Gets or sets the license key.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.UploadApplet.LabelButtonAdd">
            <summary>
            Gets or sets the label of the Add button.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.UploadApplet.LabelButtonRemove">
            <summary>
            Gets or sets the label of the Remove button.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.UploadApplet.LabelButtonUpload">
            <summary>
            Gets or sets the label of the Upload button.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.UploadApplet.LabelButtonCancel">
            <summary>
            Gets or sets the label of the Cancel button.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.UploadApplet.LabelTimeRemained">
            <summary>
            Gets or sets the label of the Time Remained indication.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.UploadApplet.TableHeaderFilename">
            <summary>
            Gets or sets the label of the table header Filename.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.UploadApplet.TableHeaderSize">
            <summary>
            Gets or sets the label of the table header Size.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.UploadApplet.TableHeaderModified">
            <summary>
            Gets or sets the label of the table header Modified.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.UploadApplet.Width">
            <summary>
            Gets or sets the width in pixels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.UploadApplet.Height">
            <summary>
            Gets or sets the width in pixels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.UploadApplet.BackColor">
            <summary>
            Gets or sets the background color.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.UploadApplet.ColorButtonAdd">
            <summary>
            Gets or sets the background color of the add button.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.UploadApplet.ColorButtonRemove">
            <summary>
            Gets or sets the background color of the remove button.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.UploadApplet.ColorButtonUpload">
            <summary>
            Gets or sets the background color of the remove button.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.UploadApplet.ColorButtonCancel">
            <summary>
            Gets or sets the background color of the cancel button.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.UploadApplet.MaxFileNumber">
            <summary>
            Gets or sets the maximum number of file to be uploaded.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.UploadApplet.MaxFileSize">
            <summary>
            Gets or sets the maximum file size allowed in bytes.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.UploadApplet.MaxUploadSize">
            <summary>
            Gets or sets the maximum total size in bytes allowed for the uploaded files.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.UploadApplet.ImagePreviewEnabled">
            <summary>
            Gets or sets the value indicating if we want to enable image preview.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.UploadApplet.ImagePreviewWidth">
            <summary>
            Gets or sets the value indicating the width of the preview thumbnail.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.UploadApplet.ImagePreviewHeight">
            <summary>
            Gets or sets the value indicating the height of the preview thumbnail.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.UploadApplet.ShowThumbnailColumn">
            <summary>
            Gets or sets the value indicating if we want to make thumbnail column visible.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.UploadApplet.ThumbnailColumnMaxHeight">
            <summary>
            Gets or sets the value indicating the maximum height of the thumbnail column.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.UploadApplet.ThumbnailColumnMaxWidth">
            <summary>
            Gets or sets the value indicating the maximum width of the thumbnail column.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.UploadApplet.ThumbnailColumnContraintProportions">
            <summary>
            Gets or sets the value indicating if we want set constraints in thumbnail column proportions.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.UploadApplet.ProxyHost">
            <summary>
            Gets or sets the proxy host.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.UploadApplet.ProxyPort">
            <summary>
            Gets or sets the proxy port number.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.UploadApplet.ScriptURL">
            <summary>
            Gets or sets the URL of the upload script.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.UploadApplet.DefaultDirectory">
            <summary>
            Gets or sets the default directory where to pick files client-side.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.UploadApplet.RedirectURL">
            <summary>
            Gets or sets the URL of the page where to be redirected after the upload.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.UploadApplet.RedirectTarget">
            <summary>
            Gets or sets the target frame where to redirect after the upload.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.UploadApplet.AppletLocation">
            <summary>
            Gets or sets the location of the upload applet.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.UploadApplet.UploadSelectionMode">
            <summary>
            Gets or sets the files selection mode.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.UploadApplet.ScriptURLType">
            <summary>
            Gets or sets the script URL type.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.UploadApplet.Headers">
            <summary>
            Gets or sets the headers.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.UploadApplet.FileFilters">
            <summary>
            Gets or sets the file filters.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.UploadAppletControlDesigner">
            <summary>
            This class is used to render the pager at design time.
            </summary>
            <remarks>You should not use this class in your project.</remarks>
        </member>
        <member name="M:ActiveUp.WebControls.UploadAppletControlDesigner.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.UploadAppletControlDesigner.GetDesignTimeHtml">
            <summary>
            Gets the design time HTML code.
            </summary>
            <returns>A string containing the HTML to render.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.UploadAppletControlDesigner.GetEmptyDesignTimeHtml">
            <summary>
            Gets the design time HTML code when empty (never used in ActivePager).
            </summary>
            <returns>A string containing the HTML to render.</returns>
        </member>
        <member name="T:ActiveUp.WebControls.UploadSelectionMode">
            <summary>
            Upload selection mode enumeration.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.UploadSelectionMode.FilesOnly">
            <summary>
            Files only.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.UploadSelectionMode.DirectoriesOnly">
            <summary>
            Directories only.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.UploadSelectionMode.FilesAndDirectories">
            <summary>
            Files and directories.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.ScriptURLType">
            <summary>
            Script url type.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ScriptURLType.Absolute">
            <summary>
            Absolute script url.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ScriptURLType.Relative">
            <summary>
            Relative script url.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Common.CoreWebControl.ImagesDirectory">
            <summary>
            Gets or sets the relative or absolute path to the external Html TextBox API javascript file.
            </summary>
            <remarks>If the value of this property is string.Empty, the external file script is not used and the API is rendered in the page together with the Html TextBox render.</remarks>
        </member>
        <member name="T:ActiveUp.WebControls.Common.Interface.IControl">
            <summary>
            This interface to be implemented by the <see cref="T:System.Web.UI.WebControls.WebControl"/> to expose
            its viewstate methods for the purpose of unit testing.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Common.License">
            <summary>
            Allow to read and write the license file.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Common.License._licenseInfo">
            <summary>
            Informations about the license.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Common.License._licenseFileName">
            <summary>
            License filename.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Common.License._extention">
            <summary>
            Extention of the license filename.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Common.License._globalAssemblyKeyName">
            <summary>
            Name of the key in the registry (GAC)
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Common.License._encryptionKey">
            <summary>
            Encryption key to crypt and decrypt data.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Common.License.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Common.License.#ctor(System.String)">
            <summary>
            Create a <see cref="T:ActiveUp.WebControls.Common.License"/> object from the global assembly key name.
            </summary>
            <param name="globalAssemblyKeyName">Name of the key in the registry.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Common.License.#ctor(ActiveUp.WebControls.Common.LicenseInformation)">
            <summary>
            Create a <see cref="T:ActiveUp.WebControls.Common.License"/> object from the <see cref="T:ActiveUp.WebControls.Common.LicenseInformation"/> object.
            </summary>
            <param name="licenseInfo">Information about the license.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Common.License.#ctor(ActiveUp.WebControls.Common.LicenseInformation,System.String)">
            <summary>
            Create a <see cref="T:ActiveUp.WebControls.Common.License"/> object from the <see cref="T:ActiveUp.WebControls.Common.LicenseInformation"/> object and the global assembly key name.
            </summary>
            <param name="licenseInfo">Information about the license.</param>
            <param name="globalAssemblyKeyName">Name of the key in the registry.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Common.License._Init(ActiveUp.WebControls.Common.LicenseInformation,System.String)">
            <summary>
            Initialize the <see cref="T:ActiveUp.WebControls.Common.License"/>.
            </summary>
            <param name="licenseInfo">Information about the license.</param>
            <param name="globalAssemblyKeyName">Name of the key in the registry.</param>
        </member>
        <member name="P:ActiveUp.WebControls.Common.License.LicenseInfo">
            <summary>
            Gets or sets the license informations
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Common.License.GlobalAssemblyKeyName">
            <summary>
            Gets or sets the global assembly key name.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Common.License.LicenseFileName">
            <summary>
            Gets the license file name.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Common.License.Extention">
            <summary>
            Gets the extention of the license filename.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Common.License.Read(ActiveUp.WebControls.ProductCode,System.Int32,System.String)">
            <summary>
            Read the license file.
            </summary>
            <param name="productCode">Product code.</param>
            <param name="majorVersion">Major version.</param>
            <param name="licenseKey">The license key.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Common.License._Read(ActiveUp.WebControls.ProductCode,System.Int32,System.String)">
            <summary>
            Read the license file.
            </summary>
            <param name="productCode">Product code.</param>
            <param name="majorVersion">Major version.</param>
            <param name="licenseKey">The license key.</param>
            <returns>
            	<see cref="T:ActiveUp.WebControls.Common.LicenseInformation"/> object contains the license information.
            </returns>
        </member>
        <member name="M:ActiveUp.WebControls.Common.License.Write">
            <summary>
            Write the license file.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Common.License.Write(System.String)">
            <summary>
            Write the license file in a specified directory.
            </summary>
            <param name="path">Path where the license file must be written.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Common.License._Write(ActiveUp.WebControls.Common.LicenseInformation,System.String)">
            <summary>
            Write the license.
            </summary>
            <param name="licenseInfo"><see cref="T:ActiveUp.WebControls.Common.LicenseInformation"/> object contains the license information.</param>
            <param name="path">Path where the license file must be written.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Common.License.CheckLicense(ActiveUp.WebControls.ProductCode,System.Int32,System.String)">
            <summary>
            Check if the license is valid or not.
            </summary>
            <param name="productCode">Product code.</param>
            <param name="majorVersion">Major version.</param>
            <param name="license">The license.</param>
            <returns></returns>
        </member>
        <member name="T:ActiveUp.WebControls.Common.LicenseInformation">
            <summary>
            Contains informations about license.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Common.LicenseInformation._company">
            <summary>
            Company.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Common.LicenseInformation._product">
            <summary>
            Product code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Common.LicenseInformation._expireDate">
            <summary>
            Expire date.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Common.LicenseInformation._landmark">
            <summary>
            Landmark.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Common.LicenseInformation._separator">
            <summary>
            Separator of each element.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Common.LicenseInformation.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Common.LicenseInformation.#ctor(System.String,ActiveUp.WebControls.LicenseProduct,System.DateTime)">
            <summary>
            Create a <see cref="T:ActiveUp.WebControls.Common.LicenseInformation"/> object from the company, product code and the expire date.
            </summary>
            <param name="company">Company.</param>
            <param name="product">Product.</param>
            <param name="expireDate">Expire date.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Common.LicenseInformation.#ctor(System.String,ActiveUp.WebControls.LicenseProduct,System.DateTime,System.String)">
            <summary>
            Create a <see cref="T:ActiveUp.WebControls.Common.LicenseInformation"/> object from the company, product code, expire date and landmark.
            </summary>
            <param name="company">Company.</param>
            <param name="product">Product.</param>
            <param name="expireDate">Expire date.</param>
            <param name="landmark">Landmark.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Common.LicenseInformation._Init(System.String,ActiveUp.WebControls.LicenseProduct,System.DateTime,System.String)">
            <summary>
            Initialize the <see cref="T:ActiveUp.WebControls.Common.LicenseInformation"/>.
            </summary>
            <param name="company">Company.</param>
            <param name="product">Product.</param>
            <param name="expireDate">Expire date.</param>
            <param name="landmark">Landmark.</param>
        </member>
        <member name="P:ActiveUp.WebControls.Common.LicenseInformation.Company">
            <summary>
            Gets or sets the company.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Common.LicenseInformation.Product">
            <summary>
            Gets or sets the product code.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Common.LicenseInformation.ExpireDate">
            <summary>
            Gets or sets the expire date.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Common.LicenseInformation.Landmark">
            <summary>
            Gets or sets the landmark.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Common.LicenseInformation.op_Implicit(System.String)~ActiveUp.WebControls.Common.LicenseInformation">
            <summary>
            Convert a string to this representation in a <see cref="T:ActiveUp.WebControls.Common.LicenseInformation"/> object.
            </summary>
            <param name="licenseInfo">String contains the license informations.</param>
            <returns><see cref="T:ActiveUp.WebControls.Common.LicenseInformation"/> object.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.Common.LicenseInformation.op_Implicit(ActiveUp.WebControls.Common.LicenseInformation)~System.String">
            <summary>
            Convert a <see cref="T:ActiveUp.WebControls.Common.LicenseInformation"/> object to this representation in string.
            </summary>
            <param name="licenseInfo"><see cref="T:ActiveUp.WebControls.Common.LicenseInformation"/> object contains the license information.</param>
            <returns>String representation of a <see cref="T:ActiveUp.WebControls.Common.LicenseInformation"/> object.</returns>
        </member>
        <member name="T:ActiveUp.WebControls.Common.LicenseProductCollection">
            <summary>
            A collection of LicenseProduct.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Common.LicenseProductCollection.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Common.LicenseProductCollection.Add(ActiveUp.WebControls.LicenseProduct)">
            <summary>
            Adds a LicenseProduct object in the collection.
            </summary>
            <param name="product">The LicenseProduct object</param>
        </member>
        <member name="M:ActiveUp.WebControls.Common.LicenseProductCollection.Remove(System.Int32)">
            <summary>
            Removes the LicenseProduct at the specified index position.
            </summary>
            <param name="index"></param>
        </member>
        <member name="P:ActiveUp.WebControls.Common.LicenseProductCollection.Item(System.Int32)">
            <summary>
            Returns the LicenseProduct at the specified index position.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Common.LicenseStatus">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.Common.LicenseStatus"/> object.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Common.StaticContainer">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.Common.StaticContainer"/> object.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Cryptography">
            <summary>
            Encryption and decryption of data.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Cryptography.Encrypt(System.String)">
            <summary>
            Crypts a string.
            </summary>
            <param name="pToEncrypt">String to crypt.</param>
            <returns>Crypted string.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.Cryptography.Encrypt(System.String,System.String)">
            <summary>
            Crypts a string.
            </summary>
            <param name="pToEncrypt">String to crypt.</param>
            <param name="sKey">Key used in the encryption.</param>
            <returns>Crypted string.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.Cryptography.Decrypt(System.String)">
            <summary>
            Decrypts a string.
            </summary>
            <param name="pToDecrypt">String to decrypt.</param>
            <returns>Decrypted string.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.Cryptography.Decrypt(System.String,System.String)">
            <summary>
            Decrypts a string.
            </summary>
            <param name="pToDecrypt">String to decrypt.</param>
            <param name="sKey">Key used in the decryption.</param>
            <returns>Decrypted string.</returns>
        </member>
        <member name="T:ActiveUp.WebControls.ExtendedWebControl">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ExtendedWebControl"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ExtendedWebControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ExtendedWebControl"/> class.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ExtendedWebControl._useCounter">
            <summary>
            Used for the license counter.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ExtendedWebControl.ClientSideEnabled">
            <summary>
            Gets or sets a value indicating whether client side is enabled.
            </summary>
            <value><c>true</c> if the client side is enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ExtendedWebControl.ResourceName">
            <summary>
            Gets or sets the resource name.
            </summary>
            <value>The resource name.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ExtendedWebControl.ScriptKey">
            <summary>
            Gets or sets the script key.
            </summary>
            <value>The script key.</value>
        </member>
        <member name="M:ActiveUp.WebControls.ExtendedWebControl.RegisterClientSideScriptBlock(System.Web.UI.Page)">
            <summary>
            Register the Client-Side script block in the ASPX page.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ExtendedWebControl.OnPreRender(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.PreRender"/>
            event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="P:ActiveUp.WebControls.ExtendedWebControl.RenderType">
            <summary>
            Gets or sets the value indicating if the client side script is disabled or not.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ExtendedWebControl.IsUpLevel">
            <summary>
            Determine if we need to register the client side script and render the calendar, selectors with validation or selectors only.
            </summary>
            <returns>0 if scripting not allowed, 1 if not an uplevel browser but scripting allowed, 2 if all is OK.</returns>
        </member>
        <member name="P:ActiveUp.WebControls.ExtendedWebControl.ExternalScript">
            <summary>
            Gets or sets the relative or absolute path to the icons directory.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ExtendedWebControl.IconsDirectory">
            <summary>
            Gets or sets the relative or absolute path to the external Html TextBox API javascript file.
            </summary>
            <remarks>If the value of this property is string.Empty, the external file script is not used and the API is rendered in the page together with the Html TextBox render.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.ExtendedWebControl.ScriptDirectory">
            <summary>
            Gets or sets the relative or absolute path to the directory where input API javascript file is.
            </summary>
            <remarks>If the value of this property is string.Empty, the external file script is not used and the API is rendered in the page together with the input render.</remarks>
        </member>
        <member name="T:ActiveUp.WebControls.InvalidLicenseException">
            <summary>
            Represents an invalid license file.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.InvalidLicenseException._message">
            <summary>
            The message exception.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.InvalidLicenseException.#ctor(System.String)">
            <summary>
            Constructor, sets message to the specified value.
            </summary>
            <param name="message">The exception's message.</param>
        </member>
        <member name="P:ActiveUp.WebControls.InvalidLicenseException.Message">
            <summary>
            The exception's message.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.LabelValueCollection">
            <summary>
            A Collection of <see cref="T:ActiveUp.WebControls.DateCollectionItem"/>.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LabelValueCollection._labelValueCollection">
            <summary>
            A collection of DateCollectionItem.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.LabelValueCollection.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.LabelValueCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets a <see cref="T:ActiveUp.WebControls.LabelValueCollectionItem"/> at the specified index.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.LabelValueCollection.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.LabelValueCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.LabelValueCollection.IsFixedSize">
            <summary>
            Gets a boolean value indicating whether the current instance has a fixed size.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.LabelValueCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the current instance is read-only.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.LabelValueCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.LabelValueCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements from the current instance to the specified collection, starting at the specified index in the array.
            </summary>
            <param name="array">A one-dimensional, zero-based Array that is the destination of the elements copied from the current instance. </param>
            <param name="index">A Int32 that specifies the zero-based index in array at which copying begins.</param>
        </member>
        <member name="P:ActiveUp.WebControls.LabelValueCollection.Item(System.Int32)">
            <summary>
            Gets or sets a <see cref="T:ActiveUp.WebControls.DateCollectionItem"/> at the specified index.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.LabelValueCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific <see cref="T:ActiveUp.WebControls.DateCollectionItem"/> from the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.DateCollectionItem"/> to remove from the collection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.LabelValueCollection.Remove(ActiveUp.WebControls.LabelValueCollectionItem)">
            <summary>
            Removes a <see cref="T:ActiveUp.WebControls.DateCollectionItem"/> from the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.DateCollectionItem"/> to remove from the collection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.LabelValueCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts a <see cref="T:ActiveUp.WebControls.LabelValueCollectionItem"/> to the collection at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="item">The <see cref="T:ActiveUp.WebControls.LabelValueCollectionItem"/> to insert into the Collection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.LabelValueCollection.Insert(System.Int32,ActiveUp.WebControls.DateCollectionItem)">
            <summary>
            Inserts a <see cref="T:ActiveUp.WebControls.LabelValueCollectionItem"/> to the collection at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="item">The <see cref="T:ActiveUp.WebControls.LabelValueCollectionItem"/> to insert into the Collection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.LabelValueCollection.Add(System.Object)">
            <summary>
            Adds a <see cref="T:ActiveUp.WebControls.DateCollectionItem"/> to the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.DateCollectionItem"/> to add to the collection.</param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.LabelValueCollection.Add(System.String,System.String)">
            <summary>
            Adds a <see cref="T:ActiveUp.WebControls.DateCollectionItem"/> to the collection.
            </summary>
            <param name="label">The label.</param>
            <param name="svalue">The svalue.</param>
            <returns>
            The position into which the new element was inserted.
            </returns>
        </member>
        <member name="M:ActiveUp.WebControls.LabelValueCollection.Add(ActiveUp.WebControls.DateCollectionItem)">
            <summary>
            Adds a <see cref="T:ActiveUp.WebControls.LabelValueCollectionItem"/> to the collection
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.LabelValueCollectionItem"/> to add to the collection.</param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.LabelValueCollection.Clear">
            <summary>
            Removes all <see cref="T:ActiveUp.WebControls.DateCollectionItem"/> from the collection.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.LabelValueCollection.Contains(System.Object)">
            <summary>
            Determines whether a <see cref="T:ActiveUp.WebControls.LabelValueCollectionItem"/> is in the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.LabelValueCollectionItem"/> to locate in the collection. The element to locate can be a null reference.</param>
            <returns>true if value is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.LabelValueCollection.Contains(ActiveUp.WebControls.LabelValueCollectionItem)">
            <summary>
            Determines whether a <see cref="T:ActiveUp.WebControls.LabelValueCollectionItem"/> is in the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.LabelValueCollectionItem"/> to locate in the collection. The element to locate can be a null reference.</param>
            <returns>true if value is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.LabelValueCollection.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific <see cref="T:ActiveUp.WebControls.LabelValueCollectionItem"/> in the current instance.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.LabelValueCollectionItem"/> to locate in the current instance.</param>
            <returns>The index of value if found in the current instance; otherwise, -1.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.LabelValueCollection.IndexOf(ActiveUp.WebControls.DateCollectionItem)">
            <summary>
            Determines the index of a specific <see cref="T:ActiveUp.WebControls.LabelValueCollectionItem"/> in the current instance.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.LabelValueCollectionItem"/> to locate in the current instance.</param>
            <returns>The index of value if found in the current instance; otherwise, -1.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.LabelValueCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:ActiveUp.WebControls.LabelValueCollectionItem"/> at the specified index within the collection.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:ActiveUp.WebControls.LabelValueCollectionItem"/> to remove.</param>
        </member>
        <member name="M:ActiveUp.WebControls.LabelValueCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:ActiveUp.WebControls.LabelValueCollectionItem">
            <summary>
            Represents an item used with <see cref="T:ActiveUp.WebControls.LabelValueCollection"/>.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LabelValueCollectionItem._label">
            <summary>
            The Date used as item.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LabelValueCollectionItem._value">
            <summary>
            The Date used as item.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.LabelValueCollectionItem.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.LabelValueCollectionItem.#ctor(System.String,System.String)">
            <summary>
            Create a DateCollectionItem specifying the Date (must be a DateTime object).
            </summary>
            <param name="label">The label.</param>
            <param name="svalue">The value.</param>
        </member>
        <member name="P:ActiveUp.WebControls.LabelValueCollectionItem.Label">
            <summary>
            Gets or sets the label.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.LabelValueCollectionItem.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.ProductCode">
            <summary>
            Contains all valid product code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ProductCode.ACL">
            <summary>
            ActiveCalendar.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ProductCode.HTB">
            <summary>
            HTML Text Box.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ProductCode.AVQ">
            <summary>
            ActiveQ.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ProductCode.AML">
            <summary>
            ActiveMail.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ProductCode.APG">
            <summary>
            ActivePager.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ProductCode.AWC">
            <summary>
            ActiveWebControls.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ProductCode.AWI">
            <summary>
            ActiveWhoIs.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ProductCode.ATV">
            <summary>
            ActiveTree.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ProductCode.RTF">
            <summary>
            ActiveRTF.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ProductCode.ADT">
            <summary>
            ActiveDateTime.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ProductCode.ATB">
            <summary>
            ActiveToolbar
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ProductCode.APP">
            <summary>
            ActivePopup
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ProductCode.HPT">
            <summary>
            HtmlProtector
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ProductCode.AUP">
            <summary>
            ActiveUpload
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ProductCode.ALD">
            <summary>
            ActiveLoader
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ProductCode.AWT">
            <summary>
            ActiveTimer
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ProductCode.AIE">
            <summary>
            ActiveImage
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ProductCode.ACR">
            <summary>
            ActiveRotator
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ProductCode.AIP">
            <summary>
            ActiveInput
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ProductCode.AAX">
            <summary>
            ActiveAjax
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ProductCode.AMN">
            <summary>
            ActiveMenu
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ProductCode.APN">
            <summary>
            ActivePanel
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ProductCode.ASC">
            <summary>
            SpellChecker
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ProductCode.ACP">
            <summary>
            Color
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ProductCode.AAS">
            <summary>
            Active Autosuggest
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Edition">
            <summary>
            Contains all valid edition.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Edition.S1">
            <summary>
            1 developer with subscription
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Edition.W1">
            <summary>
            1 developer with subscription + source code
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Edition.SR">
            <summary>
            renewal 1 developer
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Edition.WR">
            <summary>
            renewal 1 developer + source code
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.LicenseProduct">
            <summary>
            Contains all information about one product.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LicenseProduct._productCode">
            <summary>
            Code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LicenseProduct._majorVersion">
            <summary>
            Major version.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LicenseProduct._edition">
            <summary>
            Edition.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.LicenseProduct.#ctor(ActiveUp.WebControls.ProductCode,System.Int32,ActiveUp.WebControls.Edition)">
            <summary>
            Create a <see cref="P:ActiveUp.WebControls.LicenseProduct.ProductCode"/> object specifying the product code, major version and edition.
            </summary>
            <param name="productCode">Product code.</param>
            <param name="majorVersion">Major version.</param>
            <param name="edition">Edition.</param>
        </member>
        <member name="M:ActiveUp.WebControls.LicenseProduct._Init(ActiveUp.WebControls.ProductCode,System.Int32,ActiveUp.WebControls.Edition)">
            <summary>
            Initialize a <see cref="P:ActiveUp.WebControls.LicenseProduct.ProductCode"/> object.
            </summary>
            <param name="productCode">Product code.</param>
            <param name="majorVersion">Major version.</param>
            <param name="edition">Edition.</param>
        </member>
        <member name="P:ActiveUp.WebControls.LicenseProduct.ProductCode">
            <summary>
            Gets or sets the product code.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.LicenseProduct.MajorVersion">
            <summary>
            Gets or sets the major version.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.LicenseProduct.Edition">
            <summary>
            Gets or sets the edition.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.LicenseProduct.op_Implicit(ActiveUp.WebControls.LicenseProduct)~System.String">
            <summary>
            Convert a <see cref="P:ActiveUp.WebControls.LicenseProduct.ProductCode"/> object to this representation in string.
            </summary>
            <param name="product">tring contains the product informations.</param>
            <returns><see cref="P:ActiveUp.WebControls.LicenseProduct.ProductCode"/> object.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.LicenseProduct.op_Implicit(System.String)~ActiveUp.WebControls.LicenseProduct">
            <summary>
            Convert a string to this representation in a <see cref="P:ActiveUp.WebControls.LicenseProduct.ProductCode"/> object.
            </summary>
            <param name="product"><see cref="P:ActiveUp.WebControls.LicenseProduct.ProductCode"/> object contains the product information.</param>
            <returns>String representation of a <see cref="P:ActiveUp.WebControls.LicenseProduct.ProductCode"/> object.</returns>
        </member>
        <member name="T:ActiveUp.WebControls.RenderType">
            <summary>
            Render type enumeration.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.RenderType.NotSet">
            <summary>
            Not set.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.RenderType.DownLevel">
            <summary>
            Down level.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.RenderType.UpLevel">
            <summary>
            Up level.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.TrialException">
            <summary>
            Represents a trial specific error.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.TrialException._message">
            <summary>
            The message exception.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.TrialException.#ctor(System.String)">
            <summary>
            Constructor, sets message to the specified value.
            </summary>
            <param name="message">The exception's message.</param>
        </member>
        <member name="P:ActiveUp.WebControls.TrialException.Message">
            <summary>
            The exception's message.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.Utils">
            <summary>
            Contains severals tools.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Utils.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Utils.Color2Hex(System.Drawing.Color)">
            <summary>
            Converts a Color object to this html string representation.
            </summary>
            <param name="color">Color object to convert.</param>
            <returns>Html string representation.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.Utils.GetResolvedDataSource(System.Object,System.String)">
            <summary>
            Gets the resolved data source.
            </summary>
            <param name="dataSource">Data source.</param>
            <param name="dataMember">Data member.</param>
            <returns>Resolved data source enumerator.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.Utils.GetResource(System.String,System.Type)">
            <summary>
            Get the specified resource from the assembly.
            </summary>
            <param name="resource">The name of the resource.</param>
            <param name="type">The type of the assembly.</param>
            <returns>The string representation of the resource.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.Utils.GetResource(System.String)">
            <summary>
            Get the specified resource from the assembly.
            </summary>
            <param name="resource">The name of the resource.</param>
            <returns>The string representation of the resource.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.Utils.CreateStyleVariable(System.Drawing.Color,System.String,System.Drawing.Color,System.String)">
            <summary>
            Create a string represents a style.
            </summary>
            <param name="backColor">Background color used with the style.</param>
            <param name="backImage">Background image used with the style.</param>
            <param name="foreColor">Foreground color used with the style.</param>
            <param name="imagePath">Path where the images are located.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.Utils.CreateStyleVariable(System.Drawing.Color,System.String,System.Drawing.Color,System.String,System.String)">
            <summary>
            Create a string represents a style.
            </summary>
            <param name="backColor">Background color used with the style.</param>
            <param name="backImage">Background image used with the style.</param>
            <param name="foreColor">Foreground color used with the style.</param>
            <param name="imagePath">Path where the images are located.</param>
            <param name="cssClass">CSS class</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.Utils.ConvertToImageDir(System.String,System.String)">
            <summary>
            Convert a image directory and the images file in full path.
            </summary>
            <param name="imageDir">Directory where the images are located.</param>
            <param name="image">Images filename.</param>
            <returns>Full path containing the path and the image filename.</returns>
            
        </member>
        <member name="M:ActiveUp.WebControls.Utils.GetEmbeddedResource(System.String)">
            <summary>
            Get an embedded resource using this name.
            </summary>
            <param name="resName">Name of the resource.</param>
            <returns>An object contenaing the resource.</returns>
        </member>
        <member name="T:ActiveUp.WebControls.HtmlProtector">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.HtmlProtector"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlProtector.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.HtmlProtector"/> class.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.HtmlProtector.DisableImageToolbar">
            <summary>
            Gets or sets a value indicating whether disable the image toolbar.
            </summary>
            <value><c>true</c> if disable the image toolbar; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.HtmlProtector.TotalProtectionEnabled">
            <summary>
            Gets or sets a value indicating whether total protection is enabled.
            </summary>
            <value>
            	<c>true</c> if total protection is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ActiveUp.WebControls.HtmlProtector.DisableDragAndDrop">
            <summary>
            Gets or sets a value indicating whether disable drag and drop.
            </summary>
            <value><c>true</c> if disable drag and drop; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.HtmlProtector.DisableStatusLinks">
            <summary>
            Gets or sets a value indicating whether disables status links.
            </summary>
            <value><c>true</c> if disables status links; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.HtmlProtector.DisableClipBoard">
            <summary>
            Gets or sets a value indicating whether disable clip board.
            </summary>
            <value><c>true</c> if disable clip board; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.HtmlProtector.DisablePagePrinting">
            <summary>
            Gets or sets a value indicating whether disable page printing.
            </summary>
            <value><c>true</c> if disable page printing; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.HtmlProtector.DisableRightClick">
            <summary>
            Gets or sets a value indicating whether disable right click.
            </summary>
            <value><c>true</c> if disable right click; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.HtmlProtector.DisableTextSelection">
            <summary>
            Gets or sets a value indicating whether disable text selection.
            </summary>
            <value>
            	<c>true</c> if [disable text selection]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ActiveUp.WebControls.HtmlProtector.InsertBlankLines">
            <summary>
            Gets or sets a value indicating whether inserts blank lines.
            </summary>
            <value><c>true</c> if inserts blank lines; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.HtmlProtector.RemoveLineFeeds">
            <summary>
            Gets or sets a value indicating whether remove line feeds.
            </summary>
            <value><c>true</c> if removes line feeds; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.HtmlProtector.ExternalScript">
            <summary>
            Gets or sets the relative or absolute path to the external Html TextBox API javascript file.
            </summary>
            <remarks>If the value of this property is string.Empty, the external file script is not used and the API is rendered in the page together with the Html TextBox render.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.HtmlProtector.ScriptDirectory">
            <summary>
            Gets or sets the relative or absolute path to the directory where the API javascript file is.
            </summary>
            <remarks>If the value of this property is string.Empty, the external file script is not used and the API is rendered in the page together with the control render.</remarks>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlProtector.OnPreRender(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.PreRender"/>
            event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlProtector.RegisterScriptBlock">
            <summary>
            Register the Client-Side script block in the ASPX page.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlProtector.Render(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Render this control to the output parameter specified.
            </summary>
            <param name="output"> The HTML writer to write out to </param>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlProtector.RenderProtector(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the protector.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlProtector.HtmlEncrypt(System.String)">
            <summary>
            Encrypts the html.
            </summary>
            <param name="input">The input.</param>
            <returns></returns>
        </member>
        <member name="T:ActiveUp.WebControls.HtmlProtectorControlDesigner">
            <summary>
            This class is used to render the html protector at design time.
            </summary>
            <remarks>You should not use this class in your project.</remarks>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlProtectorControlDesigner.GetDesignTimeHtml">
            <summary>
            Gets the design time HTML code.
            </summary>
            <returns>A string containing the HTML to render.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlProtectorControlDesigner.GetEmptyDesignTimeHtml">
            <summary>
            Gets the design time HTML code when empty (never used in HtmlProtector).
            </summary>
            <returns>A string containing the HTML to render.</returns>
        </member>
        <member name="T:ActiveUp.WebControls.ContextMenuItem">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ContextMenuItem"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ContextMenuItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ContextMenuItem"/> class.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ContextMenuItem.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ContextMenuItem.OnClick">
            <summary>
            Gets or sets the onclick client side event.
            </summary>
            <value>The onclick client side event.</value>
        </member>
        <member name="T:ActiveUp.WebControls.ContextMenuItemCollection">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ContextMenuItemCollection"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ContextMenuItemCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ContextMenuItemCollection"/> class.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ContextMenuItemCollection.Count">
            <summary>
            When implemented by a class, gets the number of
            elements contained in the <see cref="T:System.Collections.ICollection"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:ActiveUp.WebControls.ContextMenuItemCollection.IsSynchronized">
            <summary>
            When implemented by a class, gets a value
            indicating whether access to the <see cref="T:System.Collections.ICollection"/> is synchronized
            (thread-safe).
            </summary>
            <value></value>
        </member>
        <member name="P:ActiveUp.WebControls.ContextMenuItemCollection.IsFixedSize">
            <summary>
            When implemented by a class, gets a value indicating whether the <see cref="T:System.Collections.IList"/> has a fixed size.
            </summary>
            <value></value>
        </member>
        <member name="P:ActiveUp.WebControls.ContextMenuItemCollection.IsReadOnly">
            <summary>
            When implemented by a class, gets a value indicating whether the <see cref="T:System.Collections.IList"/> is read-only.
            </summary>
            <value></value>
        </member>
        <member name="P:ActiveUp.WebControls.ContextMenuItemCollection.SyncRoot">
            <summary>
            When implemented by a class, gets an object that
            can be used to synchronize access to the <see cref="T:System.Collections.ICollection"/>.
            </summary>
            <value></value>
        </member>
        <member name="M:ActiveUp.WebControls.ContextMenuItemCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            When implemented by a class, copies the elements of
            the <see cref="T:System.Collections.ICollection"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="index">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="array"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException">
            	<para>
            		<paramref name="array"/> is multidimensional.</para>
            	<para>-or-</para>
            	<para>
            		<paramref name="index"/> is equal to or greater than the length of <paramref name="array"/>.</para>
            	<para>-or-</para>
            	<para>The number of elements in the source <see cref="T:System.Collections.ICollection"/> is greater than the available space from <paramref name="index"/> to the end of the destination <paramref name="array"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException">The type of the source <see cref="T:System.Collections.ICollection"/> cannot be cast automatically to the type of the destination <paramref name="array"/>.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.ContextMenuItemCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:ActiveUp.WebControls.ContextMenuItem"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="M:ActiveUp.WebControls.ContextMenuItemCollection.Remove(System.Object)">
            <summary>
            Removes the specified item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ContextMenuItemCollection.Remove(ActiveUp.WebControls.ContextMenuItem)">
            <summary>
            Removes the specified item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ContextMenuItemCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ContextMenuItemCollection.Insert(System.Int32,ActiveUp.WebControls.ContextMenuItem)">
            <summary>
            Inserts at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ContextMenuItemCollection.Add(System.Object)">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.ContextMenuItemCollection.Add(ActiveUp.WebControls.ContextMenuItem)">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.ContextMenuItemCollection.Clear">
            <summary>
            When implemented by a class, removes all items from the <see cref="T:System.Collections.IList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"/> is read-only.</exception>
        </member>
        <member name="M:ActiveUp.WebControls.ContextMenuItemCollection.Contains(System.Object)">
            <summary>
            Determines whether contains the specified item.
            </summary>
            <param name="item">The item.</param>
            <returns>
            	<c>true</c> if contains the specified item]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ActiveUp.WebControls.ContextMenuItemCollection.Contains(ActiveUp.WebControls.ContextMenuItem)">
            <summary>
            Determines whether contains the specified item.
            </summary>
            <param name="item">The item.</param>
            <returns>
            	<c>true</c> if contains the specified item; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ActiveUp.WebControls.ContextMenuItemCollection.IndexOf(System.Object)">
            <summary>
            Searches for the specified <see cref="T:ActiveUp.WebControls.ContextMenuItem"/> and returns the zero-based index of the first occurrence within the entire collection.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.ContextMenuItemCollection.IndexOf(ActiveUp.WebControls.ContextMenuItem)">
            <summary>
            Searches for the specified <see cref="T:ActiveUp.WebControls.ContextMenuItem"/> and returns the zero-based index of the first occurrence within the entire collection.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.ContextMenuItemCollection.RemoveAt(System.Int32)">
            <summary>
            When implemented by a class, removes the <see cref="T:System.Collections.IList"/>
            item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.IList"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            	<para>The <see cref="T:System.Collections.IList"/> is read-only.</para>
            	<para>-or-</para>
            	<para>The <see cref="T:System.Collections.IList"/> has a fixed size.</para>
            </exception>
        </member>
        <member name="M:ActiveUp.WebControls.ContextMenuItemCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/>
            that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:ActiveUp.WebControls.ContextMenuItemCollection.GetItemListToString(System.Char,System.Char)">
            <summary>
            Gets the item list to a string.
            </summary>
            <param name="separtorEvent">The separator event.</param>
            <param name="separatorItems">The separator items.</param>
            <returns></returns>
        </member>
        <member name="T:ActiveUp.WebControls.ContextMenuStyle">
            <summary>
            Represents the short style for client-side manipulator of a <see cref="T:ActiveUp.WebControls.ContextMenuStyle"/>.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ContextMenuStyle._foreColor">
            <summary>
            The foreground color of the element.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ContextMenuStyle._foreColorRollOver">
            <summary>
            The foreground color rollover of the element.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ContextMenuStyle._backColor">
            <summary>
            The background color of the element.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ContextMenuStyle._backColorRollOver">
            <summary>
            The background color rollover of the element.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ContextMenuStyle._borderColor">
            <summary>
            The border color of the element.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ContextMenuStyle._borderWidth">
            <summary>
            The border width of the element.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ContextMenuStyle._borderStyle">
            <summary>
            The border style of the element.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ContextMenuStyle._cssClass">
            <summary>
            The CSS class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ContextMenuStyle.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ContextMenuStyle.ForeColor">
            <summary>
            Gets or sets the foreground color.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ContextMenuStyle.ForeColorRollOver">
            <summary>
            Gets or sets the foreground color.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ContextMenuStyle.BackColor">
            <summary>
            Gets or sets the background color.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ContextMenuStyle.BackColorRollOver">
            <summary>
            Gets or sets the background color rollover.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ContextMenuStyle.BorderColor">
            <summary>
            Gets or sets the border color.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ContextMenuStyle.BorderWidth">
            <summary>
            Gets or sets the border width.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ContextMenuStyle.BorderStyle">
            <summary>
            Gets or sets the border style.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ContextMenuStyle.CssClass">
            <summary>
            Gets or sets the CSS class
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ContextMenuStyle.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Adds HTML attributes and styles that need to be rendered to the specified System.Web.UI.HtmlTextWriter.
            </summary>
            <param name="writer">A System.Web.UI.HtmlTextWriter that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="T:ActiveUp.WebControls.Editor">
            <summary>
            An online web based WYSIWYG HTML editor.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Editor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.Editor"/> class.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.ExternalScript">
            <summary>
            Gets or sets the relative or absolute path to the external Html TextBox API javascript file.
            </summary>
            <remarks>If the value of this property is string.Empty, the external file script is not used and the API is rendered in the page together with the Html TextBox render.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.ScriptDirectory">
            <summary>
            Gets or sets the relative or absolute path to the directory where Html TextBox API javascript file is.
            </summary>
            <remarks>If the value of this property is string.Empty, the external file script is not used and the API is rendered in the page together with the Html TextBox render.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.EditorType">
            <summary>
            Gets or sets the editor type.
            </summary>
            <value>The type of the editor.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.BackImage">
            <summary>
            Image used as background of the toolbar container.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.TextareaColumns">
            <summary>
            Gets or sets the number of columns for the Textarea if used.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.OnFocus">
            <summary>
            Gets or sets the additional JScript client-side functions to call when the editor get focus.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.OnBlur">
            <summary>
            Gets or sets the additional JScript client-side functions to call when the editor get focus.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.TextareaRows">
            <summary>
            Gets or sets the number of rows for the Textarea if used.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.HardReturnEnabled">
            <summary>
            Specify whether you want the editor to insert a new paragraph instead of a new line (BR) when the user hit RETURN.
            </summary>
            <remarks>Inserting new line can be usefull if you disable the normal line feed. In this case, just tell your end-users to press SHIFT-ENTER to add a BR (line feed) tag instead of a P (paragraph). When in this mode, you can insert an hard return by pressing CTRL-M. You can also change the behavior while editing by pressing CTRL-K.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.HackProtectionDisabled">
            <summary>
            Specify whether you want the editor to protect the content against potential javascript attacks.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.EditorAreaWidth">
            <summary>
            Gets or sets the editor area width. Usually to force good previewing of the edited document when thinner than the toolbar width.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.Text">
            <summary>
            Gets or sets the HTML source code.
            </summary>
            <remarks>When the data is posted, this property contains the generated HTML. You can also use this property to specify default text to display when the control is rendered.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.Toolbars">
            <summary>
            Gets or sets the toolbars.
            </summary>
            <value>The toolbars.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.Version">
            <summary>
            Gets the version number of HTML TextBox.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Editor.DetermineEditorType">
            <summary>
            Detects if the client browser is able to handle the client side scripts.
            </summary>
            <returns>True if the browser is capable.</returns>
            <example>
            <code>
            
            VB
            
            Dim Editor1 As New Editor()
            If Editor1.RenderUpLevel()
            	Editor1.Text = "Enter your formatted text here..."
            Else
            	Editor1.Text = "Enter your text here..."
            End If
            
            C#
            
            Editor Editor1 = new Editor()
            if (Editor1.RenderUpLevel())
            {
            	Editor1.Text = "Enter your formatted text here...";
            }
            else
            {
            	Editor1.Text = "Enter your text here...";
            }
            </code></example>
        </member>
        <member name="M:ActiveUp.WebControls.Editor.RegisterAPIScriptBlock">
            <summary>
            Register the Client-Side script block in the ASPX page.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Editor.RegisterStartupScriptBlock">
            <summary>
            Register the initialization script of the editor.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Editor.OnInit(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary>
            <param name="e">Event Args</param>
        </member>
        <member name="M:ActiveUp.WebControls.Editor.LoadLocalizationSettings">
            <summary>
            Loads the localization settings.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Editor.LoadLocalizationSettings(System.String)">
            <summary>
            Loads the localization settings from the specified definition file.
            </summary>
            <param name="path">The full path to the file.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Editor.ApplyLocalizationSettings">
            <summary>
            Apply the localization settings.
            </summary>
            <returns>True if success; False is failed.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.Editor.ApplyLocalizationSettings(ActiveUp.WebControls.LocalizationSettings)">
            <summary>
            Apply the specified localization settings.
            </summary>
            <param name="ls">The LocalizationSettings object.</param>
            <returns>True if success; False is failed.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.Editor.OnPreRender(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary>
            <param name="e">Event Args</param>
        </member>
        <member name="M:ActiveUp.WebControls.Editor.RenderForNavigationTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders for navigation tag.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.Editor.Render(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Render this control to the output parameter specified.
            </summary>
            <param name="output">The HTML writer to write out to </param>
        </member>
        <member name="M:ActiveUp.WebControls.Editor.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            A LoadPostData method.
            </summary>
            <param name="postDataKey">PostDataKey.</param>
            <param name="postCollection">postCollection.</param>
            <returns>bool</returns>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.EditorModeSelector">
            <summary>
            Specifies if you want to display the HTML/Design selector as tabs, checkbox or none.
            </summary>
            <remarks>If you don't want to let the user swap between HTML mode and Design mode, set this property to <see cref="F:ActiveUp.WebControls.EditorModeSelectorType.None"/>. Don't forget to set the <see cref="T:ActiveUp.WebControls.EditorModeSelectorType"/> property to display the wanted edition mode.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.StartupMode">
            <summary>
            Gets or sets the default edition mode
            </summary>
            <value>The default edition mode.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.EditorModeHtmlLabel">
            <summary>
            Specifies the text to display with the HTML/Design mode checkbox or the HTML tab.
            </summary>
            <remarks>This is the text that will be displayed with the check box.
            You can include HTML, but be careful.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.EditorModePreviewLabel">
            <summary>
            Gets or sets the editor preview label.
            </summary>
            <value>The editor mode preview label.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.TextMode">
            <summary>
            Gets or sets if we will display in text mode.
            </summary>
            <remarks>If you don't want to use icons (images) to represent the tools, set the <c>TextMode</c> property to <c>true</c>. This will tell the control to render the tool as standard HTML buttons. The images specified in the tools will be ignored.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.EditorModeDesignLabel">
            <summary>
            Specifies the text to display with the Design mode tab.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.IconsDirectory">
            <summary>
            Gets or sets the relative or absolute path to the external Html TextBox API javascript file.
            </summary>
            <remarks>If the value of this property is string.Empty, the external file script is not used and the API is rendered in the page together with the Html TextBox render.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.EditorModeDesignIcon">
            <summary>
            Gets or sets the filename of the Design tab icon.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.EditorModeHtmlIcon">
            <summary>
            Gets or sets the filename of the Html tab icon.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.EditorModePreviewIcon">
            <summary>
            Gets or sets the filename of the preview tab icon.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.Template">
            <summary>
            Gets or sets the template or layout to use for the toolbars.
            </summary>
            <remarks>
            This method is commonly used to quickly set the tools you need. This is the fastest method to set the template that will be used by the control to automaticelly generate his toolbars and tools collections.<br />
            If you set the <see cref="P:ActiveUp.WebControls.Editor.AutoCreateTools"/> property to true, this property will be used, even if you add tools later programmaticaly.<br />
            If you want to customize the tools, you can access them by their name or index trough the <c>Tools</c> collection of the Toolbars contained in the <see cref="P:ActiveUp.WebControls.Editor.Toolbars"/> collection. In this case, don't forget to call <see cref="M:ActiveUp.WebControls.Editor.EnsureToolsCreated"/> before to ensure that the tools are created.<br />
            If you want to create customized tools, it's possible to add yourself the Tools.Custom object in the <see cref="T:ActiveUp.WebControls.Toolbar"/> objects contained by the control. You can also develop your own tool objects that require postback handling and more. To achieve this, use ToolBase.
            </remarks>
            <example>
            <code>
            // The following example is to use in the designer.
            
            // A minimal toolbar
            
            &lt;AU:Editor ID="Editor" Runat="server" Template="bold,italic,underline"&gt;
            
            // The default toolbars
            
            &lt;AU:Editor ID="EDITBOX" Runat="server" Template="cut,copy,paste,separator,bold,
            italic,underline,separator,link,image,rule,separator,alignleft,aligncenter,alignright,
            separator,orderedlist,unorderedlist,separator,indent,outdent,separator;paragraph,fontface,
            fontsize,fontcolor,separator"&gt;
            
            // The following example is to use in the code file of the web form
            
            // A minimal toolbar
            Editor1.Template = "bold,italic,underline";
            
            // The default toolbars
            Editor1.Template = "cut,copy,paste,separator,bold,italic,underline,separator,
            	link,image,rule,separator,alignleft,aligncenter,alignright,separator,
            	orderedlist,unorderedlist,separator,indent,outdent,separator;paragraph,fontface,
            	fontsize,fontcolor,separator";
            
            
            
            </code>
            </example>
        </member>
        <member name="M:ActiveUp.WebControls.Editor.RaisePostDataChangedEvent">
            <summary>
            A RaisePostDataChangedEvent.
            </summary>
        </member>
        <member name="E:ActiveUp.WebControls.Editor.TextChanged">
            <summary>
            The TextChanged event handler.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Editor.OnTextChanged(System.EventArgs)">
            <summary>
            A OnTextChanged event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ActiveUp.WebControls.Editor.EnsureToolsCreated">
            <summary>
            Determine if the control has created the tools based on the Template property. If not, it will create them.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Editor.CreateTools">
            <summary>
            Creates the tools contained in the <see cref="P:ActiveUp.WebControls.Editor.Template"/> property.
            </summary>
            <remarks>This method can be called if you change the layout of <see cref="P:ActiveUp.WebControls.Editor.Template"/> property after the OnPreRender event of the <see cref="T:ActiveUp.WebControls.Editor"/> object was called.</remarks>
        </member>
        <member name="M:ActiveUp.WebControls.Editor.CreateTools(System.String,System.Boolean)">
            <summary>
            Creates the tools contained in the <see cref="P:ActiveUp.WebControls.Editor.Template"/> property.
            </summary>
            <remarks>This method can be called if you change the layout of <see cref="P:ActiveUp.WebControls.Editor.Template"/> property after the OnPreRender event of the <see cref="T:ActiveUp.WebControls.Editor"/> object was called.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.ToolsCreated">
            <summary>
            Gets the value indicating whether the control had created it's toolbar and tools collections based on the Template property layout.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.AutoCreateTools">
            <summary>
            When set to false, the editor rendering engine will ignore the content of the <see cref="P:ActiveUp.WebControls.Editor.Template"/> property.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.PopupToolbars">
            <summary>
            Gets or sets a value indicating The toolbars is displayed as popup when the property is set to true.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.Editable">
            <summary>
            Specify whether you want the editor to be editable or act as a document viewer.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.IconsFilenames">
            <summary>
            Returns an <see cref="T:System.Collections.ArrayList" /> containing the filenames of all the icons in all toolbars.
            </summary>
            <remarks>This method is used internaly to generate the client side preloads script.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.MaxLength">
            <summary>
            Gets and sets max characters allowed in the editor.
            </summary>
            <remarks>The default value is 0 and mean <b>no limit</b>.<br /><br />
            You need to know that the max lenght is approximative. It's due to the fact that when the content is typed or pasted, the client-side function will crop the code, then the IFRAME object will try to reformat the HTML code to ensure that the output is valid. I all cases, this will add closing tags, so depending of the size of your document, the max length can be very approximative.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.ShowNavigation">
            <summary>
            Gets or sets a value indicating whether you want to see the navigation tag.
            </summary>
            <value><c>true</c> if you want to see the navigation tag; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.CleanOnPaste">
            <summary>
            Specify whether you want the editor to clean the document on each paste.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.AutoHideToolBars">
            <summary>
            Specify whether you want the editor auto-hide the toolbars.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.UseBR">
            <summary>
            Specify whether you want the editor to insert a BR tag instead of a new paragraph (P) when the user hit RETURN.
            </summary>
            <remarks>Inserting new paragraphs on RETURN can be usefull. In this case, just tell your end-users to press SHIFT-ENTER to add a BR tard instead of a P. When in this mode, you can insert an hard return by pressing CTRL-M. You can also change the behavior while editing by pressing CTRL-K.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.AllowTransparency">
            <summary>
            Specifies if you want to enable the Editor IFRAME transparency.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.BackColor">
            <summary>
            Gets or sets the background color of the <see cref="T:ActiveUp.WebControls.Editor"/>.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.BorderColor">
            <summary>
            Gets or sets the border color of the <see cref="T:ActiveUp.WebControls.Editor"/>.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.BorderWidth">
            <summary>
            Gets or sets the border width of the <see cref="T:ActiveUp.WebControls.Editor"/>.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.PersistText">
            <summary>
            Specify whether you want the control to keep the data in the viewsate.
            </summary>
            <remarks>This property can be useful when using the control with a Tab Control like the IE Tab WebControls. When your are not on the tab that contain the editor, the content can be lost because the editor use an INPUT HIDDEN field to save the content of the editor.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.AutoDetectSsl">
            <summary>
            Specify whether you want the editor to auto detect the SSL environment.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.EnableSsl">
            <summary>
            Set to true if you need to use the control in a secure web page.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.StartupScript">
            <summary>
            Gets or sets the javascript code to execute after the initialization of the editor.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.KeysDisabled">
            <summary>
            Specify wether you want the editor to ignore key formatting commands
            </summary>
            <value>The keys disabled.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.ContextMenuCustomItems">
            <summary>
            Specify whether you want to add custom commands for the context menu.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.MaxLengthMode">
            <summary>
            Gets or sets the max character mode allowed in the editor.
            </summary>
            <value>The max length.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.StartupFocus">
            <summary>
            Gets or sets a value indicating whether the editor must have the focus when the applciation start.
            </summary>
            <value><c>true</c> if the editor must have the focus when the application starts; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.AllowRollOver">
            <summary>
            Indicates if you want to allow rollover.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.BottomToolbar">
            <summary>
            Gets or sets the bottom toolbar.
            </summary>
            <value>The bottom toolbar.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.ContentCssFile">
            <summary>
            Gets or sets the file name of the style sheet file to attach to the edit box (preview styles).
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.LocalizationFile">
            <summary>
            Gets or sets the file with the localized labels.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.TextareaCssClass">
            <summary>
            Gets or sets the Css class to use for the Textarea.
            </summary>
            <remarks>If you want to customize the appearance of the <c>Textarea</c> displayed when the client browser is not compatible, use this property to specify a Css Class.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.ContextMenuStyle">
            <summary>
            Gets or sets the context menu style.
            </summary>
            <value>The context menu style.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.TextStripped">
            <summary>
            Returns the HTML stripped text.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.TextEncoded">
            <summary>
            Returns the text content HTML encoded.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.TextXhtml">
            <summary>
            Returns the text content in XHTML encoded.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.Labels">
            <summary>
            Gets or sets the labels of the Editor.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Editor.LocalizationSettingsApplied">
            <summary>
            Gets the value indicating whether the control had applied the localization settings.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Editor.EnsureLocalizationSettingsApplied">
            <summary>
            Determine if the control has applied its localization settings. If not, it will apply them.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.EditorDesigner">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.EditorDesigner"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.EditorDesigner.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.EditorDesigner"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.EditorDesigner.GetDesignTimeHtml">
            <summary>
            Gets the HTML that is used to represent the control at design time.
            </summary>
            <returns>The HTML that is used to represent the control at design time.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.EditorDesigner.GetErrorDesignTimeHtml(System.Exception)">
            <summary>
            Gets the HTML that provides information about the specified exception. This method is typically called after an error has been encountered at design time.
            </summary>
            <param name="e">The exception that occurred.</param>
            <returns>The HTML for the specified exception.</returns>
        </member>
        <member name="T:ActiveUp.WebControls.EditorHelper">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.EditorHelper"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.EditorHelper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.EditorHelper"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.EditorHelper.DebugTrace(System.String)">
            <summary>
            Adds a string in the trace.
            </summary>
            <param name="traceText">The string to add.</param>
        </member>
        <member name="M:ActiveUp.WebControls.EditorHelper.GetResource(System.String)">
            <summary>
            Get the specified resource from the assembly.
            </summary>
            <param name="resource">The name of the resource.</param>
            <returns>The string representation of the resource.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.EditorHelper.GetResource(System.String,System.Type)">
            <summary>
            Get the specified resource from the assembly.
            </summary>
            <param name="resource">The name of the resource.</param>
            <param name="type">The type of the assembly.</param>
            <returns>The string representation of the resource.</returns>
        </member>
        <member name="P:ActiveUp.WebControls.EditorHelper.ShowDebugMessages">
            <summary>
            Gets or sets a value indicating whether shows the debug messages.
            </summary>
            <value><c>true</c> if shows the debug messages; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:ActiveUp.WebControls.EditorHelper.Encode(System.String)">
            <summary>
            Encode the specified string.
            </summary>
            <param name="stringToEncode">The string to encode.</param>
            <returns>the encoded string.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.EditorHelper.Decode(System.String)">
            <summary>
            Decode the specified string.
            </summary>
            <param name="stringToDecode">The string to decode.</param>
            <returns>The decoded string.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.EditorHelper.RemoveMaliciousCode(System.String)">
            <summary>
            Remove potential malicious code from the string.
            </summary>
            <param name="input">The string to process.</param>
            <returns>The cleaned string.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.EditorHelper.FormatCollection(System.String[],System.Boolean)">
            <summary>
            Format the specified ArrayList to be used on Client-Side script.
            </summary>
            <param name="collection">The collection to format.</param>
            <param name="encode">Specify whether you want the data to be HTML encoded or not.</param>
            <returns>The formatted array.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.EditorHelper.FormatCollection(System.String[],System.String,System.Boolean)">
            <summary>
            Format the specified string array to be used on Client-Side script.
            </summary>
            <param name="collection">The collection to format.</param>
            <param name="prefix">The prefix to use for the items.</param>
            <param name="encode">Specify whether you want the data to be HTML encoded or not.</param>
            <returns>The formatted array.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.EditorHelper.FormatCollection(System.Collections.ArrayList,System.Boolean)">
            <summary>
            Format the specified ArrayList to be used on Client-Side script.
            </summary>
            <param name="collection">The collection to format.</param>
            <param name="encode">Specify whether you want the data to be HTML encoded or not.</param>
            <returns>The formatted array.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.EditorHelper.FormatCollection(System.Collections.ArrayList,System.String,System.Boolean)">
            <summary>
            Format the specified ArrayList to be used on Client-Side script.
            </summary>
            <param name="collection">The collection to format.</param>
            <param name="prefix">The prefix to use for the items.</param>
            <param name="encode">Specify whether you want the data to be HTML encoded or not.</param>
            <returns>The formatted array.</returns>
        </member>
        <member name="T:ActiveUp.WebControls.EditorMaxLengthMode">
            <summary>
            Editor maximum length mode.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.EditorMaxLengthMode.Editor">
            <summary>
            Editor maximum length mode.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.EditorMaxLengthMode.HTML">
            <summary>
            HTML maximum length mode.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.EditorMode">
            <summary>
            Editor mode enumeration.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.EditorMode.Design">
            <summary>
            Design editor mode.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.EditorMode.Html">
            <summary>
            Html editor mode.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.EditorMode.Preview">
            <summary>
            Preview editor mode.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.EditorModeSelection">
            <summary>
            Editor mode selection.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.EditorModeSelection.Design">
            <summary>
            WYSIWYG edition mode, like in a word processing document.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.EditorModeSelection.HTML">
            <summary>
            HTML Source Code mode.  Much like notepad and other text only editors.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.EditorModeSelectorType">
            <summary>
            Edition modes selection types.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.EditorModeSelectorType.None">
            <summary>
            The view source option will not be shown.  Changing view source mode can not be accomplished by the end-user; however, the Client Side API functions do provide scripting access to switch modes.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.EditorModeSelectorType.Tabs">
            <summary>
            Tab Selection used to switch between Edit and Source modes.  Similar to the bottom tabs used in the Visual Studio Web Form Designer.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.EditorModeSelectorType.CheckBox">
            <summary>
            Edit and Source modes are switched using a checkbox.  This option was also available in version 1.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.EditorToolbarsEditor">
            <summary>
            Provides a user interface that can edit most types of the <see cref="T:ActiveUp.WebControls.ToolCollection"/> at design time.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.EditorToolbarsEditor.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolCollectionEditor"/> class using the specified collection type.
            </summary>
            <param name="type">The type of the collection for this editor to edit.</param>
        </member>
        <member name="M:ActiveUp.WebControls.EditorToolbarsEditor.CreateNewItemTypes">
            <summary>
            Gets the data types that this <see cref="T:ActiveUp.WebControls.ToolCollectionEditor"/> can contain.
            </summary>
            <returns>An array of data types that this collection can contain.</returns>
        </member>
        <member name="T:ActiveUp.WebControls.EditorType">
            <summary>
            Editor type enumeration.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.EditorType.NotSet">
            <summary>
            Not set.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.EditorType.DHTML">
            <summary>
            DHTML editor type.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.EditorType.TextArea">
            <summary>
            Text area editor type.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.ExtensionCollection">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ExtensionCollection"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ExtensionCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ExtensionCollection"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ExtensionCollection.Add(System.String)">
            <summary>
            Adds the specified extension.
            </summary>
            <param name="extension">The extension.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ExtensionCollection.Remove(System.Int32)">
            <summary>
            Removes at the specified index.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="P:ActiveUp.WebControls.ExtensionCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ActiveUp.WebControls.ExtensionCollection"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="M:ActiveUp.WebControls.ExtensionCollection.Contains(System.String)">
            <summary>
            Determines whether contains the specified extension.
            </summary>
            <param name="extension">The extension.</param>
            <returns>
            	<c>true</c> if contains the specified extension; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:ActiveUp.WebControls.File">
            <summary>
            This is an object to represent a file.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.File.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.File.#ctor(System.String,System.String,System.Int64)">
            <summary>
            Create the File object specifying the Label, Location and Size.
            </summary>
            <param name="label">The label (description) of the file.</param>
            <param name="location">The location of the file.</param>
            <param name="size">The size of the file in bytes.</param>
        </member>
        <member name="M:ActiveUp.WebControls.File.#ctor(System.String,System.String,System.Int64,System.Int32,System.Int32)">
            <summary>
            Create the File object specifying the Label, Location, Size, Width and Height (usually an image).
            </summary>
            <param name="label">The label (description) of the file.</param>
            <param name="location">The location of the file.</param>
            <param name="size">The size of the file in bytes.</param>
            <param name="width">The width of the file (image) in pixels.</param>
            <param name="height">The height of the file (image) in pixels.</param>
        </member>
        <member name="P:ActiveUp.WebControls.File.Label">
            <summary>
            Gets or sets the file label (description).
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.File.Location">
            <summary>
            Gets or sets the location of the file.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.File.Size">
            <summary>
            Gets or sets the file size in bytes.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.File.Width">
            <summary>
            Gets or sets the width of the file (image).
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.File.Height">
            <summary>
            Gets or sets the height of the file (image).
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.FileCollection">
            <summary>
            Collection of File objects.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.FileCollection.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.FileCollection.Add(ActiveUp.WebControls.File)">
            <summary>
            Adds a File object in the collection.
            </summary>
            <param name="file">The File object</param>
        </member>
        <member name="M:ActiveUp.WebControls.FileCollection.Add(System.String,System.String)">
            <summary>
            Adds a File object in the collection specifying the label and location.
            </summary>
            <param name="label">The label of the File object.</param>
            <param name="location">The location of the File object.</param>
        </member>
        <member name="M:ActiveUp.WebControls.FileCollection.Add(System.String,System.Int64)">
            <summary>
            Adds a File object in the collection specifying the location and size.
            </summary>
            <param name="location">The location of the File object.</param>
            <param name="size">The size in bytes of the File object.</param>
        </member>
        <member name="M:ActiveUp.WebControls.FileCollection.Add(System.String,System.String,System.Int64)">
            <summary>
            Adds a file object in the collection specifying the label, location and size.
            </summary>
            <param name="label">The label of the File object.</param>
            <param name="location">The location of the File object.</param>
            <param name="size">The size in bytes of the File object.</param>
        </member>
        <member name="M:ActiveUp.WebControls.FileCollection.Add(System.String,System.String,System.Int64,System.Int32,System.Int32)">
            <summary>
            Adds a file object in the collection specifying the label, location and size.
            </summary>
            <param name="label">The label of the File object.</param>
            <param name="location">The location of the File object.</param>
            <param name="size">The size in bytes of the File object.</param>
            <param name="width">The width of the File object (Image).</param>
            <param name="height">The height of the File object (Image).</param>
        </member>
        <member name="M:ActiveUp.WebControls.FileCollection.Remove(System.Int32)">
            <summary>
            Removes the File at the specified index position.
            </summary>
            <param name="index"></param>
        </member>
        <member name="P:ActiveUp.WebControls.FileCollection.Item(System.Int32)">
            <summary>
            Returns the File at the specified index position.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.FileCollection.Labels">
            <summary>
            Gets the labels contained in the collection.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.FileCollection.Locations">
            <summary>
            Gets the locations contained in the collection.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.FileDirectory">
            <summary>
            A file directory (usually containing images).
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.FileDirectory.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.FileDirectory.#ctor(System.String)">
            <summary>
            Create the FileDirectory object specifying the path.
            </summary>
            <param name="path">The full path to the directory.</param>
        </member>
        <member name="M:ActiveUp.WebControls.FileDirectory.#ctor(System.String,System.String)">
            <summary>
            Create the FileDirectory object specifying the name and path.
            </summary>
            <param name="name">The name of the directory.</param>
            <param name="path">The full path to the directory.</param>
        </member>
        <member name="M:ActiveUp.WebControls.FileDirectory.#ctor(System.String,System.String,System.String)">
            <summary>
            Create the FileDirectory object specifying the name, path and webpath.
            </summary>
            <param name="name">The name of the directory.</param>
            <param name="path">The full path to the directory.</param>
            <param name="webPath">The web path to the directory.</param>
        </member>
        <member name="P:ActiveUp.WebControls.FileDirectory.WebPath">
            <summary>
            Gets or sets the web path to access to the directory.
            </summary>
            <remarks>The web path is used by the editor to fill the SRC attribute of the image (IMG).</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.FileDirectory.Path">
            <summary>
            Gets or sets the physical path to the directory.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.FileDirectory.Name">
            <summary>
            Gets or sets the name of the directory.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.FileDirectory.Files">
            <summary>
            Gets or sets the files contained in the directory.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.FileDirectory.LoadFiles">
            <summary>
            Load the files data (not content) in the Files collection.
            </summary>
            <returns>Return the number of files loaded.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.FileDirectory.LoadFiles(System.Boolean)">
            <summary>
            Load the files data (not content) in the Files collection.
            </summary>
            <param name="detectImageSize">Specify whether if you want to auto detect the image size or not.</param>
            <returns>Return the number of files loaded.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.FileDirectory.LoadFiles(System.Boolean,System.String)">
            <summary>
            Load the files data (not content) in the Files collection.
            </summary>
            <param name="detectImageSize">Specify whether if you want to auto detect the image size or not.</param>
            <param name="extFilter">Specify the accepted file extension accepted.</param>
            <returns>Return the number of files loaded.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.FileDirectory.LoadFiles(System.String,System.Boolean,System.String)">
            <summary>
            Load the files data (not content) in the Files collection.
            </summary>
            <param name="path">Specify the path where to load the files.</param>
            <param name="detectImageSize">Specify whether if you want to auto detect the image size or not.</param>
            <param name="extFilter">Specify the accepted file extension accepted.</param>
            <returns>Return the number of files loaded.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.FileDirectory.AddFile(System.IO.FileInfo,System.Boolean)">
            <summary>
            Add the specified file into the collection.
            </summary>
            <param name="file">The file to add.</param>
            <param name="detectImageSize">Specify whether if you want to auto detect the image size or not.</param>
        </member>
        <member name="T:ActiveUp.WebControls.FileDirectoryCollection">
            <summary>
            A collection of directories.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.FileDirectoryCollection.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.FileDirectoryCollection.Add(ActiveUp.WebControls.FileDirectory)">
            <summary>
            Adds a FileDirectory object in the collection.
            </summary>
            <param name="directory">The FileDirectory object</param>
        </member>
        <member name="M:ActiveUp.WebControls.FileDirectoryCollection.Add(System.String)">
            <summary>
            Adds a FileDirectory object in the collection specifying the path.
            </summary>
            <param name="path">The path of the FileDirectory object.</param>
        </member>
        <member name="M:ActiveUp.WebControls.FileDirectoryCollection.Add(System.String,System.String)">
            <summary>
            Adds a FileDirectory object in the collection specifying the path.
            </summary>
            <param name="name">The name of the FileDirectory object.</param>
            <param name="path">The path of the FileDirectory object.</param>
        </member>
        <member name="M:ActiveUp.WebControls.FileDirectoryCollection.Add(System.String,System.String,System.String)">
            <summary>
            Adds a FileDirectory object in the collection specifying the path.
            </summary>
            <param name="name">The name of the FileDirectory object.</param>
            <param name="path">The path of the FileDirectory object.</param>
            <param name="webPath">The web path of the FileDirectory.</param>
        </member>
        <member name="M:ActiveUp.WebControls.FileDirectoryCollection.Remove(System.Int32)">
            <summary>
            Removes the File at the specified index position.
            </summary>
            <param name="index"></param>
        </member>
        <member name="P:ActiveUp.WebControls.FileDirectoryCollection.Item(System.Int32)">
            <summary>
            Returns the File at the specified index position.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.FileDirectoryCollection.Item(System.String)">
            <summary>
            Gets a directory based on its name.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.FileDirectoryCollection.LoadAll">
            <summary>
            Loads all the image contained in the directories.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.FileDirectoryCollection.ClearFiles">
            <summary>
            Clear all the image contained in the directories.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.HtmlAttribute">
            <summary>
            The HtmlAttribute object represents a named value associated with an HtmlElement.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlAttribute.#ctor(System.String,System.String)">
            <summary>
            This constructs an HtmlAttribute object with the given name and value. For wierd
            HTML attributes that don't have a value (e.g. "NOWRAP"), specify null as the value.
            </summary>
            <param name="name">The name of the attribute</param>
            <param name="value">The value of the attribute</param>
        </member>
        <member name="P:ActiveUp.WebControls.HtmlAttribute.Name">
            <summary>
            The name of the attribute. e.g. WIDTH
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.HtmlAttribute.Value">
            <summary>
            The value of the attribute. e.g. 100%
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlAttribute.ToString">
            <summary>
            This will return an HTML-formatted version of this attribute. NB. This is
            not SGML or XHTML safe, as it caters for null-value attributes such as "NOWRAP".
            </summary>
            <returns></returns>
        </member>
        <member name="T:ActiveUp.WebControls.HtmlAttributeCollection">
            <summary>
            This is a collection of attributes. Typically, this is associated with a particular
            element. This collection is searchable by both the index and the name of the attribute.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlAttributeCollection.#ctor(ActiveUp.WebControls.HtmlElement)">
            <summary>
            This will create an empty collection of attributes.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlAttributeCollection.Add(ActiveUp.WebControls.HtmlAttribute)">
            <summary>
            This will add an element to the collection.
            </summary>
            <param name="attribute">The attribute to add.</param>
            <returns>The index at which it was added.</returns>
        </member>
        <member name="P:ActiveUp.WebControls.HtmlAttributeCollection.Item(System.Int32)">
            <summary>
            This provides direct access to an attribute in the collection by its index.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlAttributeCollection.FindByName(System.String)">
            <summary>
            This will search the collection for the named attribute. If it is not found, this
            will return null.
            </summary>
            <param name="name">The name of the attribute to find.</param>
            <returns>The attribute, or null if it wasn't found.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlAttributeCollection.IndexOf(System.String)">
            <summary>
            This will return the index of the attribute with the specified name. If it is
            not found, this method will return -1.
            </summary>
            <param name="name">The name of the attribute to find.</param>
            <returns>The zero-based index, or -1.</returns>
        </member>
        <member name="P:ActiveUp.WebControls.HtmlAttributeCollection.Item(System.String)">
            <summary>
            This overload allows you to have direct access to an attribute by providing
            its name. If the attribute does not exist, null is returned.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.HtmlDocument">
            <summary>
            This is the basic HTML document object used to represent a sequence of HTML.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlDocument.#ctor(System.String,System.Boolean)">
            <summary>
            This will create a new document object by parsing the HTML specified.
            </summary>
            <param name="html">The HTML to parse.</param>
            <param name="wantSpaces">if set to <c>true</c> add spaces.</param>
        </member>
        <member name="P:ActiveUp.WebControls.HtmlDocument.Nodes">
            <summary>
            This is the collection of nodes used to represent this document.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlDocument.Create(System.String)">
            <summary>
            This will create a new document object by parsing the HTML specified.
            </summary>
            <param name="html">The HTML to parse.</param>
            <returns>An instance of the newly created object.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlDocument.Create(System.String,System.Boolean)">
            <summary>
            This will create a new document object by parsing the HTML specified.
            </summary>
            <param name="html">The HTML to parse.</param>
            <param name="wantSpaces">Set this to true if you want to preserve all whitespace from the input HTML</param>
            <returns>An instance of the newly created object.</returns>
        </member>
        <member name="P:ActiveUp.WebControls.HtmlDocument.HTML">
            <summary>
            This will return the HTML used to represent this document.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.HtmlDocument.XHTML">
            <summary>
            This will return the XHTML document used to represent this document.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.HtmlElement">
            <summary>
            The HtmlElement object represents any HTML element. An element has a name
            and zero or more attributes.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlElement.#ctor(System.String)">
            <summary>
            This constructs a new HTML element with the specified tag name.
            </summary>
            <param name="name">The name of this element</param>
        </member>
        <member name="P:ActiveUp.WebControls.HtmlElement.Name">
            <summary>
            This is the tag name of the element. e.g. BR, BODY, TABLE etc.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.HtmlElement.Nodes">
            <summary>
            This is the collection of all child nodes of this one. If this node is actually
            a text node, this will throw an InvalidOperationException exception.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.HtmlElement.Attributes">
            <summary>
            This is the collection of attributes associated with this element.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.HtmlElement.IsTerminated">
            <summary>
            This flag indicates that the element is explicitly closed using the "<name/>" method.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.HtmlElement.IsExplicitlyTerminated">
            <summary>
            This flag indicates that the element is explicitly closed using the name method.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlElement.ToString">
            <summary>
            This will return the HTML representation of this element.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ActiveUp.WebControls.HtmlElement.HTML">
            <summary>
            This will return the HTML for this element and all subnodes.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.HtmlElement.XHTML">
            <summary>
            This will return the XHTML for this element and all subnodes.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.HtmlElementEncoder">
            <summary>
            HTML 4 Entity coding routines
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.HtmlEncoder">
            <summary> This is a utility class to encode special characters and do formatting
            for HTML output.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlEncoder.Encode(System.String)">
            <summary>  Do "smart" encodging on a string. This means that valid HTML entities and tags,
            Helma macros and HTML comments are passed through unescaped.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlEncoder.Encode(System.String,System.Text.StringBuilder)">
            <summary>  Do "smart" encodging on a string. This means that valid HTML entities and tags,
            Helma macros and HTML comments are passed through unescaped.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlEncoder.Encode(System.String,System.Text.StringBuilder,System.Collections.ArrayList)">
            <summary>  Do "smart" encodging on a string. This means that valid HTML entities and tags,
            Helma macros and HTML comments are passed through unescaped.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlEncoder.EncodeFormValue(System.String)">
            <summary>*
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlEncoder.EncodeFormValue(System.String,System.Text.StringBuilder)">
            <summary>*
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlEncoder.EncodeAll(System.String)">
            <summary>*
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlEncoder.EncodeAll(System.String,System.Text.StringBuilder)">
            <summary>*
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlEncoder.EncodeAll(System.String,System.Text.StringBuilder,System.Boolean)">
            <summary>*
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlEncoder.EncodeXml(System.String)">
            <summary>*
            *
            </summary>
            <param name="str">...
            *
            </param>
            <returns> ...
            
            </returns>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlEncoder.EncodeXml(System.String,System.Text.StringBuilder)">
            <summary>*
            *
            </summary>
            <param name="str">...
            </param>
            <param name="ret">...
            
            </param>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlEncoder.PrintCharRange(System.Int32,System.Int32)">
            <summary>
            Prints the character range.
            </summary>
            <param name="from">From position.</param>
            <param name="to">To position.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlEncoder.StackPush(System.Collections.Stack,System.Object)">
            <summary>
            Push in the stack
            </summary>
            <param name="stack">The stack.</param>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="T:ActiveUp.WebControls.HtmlNode">
            <summary>
            The HtmlNode is the base for all objects that may appear in HTML. Currently, 
            this implemention only supports HtmlText and HtmlElement node types.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlNode.#ctor">
            <summary>
            This constructor is used by the subclasses.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlNode.ToString">
            <summary>
            This will render the node as it would appear in HTML.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ActiveUp.WebControls.HtmlNode.Parent">
            <summary>
            This will return the parent of this node, or null if there is none.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.HtmlNode.Next">
            <summary>
            This will return the next sibling node. If this is the last one, it will return null.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.HtmlNode.Previous">
            <summary>
            This will return the previous sibling node. If this is the first one, it will return null.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.HtmlNode.FirstChild">
            <summary>
            This will return the first child node. If there are no children, this
            will return null.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.HtmlNode.LastChild">
            <summary>
            This will return the last child node. If there are no children, this
            will return null.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.HtmlNode.Index">
            <summary>
            This will return the index position within the parent's nodes that this one resides.
            If this is not in a collection, this will return -1.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.HtmlNode.IsRoot">
            <summary>
            This will return true if this is a root node (has no parent).
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.HtmlNode.IsChild">
            <summary>
            This will return true if this is a child node (has a parent).
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlNode.IsDescendentOf(ActiveUp.WebControls.HtmlNode)">
            <summary>
            This will return true if the node passed is a descendent of this node.
            </summary>
            <param name="node">The node that might be the parent or grandparent (etc.)</param>
            <returns>True if this node is a descendent of the one passed in.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlNode.IsAncestorOf(ActiveUp.WebControls.HtmlNode)">
            <summary>
            This will return true if the node passed is one of the children or grandchildren of this node.
            </summary>
            <param name="node">The node that might be a child.</param>
            <returns>True if this node is an ancestor of the one specified.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlNode.GetCommonAncestor(ActiveUp.WebControls.HtmlNode)">
            <summary>
            This will return the ancstor that is common to this node and the one specified.
            </summary>
            <param name="node">The possible node that is relative</param>
            <returns>The common ancestor, or null if there is none</returns>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlNode.Remove">
            <summary>
            This will remove this node and all child nodes from the tree. If this
            is a root node, this operation will do nothing.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlNode.SetParent(ActiveUp.WebControls.HtmlElement)">
            <summary>
            Internal method to maintain the identity of the parent node.
            </summary>
            <param name="parentNode">The parent node of this one</param>
        </member>
        <member name="P:ActiveUp.WebControls.HtmlNode.HTML">
            <summary>
            This will return the full HTML to represent this node (and all child nodes).
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.HtmlNode.XHTML">
            <summary>
            This will return the full XHTML to represent this node (and all child nodes)
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.HtmlNodeCollection">
            <summary>
            This object represents a collection of HtmlNodes, which can be either HtmlText
            or HtmlElement objects. The order in which the nodes occur directly corresponds
            to the order in which they appear in the original HTML document.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlNodeCollection.#ctor(ActiveUp.WebControls.HtmlElement)">
            <summary>
            A collection is usually associated with a parent node (an HtmlElement, actually)
            but you can pass null to implement an abstracted collection.
            </summary>
            <param name="parent">The parent element, or null if it is not appropriate</param>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlNodeCollection.Add(ActiveUp.WebControls.HtmlNode)">
            <summary>
            This will add a node to the collection.
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlNodeCollection.IndexOf(ActiveUp.WebControls.HtmlNode)">
            <summary>
            This is used to identify the index of this node as it appears in the collection.
            </summary>
            <param name="node">The node to test</param>
            <returns>The index of the node, or -1 if it is not in this collection</returns>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlNodeCollection.Insert(System.Int32,ActiveUp.WebControls.HtmlNode)">
            <summary>
            This will insert a node at the given position
            </summary>
            <param name="index">The position at which to insert the node.</param>
            <param name="node">The node to insert.</param>
        </member>
        <member name="P:ActiveUp.WebControls.HtmlNodeCollection.Item(System.Int32)">
            <summary>
            This property allows you to change the node at a particular position in the
            collection.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.HtmlNodeCollection.Item(System.String)">
            <summary>
            This allows you to directly access the first element in this colleciton with the given name.
            If the node does not exist, this will return null.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlNodeCollection.FindByName(System.String)">
            <summary>
            This will search though this collection of nodes for all elements with the
            specified name. If you want to search the subnodes recursively, you should
            pass True as the parameter in searchChildren. This search is guaranteed to
            return nodes in the order in which they are found in the document.
            </summary>
            <param name="name">The name of the element to find</param>
            <returns>A collection of all the nodes that macth.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlNodeCollection.FindByName(System.String,System.Boolean)">
            <summary>
            This will search though this collection of nodes for all elements with the
            specified name. If you want to search the subnodes recursively, you should
            pass True as the parameter in searchChildren. This search is guaranteed to
            return nodes in the order in which they are found in the document.
            </summary>
            <param name="name">The name of the element to find</param>
            <param name="searchChildren">True if you want to search sub-nodes, False to
            only search this collection.</param>
            <returns>A collection of all the nodes that macth.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlNodeCollection.FindByAttributeName(System.String)">
            <summary>
            This will search though this collection of nodes for all elements with the an
            attribute with the given name.
            </summary>
            <param name="attributeName">Name of the attribute.</param>
            <returns>
            A collection of all the nodes that macth.
            </returns>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlNodeCollection.FindByAttributeName(System.String,System.Boolean)">
            <summary>
            This will search though this collection of nodes for all elements with the an
            attribute with the given name. 
            </summary>
            <param name="attributeName">The name of the attribute to find</param>
            <param name="searchChildren">True if you want to search sub-nodes, False to
            only search this collection.</param>
            <returns>A collection of all the nodes that macth.</returns>
        </member>
        <member name="T:ActiveUp.WebControls.HtmlParser">
            <summary>
            This is the main HTML parser class. I recommend you don't play around too much in here
            as it's a little fiddly.
            
            Bascially, this class will build a tree containing HtmlNode elements.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.HtmlParser.ParseStatus">
            <summary>
            Internal FSM to represent the state of the parser
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlParser.#ctor">
            <summary>
            This constructs a new parser. Even though this object is currently stateless,
            in the future, parameters coping for tollerance and SGML (etc.) will be passed.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.HtmlParser.RemoveEmptyElementText">
            <summary>
            The default mechanism will extract a pure DOM tree, which will contain many text
            nodes containing just whitespace (carriage returns etc.) However, with normal
            parsing, these are useless and only serve to complicate matters. Therefore, this
            option exists to automatically remove those empty text nodes.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlParser.Parse(System.String)">
            <summary>
            This will parse a string containing HTML and will produce a domain tree.
            </summary>
            <param name="html">The HTML to be parsed</param>
            <returns>A tree representing the elements</returns>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlParser.MoveNodesDown(ActiveUp.WebControls.HtmlNodeCollection@,System.Int32,ActiveUp.WebControls.HtmlElement)">
            <summary>
            This will move all the nodes from the specified index to the new parent.
            </summary>
            <param name="nodes">The collection of nodes</param>
            <param name="node_index">The index of the first node (in the above collection) to move</param>
            <param name="new_parent">The node which will become the parent of the moved nodes</param>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlParser.FindTagOpenNodeIndex(ActiveUp.WebControls.HtmlNodeCollection,System.String)">
            <summary>
            This will find the corresponding opening tag for the named one. This is identified as
            the most recently read node with the same name, but with no child nodes.
            </summary>
            <param name="nodes">The collection of nodes</param>
            <param name="name">The name of the tag</param>
            <returns>The index of the opening tag, or -1 if it was not found</returns>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlParser.RemoveWhitespace(System.String)">
            <summary>
            This will remove redundant whitespace from the string
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlParser.RemoveComments(System.String)">
            <summary>
            This will remove all HTML comments from the input string. This will
            not remove comment markers from inside tag attribute values.
            </summary>
            <param name="input">Input HTML containing comments</param>
            <returns>HTML containing no comments</returns>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlParser.RemoveSGMLComments(System.String)">
            <summary>
            This will remove all HTML comments from the input string. This will
            not remove comment markers from inside tag attribute values.
            </summary>
            <param name="input">Input HTML containing comments</param>
            <returns>HTML containing no comments</returns>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlParser.PreprocessScript(System.String,System.String)">
            <summary>
            This will encode the scripts within the page so they get passed through the
            parser properly. This is due to some people using comments protect the script
            and others who don't. It also takes care of issues where the script itself has
            HTML comments in (in strings, for example).
            </summary>
            <param name="input">The HTML to examine</param>
            <param name="tag_name">The tag name.</param>
            <returns>
            The HTML with the scripts marked up differently
            </returns>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlParser.GetTokens(System.String)">
            <summary>
            This will tokenise the HTML input string.
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:ActiveUp.WebControls.HtmlText">
            <summary>
            The HtmlText node represents a simple piece of text from the document.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlText.#ctor(System.String)">
            <summary>
            This constructs a new node with the given text content.
            </summary>
            <param name="text"></param>
        </member>
        <member name="P:ActiveUp.WebControls.HtmlText.Text">
            <summary>
            This is the text associated with this node.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.HtmlText.ToString">
            <summary>
            This will return the text for outputting inside an HTML document.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ActiveUp.WebControls.HtmlText.HTML">
            <summary>
            This will return the HTML to represent this text object.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.HtmlText.XHTML">
            <summary>
            This will return the XHTML to represent this text object.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.ImageDeleteEventArgs">
            <summary>
            This class holds the informations about the uploaded image.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ImageDeleteEventArgs.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ImageDeleteEventArgs.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Create the object with the specified data.
            </summary>
            <param name="filename">The file name of the file.</param>
            <param name="directory">The directory.</param>
            <param name="success">The status of the upload.</param>
        </member>
        <member name="P:ActiveUp.WebControls.ImageDeleteEventArgs.Filename">
            <summary>
            Gets or sets the filename.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ImageDeleteEventArgs.Directory">
            <summary>
            Gets or sets the Directory.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ImageDeleteEventArgs.Success">
            <summary>
            Gets or sets the value indicating if the uploaded image was a success.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.ImageUploadedEventArgs">
            <summary>
            This class holds the informations about the uploaded image.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ImageUploadedEventArgs.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ImageUploadedEventArgs.#ctor(System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Create the object with the specified data.
            </summary>
            <param name="filename">The file name of the file.</param>
            <param name="directory">The directory.</param>
            <param name="size">The size of the image.</param>
            <param name="success">The status of the upload.</param>
        </member>
        <member name="P:ActiveUp.WebControls.ImageUploadedEventArgs.Filename">
            <summary>
            Gets or sets the filename.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ImageUploadedEventArgs.Directory">
            <summary>
            Gets or sets the Directory.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ImageUploadedEventArgs.Size">
            <summary>
            Gets or sets the size in bytes.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ImageUploadedEventArgs.Success">
            <summary>
            Gets or sets the value indicating if the uploaded image was a success.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.KeyCode">
            <summary>
            Key code enumeration.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.KeyCode">
            <summary>
            Key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Modifiers">
            <summary>
            Modifier key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.None">
            <summary>
            None key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.LButton">
            <summary>
            Left button key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.RButton">
            <summary>
            Right button key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Cancel">
            <summary>
            Cancel key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.MButton">
            <summary>
            Medium button key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.XButton1">
            <summary>
            Button 1 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.XButton2">
            <summary>
            Button 2 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Back">
            <summary>
            Back key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Tab">
            <summary>
            Tab key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.LineFeed">
            <summary>
            Line feed key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Clear">
            <summary>
            Clear key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Return">
            <summary>
            Returns key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Enter">
            <summary>
            Enter key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.ShiftKey">
            <summary>
            Shift key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.ControlKey">
            <summary>
            Control key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Menu">
            <summary>
            Menu key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Pause">
            <summary>
            Pause key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Capital">
            <summary>
            Capital key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.CapsLock">
            <summary>
            Caps lock key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Escape">
            <summary>
            Escape key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Space">
            <summary>
            Space key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Prior">
            <summary>
            Prior key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.PageUp">
            <summary>
            Page up key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Next">
            <summary>
            Next key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.PageDown">
            <summary>
            Page down key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.End">
            <summary>
            End key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Home">
            <summary>
            Home key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Left">
            <summary>
            Left key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Up">
            <summary>
            Up key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Right">
            <summary>
            Right key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Down">
            <summary>
            Down key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Select">
            <summary>
            Select key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Print">
            <summary>
            Print key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Execute">
            <summary>
            Execute key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Snapshot">
            <summary>
            Snapshot key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.PrintScreen">
            <summary>
            Print screen key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Insert">
            <summary>
            Insert key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Delete">
            <summary>
            Delete key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Help">
            <summary>
            Help key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.D0">
            <summary>
            D0 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.D1">
            <summary>
            D1 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.D2">
            <summary>
            D2 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.D3">
            <summary>
            D3 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.D4">
            <summary>
            D4 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.D5">
            <summary>
            D5 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.D6">
            <summary>
            D6 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.D7">
            <summary>
            D7 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.D8">
            <summary>
            D8 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.D9">
            <summary>
            D9 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.A">
            <summary>
            A key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.B">
            <summary>
            B key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.C">
            <summary>
            C key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.D">
            <summary>
            D key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.E">
            <summary>
            E key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.F">
            <summary>
            F key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.G">
            <summary>
            G key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.H">
            <summary>
            H key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.I">
            <summary>
            I key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.J">
            <summary>
            J key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.K">
            <summary>
            K key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.L">
            <summary>
            L key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.M">
            <summary>
            M key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.N">
            <summary>
            N key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.O">
            <summary>
            O key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.P">
            <summary>
            P key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Q">
            <summary>
            Q key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.R">
            <summary>
            R key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.S">
            <summary>
            S key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.T">
            <summary>
            T key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.U">
            <summary>
            U key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.V">
            <summary>
            V key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.W">
            <summary>
            W key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.X">
            <summary>
            X key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Y">
            <summary>
            Y key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Z">
            <summary>
            Z key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.LWin">
            <summary>
            Left window key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.RWin">
            <summary>
            Right window key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Apps">
            <summary>
            Application key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.NumPad0">
            <summary>
            Numeric pad 0 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.NumPad1">
            <summary>
            Numeric pad 1 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.NumPad2">
            <summary>
            Numeric pad 2 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.NumPad3">
            <summary>
            Numeric pad 3 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.NumPad4">
            <summary>
            Numeric pad 4 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.NumPad5">
            <summary>
            Numeric pad 5 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.NumPad6">
            <summary>
            Numeric pad 6 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.NumPad7">
            <summary>
            Numeric pad 7 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.NumPad8">
            <summary>
            Numeric pad 8 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.NumPad9">
            <summary>
            Numeric pad 9 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Multiply">
            <summary>
            Multiply key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Add">
            <summary>
            Add key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Separator">
            <summary>
            Separator key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Subtract">
            <summary>
            Substract key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Decimal">
            <summary>
            Decimal key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Divide">
            <summary>
            Divide key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.F1">
            <summary>
            F1 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.F2">
            <summary>
            F2 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.F3">
            <summary>
            F3 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.F4">
            <summary>
            F4 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.F5">
            <summary>
            F5 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.F6">
            <summary>
            F6 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.F7">
            <summary>
            F7 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.F8">
            <summary>
            F8 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.F9">
            <summary>
            F9 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.F10">
            <summary>
            F10 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.F11">
            <summary>
            F11 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.F12">
            <summary>
            F12 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.F13">
            <summary>
            F13 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.F14">
            <summary>
            F14 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.F15">
            <summary>
            F15 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.F16">
            <summary>
            F16 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.F17">
            <summary>
            F17 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.F18">
            <summary>
            F18 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.F19">
            <summary>
            F19 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.F20">
            <summary>
            F20 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.F21">
            <summary>
            F21 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.F22">
            <summary>
            F22 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.F23">
            <summary>
            F23 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.F24">
            <summary>
            F24 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.NumLock">
            <summary>
            Numeric lock key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Scroll">
            <summary>
            Scroll key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.LShiftKey">
            <summary>
            Left shift key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.RShiftKey">
            <summary>
            Righ shift key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.LControlKey">
            <summary>
            Left control key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.RControlKey">
            <summary>
            Right control key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.LMenu">
            <summary>
            Left menu key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.RMenu">
            <summary>
            Right menu key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.ProcessKey">
            <summary>
            Process key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Attn">
            <summary>
            Attn key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Crsel">
            <summary>
            Cursor selection key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Exsel">
            <summary>
            External selection key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.EraseEof">
            <summary>
            Erase end of file key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Play">
            <summary>
            Play key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Zoom">
            <summary>
            Zoom key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.NoName">
            <summary>
            No name key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Pa1">
            <summary>
            Pa 1 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.OemClear">
            <summary>
            Oem clear key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.KanaMode">
            <summary>
            Kana mode key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.HanguelMode">
            <summary>
            Hanguel mode key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.HangulMode">
            <summary>
            Hangul mode key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.JunjaMode">
            <summary>
            Janja mode key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.FinalMode">
            <summary>
            Final mode key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.HanjaMode">
            <summary>
            Handja mode key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.KanjiMode">
            <summary>
            Kanji mode key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.IMEConvert">
            <summary>
            IME convert key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.IMENonconvert">
            <summary>
            IME non convert key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.IMEAceept">
            <summary>
            IME accept key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.IMEModeChange">
            <summary>
            IME mode change key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.BrowserBack">
            <summary>
            Browser back key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.BrowserForward">
            <summary>
            Browser forward key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.BrowserRefresh">
            <summary>
            Browser refresh key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.BrowserStop">
            <summary>
            Browser stop key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.BrowserSearch">
            <summary>
            Browser search key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.BrowserFavorites">
            <summary>
            Browser favorite key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.BrowserHome">
            <summary>
            Browser home key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.VolumeMute">
            <summary>
            Volume mute key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.VolumeDown">
            <summary>
            Volume down key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.VolumeUp">
            <summary>
            Volume up key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.MediaNextTrack">
            <summary>
            Media next track key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.MediaPreviousTrack">
            <summary>
            Media previous track key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.MediaStop">
            <summary>
            Media stop key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.MediaPlayPause">
            <summary>
            Media play pause key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.LaunchMail">
            <summary>
            Launch mail key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.SelectMedia">
            <summary>
            Select media key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.LaunchApplication1">
            <summary>
            Launch application 1 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.LaunchApplication2">
            <summary>
            Launch application 2 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.OemSemicolon">
            <summary>
            Oem semi colon key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Oemplus">
            <summary>
            Oem plus key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Oemcomma">
            <summary>
            Oem comma key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.OemMinus">
            <summary>
            Oem minus key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.OemPeriod">
            <summary>
            Oem period key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.OemQuestion">
            <summary>
            Oem question key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Oemtilde">
            <summary>
            Oem tilde key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.OemOpenBrackets">
            <summary>
            Oem open brackets key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.OemPipe">
            <summary>
            Oem pipe key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.OemCloseBrackets">
            <summary>
            Oem close brackets key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.OemQuotes">
            <summary>
            Oem quotes key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Oem8">
            <summary>
            Oem 8 key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.OemBackslash">
            <summary>
            Oem back slash key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Shift">
            <summary>
            Shift key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Control">
            <summary>
            Control key code.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.KeyCode.Alt">
            <summary>
            Alt key code.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.KeyDisabledItem">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.KeyDisabledItem"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.KeyDisabledItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.KeyDisabledItem"/> class.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.KeyDisabledItem.Code">
            <summary>
            Gets or sets the code.
            </summary>
            <value>The code.</value>
        </member>
        <member name="T:ActiveUp.WebControls.KeyDisabledItemCollection">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.KeyDisabledItemCollection"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.KeyDisabledItemCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.KeyDisabledItemCollection"/> class.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.KeyDisabledItemCollection.Count">
            <summary>
            When implemented by a class, gets the number of
            elements contained in the <see cref="T:System.Collections.ICollection"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:ActiveUp.WebControls.KeyDisabledItemCollection.IsSynchronized">
            <summary>
            When implemented by a class, gets a value
            indicating whether access to the <see cref="T:System.Collections.ICollection"/> is synchronized
            (thread-safe).
            </summary>
            <value></value>
        </member>
        <member name="P:ActiveUp.WebControls.KeyDisabledItemCollection.IsFixedSize">
            <summary>
            When implemented by a class, gets a value indicating whether the <see cref="T:System.Collections.IList"/> has a fixed size.
            </summary>
            <value></value>
        </member>
        <member name="P:ActiveUp.WebControls.KeyDisabledItemCollection.IsReadOnly">
            <summary>
            When implemented by a class, gets a value indicating whether the <see cref="T:System.Collections.IList"/> is read-only.
            </summary>
            <value></value>
        </member>
        <member name="P:ActiveUp.WebControls.KeyDisabledItemCollection.SyncRoot">
            <summary>
            When implemented by a class, gets an object that
            can be used to synchronize access to the <see cref="T:System.Collections.ICollection"/>.
            </summary>
            <value></value>
        </member>
        <member name="M:ActiveUp.WebControls.KeyDisabledItemCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            When implemented by a class, copies the elements of
            the <see cref="T:System.Collections.ICollection"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="index">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="array"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException">
            	<para>
            		<paramref name="array"/> is multidimensional.</para>
            	<para>-or-</para>
            	<para>
            		<paramref name="index"/> is equal to or greater than the length of <paramref name="array"/>.</para>
            	<para>-or-</para>
            	<para>The number of elements in the source <see cref="T:System.Collections.ICollection"/> is greater than the available space from <paramref name="index"/> to the end of the destination <paramref name="array"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException">The type of the source <see cref="T:System.Collections.ICollection"/> cannot be cast automatically to the type of the destination <paramref name="array"/>.</exception>
        </member>
        <member name="P:ActiveUp.WebControls.KeyDisabledItemCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:ActiveUp.WebControls.KeyDisabledItem"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="M:ActiveUp.WebControls.KeyDisabledItemCollection.Remove(System.Object)">
            <summary>
            Removes the specified item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:ActiveUp.WebControls.KeyDisabledItemCollection.Remove(ActiveUp.WebControls.KeyDisabledItem)">
            <summary>
            Removes the specified item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:ActiveUp.WebControls.KeyDisabledItemCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:ActiveUp.WebControls.KeyDisabledItemCollection.Insert(System.Int32,ActiveUp.WebControls.KeyDisabledItem)">
            <summary>
            Inserts at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:ActiveUp.WebControls.KeyDisabledItemCollection.Add(System.Object)">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.KeyDisabledItemCollection.Add(ActiveUp.WebControls.KeyDisabledItem)">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.KeyDisabledItemCollection.Add(ActiveUp.WebControls.KeyCode)">
            <summary>
            Adds the specified code.
            </summary>
            <param name="code">The code.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.KeyDisabledItemCollection.Clear">
            <summary>
            When implemented by a class, removes all items from the <see cref="T:System.Collections.IList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"/> is read-only.</exception>
        </member>
        <member name="M:ActiveUp.WebControls.KeyDisabledItemCollection.Contains(System.Object)">
            <summary>
            Determines whether contains the specified item.
            </summary>
            <param name="item">The item.</param>
            <returns>
            	<c>true</c> if contains the specified item; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ActiveUp.WebControls.KeyDisabledItemCollection.Contains(ActiveUp.WebControls.KeyDisabledItem)">
            <summary>
            Determines whether contains the specified item.
            </summary>
            <param name="item">The item.</param>
            <returns>
            	<c>true</c> if contains the specified item; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ActiveUp.WebControls.KeyDisabledItemCollection.IndexOf(System.Object)">
            <summary>
            Searches for the specified <see cref="T:ActiveUp.WebControls.KeyDisabledItem"/> and returns the zero-based index of the first occurrence within the entire collection.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.KeyDisabledItemCollection.IndexOf(ActiveUp.WebControls.KeyDisabledItem)">
            <summary>
            Searches for the specified <see cref="T:ActiveUp.WebControls.KeyDisabledItem"/> and returns the zero-based index of the first occurrence within the entire collection.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.KeyDisabledItemCollection.RemoveAt(System.Int32)">
            <summary>
            When implemented by a class, removes the <see cref="T:System.Collections.IList"/>
            item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.IList"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            	<para>The <see cref="T:System.Collections.IList"/> is read-only.</para>
            	<para>-or-</para>
            	<para>The <see cref="T:System.Collections.IList"/> has a fixed size.</para>
            </exception>
        </member>
        <member name="M:ActiveUp.WebControls.KeyDisabledItemCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/>
            that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:ActiveUp.WebControls.LabeledCode">
            <summary>
            Represents a labeled code to use with SpecialChars, FontColor and CodeSnippet tools.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.LabeledCode.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.LabeledCode.#ctor(System.String)">
            <summary>
            Add a LabeledCode based on it's code. Label will take the same value as the code.
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:ActiveUp.WebControls.LabeledCode.#ctor(System.String,System.String)">
            <summary>
            Add a LabeledCode based on it's label and code.
            </summary>
            <param name="label"></param>
            <param name="code"></param>
        </member>
        <member name="P:ActiveUp.WebControls.LabeledCode.Label">
            <summary>
            Gets or sets the Label of the LabeledCode.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.LabeledCode.Code">
            <summary>
            Gets or sets the Code of the LabeledCode.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.LabeledCodeCollection">
            <summary>
            Contains a collection of LabeledCode objects.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.LabeledCodeCollection.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.LabeledCodeCollection.Add(ActiveUp.WebControls.LabeledCode)">
            <summary>
            Add a LabeledCode object.
            </summary>
            <param name="labeledCode">The LabeledCode object.</param>
        </member>
        <member name="M:ActiveUp.WebControls.LabeledCodeCollection.Add(System.String)">
            <summary>
            Adds a LabeledCode based on its Code.
            </summary>
            <param name="code">The Code.</param>
        </member>
        <member name="M:ActiveUp.WebControls.LabeledCodeCollection.AddRange(System.String[])">
            <summary>
            Adds a range of labeled codes.
            </summary>
            <param name="codes">The codes in a string array.</param>
        </member>
        <member name="M:ActiveUp.WebControls.LabeledCodeCollection.Add(System.String,System.String)">
            <summary>
            Adds a LabeledCode based on its Label and Code.
            </summary>
            <param name="label">The Label.</param>
            <param name="code">The Code.</param>
        </member>
        <member name="M:ActiveUp.WebControls.LabeledCodeCollection.Remove(System.Int32)">
            <summary>
            Removes the LabeledCode at the specified index position.
            </summary>
            <param name="index"></param>
        </member>
        <member name="P:ActiveUp.WebControls.LabeledCodeCollection.Item(System.Int32)">
            <summary>
            Returns the LabeledCode at the specified index position.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.LabeledCodeCollection.Item(System.String)">
            <summary>
            Returns the LabeledCode with the specified code.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.LabeledCodeCollection.Labels">
            <summary>
            Gets the labels contained in the collection.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.LabeledCodeCollection.Codes">
            <summary>
            Gets the codes contained in the collection.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.LocalizationHelper">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.LocalizationHelper"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.LocalizationHelper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.LocalizationHelper"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.LocalizationHelper.Load(System.String)">
            <summary>
            Loads the specified file using the file path.
            </summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.LocalizationHelper.Load(System.String,System.Text.Encoding)">
            <summary>
            Load the specified localization settings.
            </summary>
            <param name="filePath">The full path to the XML file.</param>
            <param name="encoding">The encoding.</param>
            <returns>The LocalizationSettings class.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.LocalizationHelper.LoadFromString(System.String)">
            <summary>
            Load the specified localization settings from the specified string.
            </summary>
            <param name="content">The XML content.</param>
            <returns>The LocalizationSettings class.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.LocalizationHelper.Apply(ActiveUp.WebControls.LocalizationSettings,ActiveUp.WebControls.Editor)">
            <summary>
            Apply the specified localization settings to the specified Editor object
            </summary>
            <param name="ls">The localization settings to apply.</param>
            <param name="editor">The editor to update.</param>
            TODO: remove internal
        </member>
        <member name="T:ActiveUp.WebControls.LocalizationSettings">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.LocalizationSettings"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.LocalizationSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.LocalizationSettings"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.LocalizationSettings.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.LocalizationSettings"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:ActiveUp.WebControls.LocalizationSettings.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.LocalizationSettings"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="code">The code.</param>
        </member>
        <member name="M:ActiveUp.WebControls.LocalizationSettings.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.LocalizationSettings"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="code">The code.</param>
            <param name="compatibleVersion">The compatible version.</param>
        </member>
        <member name="P:ActiveUp.WebControls.LocalizationSettings.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:ActiveUp.WebControls.LocalizationSettings.Code">
            <summary>
            Gets or sets the code.
            </summary>
            <value>The code.</value>
        </member>
        <member name="P:ActiveUp.WebControls.LocalizationSettings.CompatibleVersion">
            <summary>
            Gets or sets the compatible version.
            </summary>
            <value>The compatible version.</value>
        </member>
        <member name="P:ActiveUp.WebControls.LocalizationSettings.Texts">
            <summary>
            Gets the texts.
            </summary>
            <value>The texts.</value>
        </member>
        <member name="T:ActiveUp.WebControls.LocalizedText">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.LocalizedText"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.LocalizedText.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.LocalizedText"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.LocalizedText.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.LocalizedText"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.LocalizedText.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.LocalizedText"/> class.
            </summary>
            <param name="id">The id.</param>
            <param name="val">The val.</param>
        </member>
        <member name="P:ActiveUp.WebControls.LocalizedText.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:ActiveUp.WebControls.LocalizedText.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:ActiveUp.WebControls.LocalizedTextId">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.LocalizedTextId"/> object.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.DESIGN_LABEL">
            <summary>
            Editor design label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.HTML_LABEL">
            <summary>
            Editor html label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.PREVIEW_LABEL">
            <summary>
            Editor preview label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.TOOL_SEPARATOR">
            <summary>
            Tool separator tooltip label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.TOOL_BOLD">
            <summary>
            Tool bold tooltip label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.TOOL_ITALIC">
            <summary>
            Tool italic tooltip label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.TOOL_UNDERLINE">
            <summary>
            Tool underline tooltip label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.TOOL_CUT">
            <summary>
            Tool cut tooltip label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.TOOL_COPY">
            <summary>
            Tool copy tooltip label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.TOOL_PASTE">
            <summary>
            Tool paste tooltip label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.TOOL_CUSTOM_LINKS">
            <summary>
            Tool custom links tooltip label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.TOOL_PARAGRAPH">
            <summary>
            Tool paragraph tooltip label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.TOOL_FONT_FACE">
            <summary>
            Tool font face tooltip label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.TOOL_FONT_SIZE">
            <summary>
            Tool font size tooltip label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.TOOL_ALIGN_LEFT">
            <summary>
            Tool align left tooltip label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.TOOL_ALIGN_CENTER">
            <summary>
            Tool align center tooltip label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.TOOL_ALIGN_RIGHT">
            <summary>
            Tool align right tooltip label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.TOOL_ALIGN_JUSTIFY">
            <summary>
            Tool align justify tooltip label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.TOOL_ORDERED_LIST">
            <summary>
            Tool ordered list tooltip label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.TOOL_UNORDERED_LIST">
            <summary>
            Tool unordered list tooltip label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.TOOL_INDENT">
            <summary>
            Tool indent tooltip label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.TOOL_OUTDENT">
            <summary>
            Tool outdent tooltip label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.TOOL_PRINT">
            <summary>
            Tool print tooltip label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.TOOL_SUBSCRIPT">
            <summary>
            Tool subscript tooltip label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.TOOL_SUPERSCRIPT">
            <summary>
            Tool super script tooltip label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.TOOL_STRIKE_THROUGH">
            <summary>
            Tool strike through tooltip label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.TOOL_FIND">
            <summary>
            Tool find tooltip label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.TOOL_REPLACE">
            <summary>
            Tool replace tooltip label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.TOOL_IMAGE">
            <summary>
            Tool image tooltip label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.TOOL_HYPERLINK">
            <summary>
            Tool hyper link tooltip label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.TOOL_CODE_CLEANER">
            <summary>
            Tool code cleaner tooltip label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.TOOL_FLASH">
            <summary>
            Tool flash tooltip label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.TOOL_CUSTOM_TAGS">
            <summary>
            Tool custom tags tooltip label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.TOOL_CODE_SNIPPETS">
            <summary>
            Tool code snippets tooltip label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.TOOL_SPELL_CHECKER">
            <summary>
            Tool spell checker tooltip label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.TOOL_SPELL_CHECKER_TITLE">
            <summary>
            Tool spell checker title label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.TOOL_SPELL_CHECKER_LABEL">
            <summary>
            Tool spell checker label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.TOOL_FIND_TITLE">
            <summary>
            Tool find title label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.TOOL_FIND_LABEL">
            <summary>
            Tool find label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.TOOL_REPLACE_TITLE">
            <summary>
            Tool replace title label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.TOOL_REPLACE_LABEL">
            <summary>
            Tool replace label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.TOOL_LINK_TITLE">
            <summary>
            Tool hyperlink label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.TOOL_IMAGE_TITLE">
            <summary>
            Tool image title.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.TOOL_TABLE_TITLE">
            <summary>
            Tool table title.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.TOOL_FLASH_TITLE">
            <summary>
            Tool flash title.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_CASE_SENSITIVE">
            <summary>
            Case sensitive label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_WHOLE_WORD">
            <summary>
            Whole word label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_ADDRESS">
            <summary>
            Address label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_TEXT">
            <summary>
            Text label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_ANCHOR">
            <summary>
            Anchor label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_TARGET">
            <summary>
            Target label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_TOOLTIP">
            <summary>
            Tooltip label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_ALT_TEXT">
            <summary>
            Alt text label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_PICTURE">
            <summary>
            Picture label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_ALIGNMENT">
            <summary>
            Alignment label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_BORDER_THICKNESS">
            <summary>
            Border thickness label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_HORIZONTAL_SPACING">
            <summary>
            Horizontal spacing label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_VERTICAL_SPACING">
            <summary>
            Vertical spacing label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_SPECIFY_SIZE">
            <summary>
            Specify size label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_WIDTH">
            <summary>
            Width label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_HEIGHT">
            <summary>
            Height label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_IN_PIXELS">
            <summary>
            In pixel label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_IN_PERCENT">
            <summary>
            In percent label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_KEEP_ASPECT_RATIO">
            <summary>
            Keep aspect ratio label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_CSS_CLASS">
            <summary>
            Css class label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_ROWS">
            <summary>
            Rows label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_COLS">
            <summary>
            Cols label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_SPECIFY_WIDTH">
            <summary>
            Specify width label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_FLOAT">
            <summary>
            Float label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_CELL_PADDING">
            <summary>
            Cell padding label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_CELL_SPACING">
            <summary>
            Cell spacing label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_SPECIFY_HEIGHT">
            <summary>
            Specify height label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_SIZE">
            <summary>
            Size label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_COLOR">
            <summary>
            Color label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_LIGHT_BORDER">
            <summary>
            Light border label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_DARK_BORDER">
            <summary>
            Dark border label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_COLLAPSE_TABLE_BORDER">
            <summary>
            Collapse table border label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_USE_BACKGROUND_PICTURE">
            <summary>
            Use background picture label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_FLASH_FILE">
            <summary>
            Flash file label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_SPECIFY_CLASS_ID">
            <summary>
            Specify class id label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_CLASS_ID">
            <summary>
            Class id label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_FLASH_VERSION">
            <summary>
            Flash version label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_FLASH_ALIGNMENT">
            <summary>
            Flash alignment label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_OPTIONS">
            <summary>
            Options label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_QUALITY">
            <summary>
            Quality label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_LOOP">
            <summary>
            Loop label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_AUTO_PLAY">
            <summary>
            Auto play label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_YES">
            <summary>
            Yes label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_NO">
            <summary>
            No label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_DEFAULT">
            <summary>
            Default label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_ABSBOTTOM">
            <summary>
            Absolute bottom label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_ABSMIDDLE">
            <summary>
            Absolute middle label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_BASELINE">
            <summary>
            Baseline label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_BOTTOM">
            <summary>
            Bottom label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_LEFT">
            <summary>
            Left label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_MIDDLE">
            <summary>
            Middle label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_RIGHT">
            <summary>
            Right label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_TEXTTOP">
            <summary>
            Text top label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_TOP">
            <summary>
            Top label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_CENTER">
            <summary>
            Center label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_CENTER_TOP">
            <summary>
            Center top label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_CENTER_CENTER">
            <summary>
            Center label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_CENTER_BOTTOM">
            <summary>
            Center bottom label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_LEFT_TOP">
            <summary>
            Top left label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_LEFT_CENTER">
            <summary>
            Center left label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_LEFT_BOTTOM">
            <summary>
            Bottom left label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_RIGHT_TOP">
            <summary>
            Top right label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_RIGHT_CENTER">
            <summary>
            Center right label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_RIGHT_BOTTOM">
            <summary>
            Bottom right label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_LOW">
            <summary>
            Low label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_MEDIUM">
            <summary>
            Medium label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_HIGH">
            <summary>
            High label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_BLACK">
            <summary>
            Black label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_MAROON">
            <summary>
            Maroon label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_OLIVE">
            <summary>
            Olive label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_GREEN">
            <summary>
            Green label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_TEAL">
            <summary>
            Teal label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_NAVY">
            <summary>
            Navy label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_PURPLE">
            <summary>
            Purple label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_WHITE">
            <summary>
            White label
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_SILVER">
            <summary>
            Silver label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_RED">
            <summary>
            Red label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_YELLOW">
            <summary>
            Yellow label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_LIME">
            <summary>
            Lime label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_AQUA">
            <summary>
            Aqua label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_BLUE">
            <summary>
            Blue label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_FUCHSIA">
            <summary>
            Fuschia label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_MORE_COLORS">
            <summary>
            More colors label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_NOT_IN_DICTIONARY">
            <summary>
            Not in dictionary label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_CHANGE_TO">
            <summary>
            Change to label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.LABEL_SUGGESTION">
            <summary>
            Suggestion label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.CAT_GENERAL">
            <summary>
            General category label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.CAT_DISPOSITION">
            <summary>
            Disposition category label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.CAT_SIZE">
            <summary>
            Size category label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.CAT_STYLE">
            <summary>
            Style category label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.CAT_LAYOUT">
            <summary>
            Layout category label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.CAT_BORDERS">
            <summary>
            Border category label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.CAT_BACKGROUND">
            <summary>
            Background category label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.CAT_OPTIONS">
            <summary>
            Options category label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.BUTTON_NEXT">
            <summary>
            Next button label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.BUTTON_REPLACE_ALL">
            <summary>
            Replace all button label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.BUTTON_REPLACE">
            <summary>
            Replace button label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.BUTTON_CANCEL">
            <summary>
            Cancel button label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.BUTTON_REMOVE_LINK">
            <summary>
            Remove link button label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.BUTTON_INSERT_LINK">
            <summary>
            Insert link button label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.BUTTON_OK">
            <summary>
            Ok button label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.BUTTON_IGNORE">
            <summary>
            Ignore button label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.BUTTON_IGNORE_ALL">
            <summary>
            Ignore all button label.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.LocalizedTextId.BUTTON_CLOSE">
            <summary>
            Close button label.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.LocalizedTexts">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.LocalizedTexts"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.LocalizedTexts.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.LocalizedTexts"/> class.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.LocalizedTexts.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ActiveUp.WebControls.LocalizedText"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:ActiveUp.WebControls.LocalizedTexts.Item(System.String)">
            <summary>
            Gets the <see cref="T:ActiveUp.WebControls.LocalizedText"/> with the specified id.
            </summary>
            <value></value>
        </member>
        <member name="M:ActiveUp.WebControls.LocalizedTexts.Add(ActiveUp.WebControls.LocalizedText)">
            <summary>
            Adds the specified localized text.
            </summary>
            <param name="localizedText">The localized text.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.LocalizedTexts.Add(System.String,System.String)">
            <summary>
            Adds <see cref="T:ActiveUp.WebControls.LocalizedText"/> at the specified id.
            </summary>
            <param name="id">The id.</param>
            <param name="val">The val.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.LocalizedTexts.Remove(System.Int32)">
            <summary>
            Removes <see cref="T:ActiveUp.WebControls.LocalizedText"/> at the specified index.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:ActiveUp.WebControls.LocalizedTexts.ConvertToStringToRegisterArray">
            <summary>
            Converts to string the registered array.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ActiveUp.WebControls.Tag">
            <summary>
            Used with the CustomTag or ParagraphStyle tool.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Tag.#ctor">
            <summary>
            The default contructor.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Tag.#ctor(System.String,System.String)">
            <summary>
            Constructor to set the Label and Tag Name.
            </summary>
            <param name="label">The Label</param>
            <param name="tagName">The Tag Name</param>
        </member>
        <member name="M:ActiveUp.WebControls.Tag.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Contrustor to set the Label, Tag Name, Attribute Name and Attribute Value.
            </summary>
            <param name="label">The Label.</param>
            <param name="tagName">The Tag Name.</param>
            <param name="attributeName">The Attribute Name.</param>
            <param name="attributeValue">The Attribute Value.</param>
        </member>
        <member name="P:ActiveUp.WebControls.Tag.Label">
            <summary>
            The Label.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Tag.TagName">
            <summary>
            The Tag Name.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Tag.AttributeName">
            <summary>
            The Attribute Name.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Tag.AttributeValue">
            <summary>
            The Attribute Value.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.TagCollection">
            <summary>
            This collection contains all Custom Tags to use with the CustomTag tool.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.TagCollection.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.TagCollection.Add(ActiveUp.WebControls.Tag)">
            <summary>
            Adds a Custom Tag object.
            </summary>
            <param name="tag">The CustomTag object.</param>
        </member>
        <member name="M:ActiveUp.WebControls.TagCollection.Add(System.String,System.String)">
            <summary>
            Adds a Custom Tag based on it's Label and Tag Name.
            </summary>
            <param name="label">The Label.</param>
            <param name="tagName">The Tag Name.</param>
        </member>
        <member name="M:ActiveUp.WebControls.TagCollection.Add(System.String,System.String,System.String,System.String)">
            <summary>
            Adds a Tag based on its Label, Tag Name, Attribute Name and Attribute Value.
            </summary>
            <param name="label">The Label.</param>
            <param name="tagName">The Tag Name.</param>
            <param name="attributeName">The Attribute Name.</param>
            <param name="attributeValue">The Attribute Value.</param>
        </member>
        <member name="M:ActiveUp.WebControls.TagCollection.Remove(System.Int32)">
            <summary>
            Removes the Tag at the specified index position.
            </summary>
            <param name="index"></param>
        </member>
        <member name="P:ActiveUp.WebControls.TagCollection.Item(System.Int32)">
            <summary>
            Returns the Custom Tag at the specified index position.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TagCollection.Item(System.String)">
            <summary>
            Returns the Tag with the specified label.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TagCollection.Labels">
            <summary>
            Gets the labels contained in the collection.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TagCollection.TagNames">
            <summary>
            Gets the tag names contained in the collection.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TagCollection.AttributeValues">
            <summary>
            Gets the attribute values contained in the collection.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.TagCollection.AttributeNames">
            <summary>
            Gets the attribute names contained in the collection.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.ToolAlignCenter">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolAlignCenter"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolAlignCenter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolAlignCenter"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolAlignCenter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolAlignCenter"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolAlignCenter.RenderDesign(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders at the design time.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolAlignCenter.OnPreRender(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary> 
            <param name="e">Event Args</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolAlignJustify">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolAlignJustify"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolAlignJustify.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolAlignJustify"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolAlignJustify.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolAlignJustify"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolAlignJustify.RenderDesign(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders at the design time.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolAlignJustify.OnPreRender(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary> 
            <param name="e">Event Args</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolAlignLeft">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolAlignLeft"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolAlignLeft.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolAlignLeft"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolAlignLeft.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolAlignLeft"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolAlignLeft.RenderDesign(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders at the design time.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolAlignLeft.OnPreRender(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary> 
            <param name="e">Event Args</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolAlignRight">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolAlignRight"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolAlignRight.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolAlignRight"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolAlignRight.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolAlignRight"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolAlignRight.RenderDesign(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders at the design time.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolAlignRight.OnPreRender(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary> 
            <param name="e">Event Args</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolBold">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolBold"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolBold.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolBold"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolBold.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolBold"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolBold.RenderDesign(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders at the design time.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolBold.OnPreRender(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary> 
            <param name="e">Event Args</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolCodeCleaner">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolCodeCleaner"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCodeCleaner.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolCodeCleaner"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCodeCleaner.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolCodeCleaner"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCodeCleaner.RenderDesign(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders at the design time.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCodeCleaner.OnPreRender(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary> 
            <param name="e">Event Args</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolCodeSnippets">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolCodeSnippets"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCodeSnippets.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolCodeSnippets"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCodeSnippets.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolCodeSnippets"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCodeSnippets.OnPreRender(System.EventArgs)">
            <summary>
            Notifies the Popup control to perform any necessary prerendering steps prior to saving view state and rendering content.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCodeSnippets.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends the Popup content to a provided HtmlTextWriter object, which writes the content to be rendered on the client.
            </summary>
            <param name="output">The HtmlTextWriter object that receives the server control content.</param>
        </member>
        <member name="P:ActiveUp.WebControls.ToolCodeSnippets.Snippets">
            <summary>
            Gets the snippets.
            </summary>
            <value>The snippets.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ToolCodeSnippets.CustomTitle">
            <summary>
            Gets or sets the custom title.
            </summary>
            <value>The custom title.</value>
        </member>
        <member name="T:ActiveUp.WebControls.ToolColorPickerBase">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolColorPickerBase"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolColorPickerBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolColorPickerBase"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolColorPickerBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolColorPickerBase"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolColorPickerBase.OnPreRender(System.EventArgs)">
            <summary>
            Notifies the Popup control to perform any necessary prerendering steps prior to saving view state and rendering content.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolColorPickerBase.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends the Popup content to a provided HTBlTextWriter object, which writes the content to be rendered on the client.
            </summary>
            <param name="output">The HTBlTextWriter object that receives the server control content.</param>
        </member>
        <member name="P:ActiveUp.WebControls.ToolColorPickerBase.ClientColorSelected">
            <summary>
            Gets or sets the client color selected.
            </summary>
            <value>The client color selected.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ToolColorPickerBase.WidthPopup">
            <summary>
            Gets or sets the popup width.
            </summary>
            <value>The popup width.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ToolColorPickerBase.HeightPopup">
            <summary>
            Gets or sets the popup height.
            </summary>
            <value>The popup height.</value>
        </member>
        <member name="T:ActiveUp.WebControls.ToolCopy">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolCopy"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCopy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolCopy"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCopy.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolCopy"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCopy.RenderDesign(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders at the design time.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCopy.OnPreRender(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary> 
            <param name="e">Event Args</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolCustom">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolCustom"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCustom.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolCustom"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCustom.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolCustom"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolCustomLinks">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolCustomLinks"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCustomLinks.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolCustomLinks"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCustomLinks.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolCustomLinks"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCustomLinks.OnPreRender(System.EventArgs)">
            <summary>
            Notifies the Popup control to perform any necessary prerendering steps prior to saving view state and rendering content.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCustomLinks.RegisterAPIScriptBlock">
            <summary>
            Register the client-side script block in the ASPX page.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCustomLinks.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends the Popup content to a provided HtmlTextWriter object, which writes the content to be rendered on the client.
            </summary>
            <param name="output">The HtmlTextWriter object that receives the server control content.</param>
        </member>
        <member name="P:ActiveUp.WebControls.ToolCustomLinks.Links">
            <summary>
            Gets or sets the links.
            </summary>
            <value>The links.</value>
        </member>
        <member name="T:ActiveUp.WebControls.ToolCustomTags">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolCustomTags"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCustomTags.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolCustomTags"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCustomTags.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolCustomTags"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCustomTags.ParseCssFile(System.String,System.String,System.String)">
            <summary>
            Parse the specified CssFile and include the class names in the TagCollection.
            </summary>
            <param name="filename">The full path to the file.</param>
            <param name="tagName">The tag name to use.</param>
            <param name="attributeName">The attribute name to use.</param>
            <returns>The number of classes added.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCustomTags.ParseCssFile(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Parse the specified CssFile and include the class names in the TagCollection using exclude and include filters.
            </summary>
            <param name="filename">The full path to the file.</param>
            <param name="tagName">The tag name to use.</param>
            <param name="attributeName">The attribute name to use.</param>
            <param name="includeFilter">The string to find to include.</param>
            <param name="excludeFilter">The string to find to exclude.</param>
            <returns>The number of classes added.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCustomTags.ValidateClassName(System.String,System.String,System.String)">
            <summary>
            Validate the specified class.
            </summary>
            <param name="className">The class name.</param>
            <param name="includeFilter">The include filter.</param>
            <param name="excludeFilter">The exclude filter.</param>
            <returns></returns>
        </member>
        <member name="P:ActiveUp.WebControls.ToolCustomTags.Tags">
            <summary>
            Gets or sets the custom tags.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCustomTags.OnPreRender(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary> 
            <param name="e">Event Args</param>
        </member>
        <member name="P:ActiveUp.WebControls.ToolCustomTags.TitleText">
            <summary>
            Gets or sets the title text.
            </summary>
            <value>The title text.</value>
        </member>
        <member name="T:ActiveUp.WebControls.ToolCut">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolCut"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCut.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolCut"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCut.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolCut"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCut.RenderDesign(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders at the design time.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolCut.OnPreRender(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary> 
            <param name="e">Event Args</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolFind">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolFind"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolFind.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolFind"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolFind.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolFind"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolFind.RenderDesign(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders at the design time.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolFind.OnPreRender(System.EventArgs)">
            <summary>
            Notifies the tool to perform any necessary prerendering steps prior to saving view state and rendering content.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolFlash">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolFlash"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolFlash.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolFlash"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolFlash.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolFlash"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolFlash.RenderDesign(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders at the design time.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolFlash.OnPreRender(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary> 
            <param name="e">Event Args</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolFontColor">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolFontColor"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolFontColor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolFontColor"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolFontColor.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolFontColor"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolFontColor.RenderDesign(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the DropDownList at the design time.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolFontColor.OnPreRender(System.EventArgs)">
            <summary>
            Notifies the Popup control to perform any necessary prerendering steps prior to saving view state and rendering content.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolFontColor.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends the Popup content to a provided HTBlTextWriter object, which writes the content to be rendered on the client.
            </summary>
            <param name="output">The HTBlTextWriter object that receives the server control content.</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolFontFace">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolFontFace"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolFontFace.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolFontFace"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolFontFace.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolFontFace"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolFontFace.OnPreRender(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary> 
            <param name="e">Event Args</param>
        </member>
        <member name="P:ActiveUp.WebControls.ToolFontFace.Fonts">
            <summary>
            Gets or sets the ArrayList containing the font names.
            </summary>
            <value>The fonts.</value>
        </member>
        <member name="T:ActiveUp.WebControls.ToolFontSize">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolFontSize"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolFontSize.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolFontSize"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolFontSize.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolFontSize"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolFontSize.OnPreRender(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary> 
            <param name="e">Event Args</param>
        </member>
        <member name="P:ActiveUp.WebControls.ToolFontSize.Sizes">
            <summary>
            Gets or sets the ArrayList containing the font sizes..
            </summary>
            <value>The sizes.</value>
        </member>
        <member name="T:ActiveUp.WebControls.ToolHighlight">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolHighlight"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolHighlight.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolHighlight"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolHighlight.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolHighlight"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolHighlight.RenderDesign(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the DropDownList at the design time.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolHighlight.OnPreRender(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary> 
            <param name="e">Event Args</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolHighlight.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends the Popup content to a provided HTBlTextWriter object, which writes the content to be rendered on the client.
            </summary>
            <param name="output">The HTBlTextWriter object that receives the server control content.</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolIeSpellCheck">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolIeSpellCheck"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolIeSpellCheck.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolIeSpellCheck"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolIeSpellCheck.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolIeSpellCheck"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolIeSpellCheck.RenderDesign(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders at the design time.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolIeSpellCheck.OnPreRender(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary> 
            <param name="e">Event Args</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolImage">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolImage"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolImage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolImage"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolImage.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolImage"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolImage.RenderDesign(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders at the design time.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolImage.OnPreRender(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary> 
            <param name="e">Event Args</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolIndent">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolIndent"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolIndent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolIndent"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolIndent.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolIndent"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolIndent.RenderDesign(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders at the design time.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolIndent.OnPreRender(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary> 
            <param name="e">Event Args</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolInsertRule">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolInsertRule"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolInsertRule.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolInsertRule"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolInsertRule.RenderDesign(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders at the design time.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolInsertRule.OnPreRender(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary> 
            <param name="e">Event Args</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolItalic">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolItalic"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolItalic.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolItalic"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolItalic.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolItalic"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolItalic.RenderDesign(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders at the design time.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolItalic.OnPreRender(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary> 
            <param name="e">Event Args</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolLibrary">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolLibrary"/> object.
            </summary>
        </member>
        <member name="E:ActiveUp.WebControls.ToolLibrary.Upload">
            <summary>
            Upload event.
            </summary>
        </member>
        <member name="E:ActiveUp.WebControls.ToolLibrary.Delete">
            <summary>
            Delete event.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolLibrary.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolLibrary"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolLibrary.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolLibrary"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolLibrary.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolLibrary"/> class.
            </summary>
            <param name="id">The id.</param>
            <param name="iconsDirectory">The icons directory.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolLibrary.RenderDesign(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders at the design time.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolLibrary.OnPreRender(System.EventArgs)">
            <summary>
            Notifies the tool to perform any necessary prerendering steps prior to saving view state and rendering content.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolLibrary.RegisterAPIScriptBlock">
            <summary>
            Registers the API script block.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolLibrary.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends the Popup content to a provided HtmlTextWriter object, which writes the content to be rendered on the client.
            </summary>
            <param name="output">The HtmlTextWriter object that receives the server control content.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolLibrary.ConvertSizeToInformaticUnit(System.Object)">
            <summary>
            Converts the size to informatic unit.
            </summary>
            <param name="size">The size.</param>
            <returns></returns>
        </member>
        <member name="P:ActiveUp.WebControls.ToolLibrary.ImageExtension">
            <summary>
            Gets or sets the image extension.
            </summary>
            <value>The image extension.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ToolLibrary.CreateThumbnail">
            <summary>
            Specify whether you want to automatically create a thumbnail when an image is uploaded.
            </summary>
            <remarks>Note: if you load all the content of the directory where you upload the image, you will have both the thumbnail and the normal picture. You can specify the thumbnail prefix using the <see cref="P:ActiveUp.WebControls.ToolLibrary.ThumbnailPrefix"/> property.</remarks>
        </member>
        <member name="P:ActiveUp.WebControls.ToolLibrary.UploadMaxSize">
            <summary>
            Gets or sets the maximum size of a file in bytes to be accepted for upload.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolLibrary.UniqueFilenames">
            <summary>
            If true, makes sure the uploaded image filename is unique by adding random numbers. 
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolLibrary.ShowErrors">
            <summary>
            Lets you specify if you want to display error message to the end-user using the JScript message boxes.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolLibrary.ShowSuccess">
            <summary>
            Lets you specify if you want to display success message to the end-user using the JScript message boxes.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolLibrary.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
            <summary>
            Enables the control to process an event raised when a form is posted to the server.
            </summary>
            <param name="eventArgument">A String that represents an optional event argument to be passed to the event handler.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolLibrary.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
            <summary>
            Notify the ASP.NET application that the state of the control has changed.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolLibrary.OnUpload(ActiveUp.WebControls.ImageUploadedEventArgs)">
            <summary>
            Raises the upload event.
            </summary>
            <param name="e">The <see cref="T:ActiveUp.WebControls.ImageUploadedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolLibrary.OnDelete(ActiveUp.WebControls.ImageDeleteEventArgs)">
            <summary>
            Raises the delete event.
            </summary>
            <param name="e">The <see cref="T:ActiveUp.WebControls.ImageDeleteEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:ActiveUp.WebControls.ToolLibrary.Directories">
            <summary>
            Gets or sets the FileDirectory objects used by the Image tool.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolLibrary.Resize(System.String,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Resizes the specified image file with the specified width and height.
            </summary>
            <param name="sourceImage">The source image file.</param>
            <param name="destinationImage">The destination image file.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="forceSaving">Force saving.</param>
        </member>
        <member name="P:ActiveUp.WebControls.ToolLibrary.ConstrainProportions">
            <summary>
            Specify whether you want to keep image proportions when resizing.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolLibrary.MaxSize">
            <summary>
            Gets or sets the maximum image size.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolLibrary.GetImageFormat(System.String)">
            <summary>
            Return an ImageFormat object based on the format name.
            </summary>
            <param name="_outputFormat">The format name.</param>
            <returns>The ImageFormat name.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolLibrary.Sizer(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Return a size based on the current and maximum values.
            </summary>
            <param name="currentWidth">The current width.</param>
            <param name="currentHeight">The current height.</param>
            <param name="maxWidth">The maximum width.</param>
            <param name="maxHeight">The maximum height.</param>
            <returns></returns>
        </member>
        <member name="P:ActiveUp.WebControls.ToolLibrary.ResizeSmaller">
            <summary>
            Specify whether you want to resize an image if its size is smaller than the max values.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolLibrary.ThumbnailPrefix">
            <summary>
            Gets or sets the prefix to use for thumbnails filenames.
            </summary>
            <remarks>By default, the file name of the thumbnail is &quot;tn_[originalfilename]&quot;. You can specify here the thumbnail prefix you want. </remarks>
        </member>
        <member name="P:ActiveUp.WebControls.ToolLibrary.ThumbnailSize">
            <summary>
            Gets or sets the thumbnail image size.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolLibrary.UploadDisabled">
            <summary>
            Gets or sets a value indicating whether upload is disabled.
            </summary>
            <value><c>true</c> if upload is disabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ToolLibrary.DeleteButtonDisabled">
            <summary>
            Gets or sets a value indicating whether delete button is disabled.
            </summary>
            <value>
            	<c>true</c> if delete button is disabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ActiveUp.WebControls.ToolLibrary.TreeIcons">
            <summary>
            Gets or sets the tree icons.
            </summary>
            <value>The tree icons.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ToolLibrary.DeleteIcon">
            <summary>
            Gets or sets the delete icon.
            </summary>
            <value>The delete icon.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ToolLibrary.IconsDirectory">
            <summary>
            Gets or sets the icons directory.
            </summary>
            <value>The icons directory.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ToolLibrary.TreeFont">
            <summary>
            Gets the tree font.
            </summary>
            <value>The tree font.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ToolLibrary.LoadOnDemand">
            <summary>
            Gets or sets a value indicating whether you want to use load on demand.
            </summary>
            <value><c>true</c> if load on demand used; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ToolLibrary.PathLoadOnDemand">
            <summary>
            Gets or sets the path for the load on demand.
            </summary>
            <value>The path for the load on demand.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ToolLibrary.ExpandedTree">
            <summary>
            Gets or sets a value indicating whether the tree can be expanded.
            </summary>
            <value><c>true</c> if the tree can be expanded; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:ActiveUp.WebControls.ToolLink">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolLink"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolLink.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolLink"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolLink.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolLink"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolLink.RenderDesign(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders at the design time.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolLink.OnPreRender(System.EventArgs)">
            <summary>
            Notifies the tool to perform any necessary prerendering steps prior to saving view state and rendering content.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolLinkItem">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolLinkItem"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolLinkItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolLinkItem"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolLinkItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolLinkItem"/> class.
            </summary>
            <param name="address">The address.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolLinkItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolLinkItem"/> class.
            </summary>
            <param name="address">The address.</param>
            <param name="text">The text.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolLinkItem.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolLinkItem"/> class.
            </summary>
            <param name="address">The address.</param>
            <param name="text">The text.</param>
            <param name="anchor">The anchor.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolLinkItem.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolLinkItem"/> class.
            </summary>
            <param name="address">The address.</param>
            <param name="text">The text.</param>
            <param name="anchor">The anchor.</param>
            <param name="target">The target.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolLinkItem.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolLinkItem"/> class.
            </summary>
            <param name="address">The address.</param>
            <param name="text">The text.</param>
            <param name="anchor">The anchor.</param>
            <param name="target">The target.</param>
            <param name="tooltip">The tooltip.</param>
        </member>
        <member name="P:ActiveUp.WebControls.ToolLinkItem.Address">
            <summary>
            Gets or sets the address.
            </summary>
            <value>The address.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ToolLinkItem.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ToolLinkItem.Anchor">
            <summary>
            Gets or sets the anchor.
            </summary>
            <value>The anchor.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ToolLinkItem.Target">
            <summary>
            Gets or sets the target.
            </summary>
            <value>The target.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ToolLinkItem.Tooltip">
            <summary>
            Gets or sets the tooltip.
            </summary>
            <value>The tooltip.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ToolLinkItem.Links">
            <summary>
            Gets or sets the links.
            </summary>
            <value>The links.</value>
        </member>
        <member name="T:ActiveUp.WebControls.ToolLinkItemCollection">
            <summary>
            A Collection of <see cref="T:ActiveUp.WebControls.ToolLinkItemCollection"/>.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ToolLinkItemCollection._links">
            <summary>
            ArrayList of <see cref="T:ActiveUp.WebControls.ToolLinkItem"/>.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolLinkItemCollection.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolLinkItemCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets a <see cref="T:ActiveUp.WebControls.ToolLinkItem"/> at the specified index.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolLinkItemCollection.Item(System.Int32)">
            <summary>
            Gets or sets a <see cref="T:ActiveUp.WebControls.ToolLinkItem"/> at the specified index.
            </summary>		
        </member>
        <member name="P:ActiveUp.WebControls.ToolLinkItemCollection.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolLinkItemCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolLinkItemCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolLinkItemCollection.IsFixedSize">
            <summary>
            Gets a boolean value indicating whether the current instance has a fixed size.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolLinkItemCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the current instance is read-only.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolLinkItemCollection.System#Collections#IList#Remove(System.Object)">
            <summary>	
            Removes the first occurrence of a specific <see cref="T:ActiveUp.WebControls.ToolLinkItem"/> from the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.ToolLinkItem"/> to remove from the collection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolLinkItemCollection.Remove(ActiveUp.WebControls.ToolLinkItem)">
            <summary>
            Removes the first occurrence of a specific <see cref="T:ActiveUp.WebControls.ToolLinkItem"/> from the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.ToolLinkItem"/> to remove from the collection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolLinkItemCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts a <see cref="T:ActiveUp.WebControls.ToolLinkItem"/> to the collection at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="item">The <see cref="T:ActiveUp.WebControls.ToolLinkItem"/> to insert into the Collection.</param>		
        </member>
        <member name="M:ActiveUp.WebControls.ToolLinkItemCollection.Insert(System.Int32,ActiveUp.WebControls.ToolLinkItem)">
            <summary>
            Inserts a <see cref="T:ActiveUp.WebControls.ToolLinkItem"/> to the collection at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="item">The <see cref="T:ActiveUp.WebControls.ToolLinkItem"/> to insert into the Collection.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolLinkItemCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds a <see cref="T:ActiveUp.WebControls.ToolLinkItem"/> to the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.ToolLinkItem"/> to add to the collection.</param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolLinkItemCollection.Add(ActiveUp.WebControls.ToolLinkItem)">
            <summary>
            Adds a <see cref="T:ActiveUp.WebControls.ToolLinkItem"/> to the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.ToolLinkItem"/> to add to the collection.</param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolLinkItemCollection.System#Collections#IList#Clear">
            <summary>
            Removes all <see cref="T:ActiveUp.WebControls.ToolLinkItem"/> from the collection.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolLinkItemCollection.Clear">
            <summary>
            Removes all <see cref="T:ActiveUp.WebControls.ToolLinkItem"/> from the collection.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolLinkItemCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether a <see cref="T:ActiveUp.WebControls.ToolLinkItem"/> is in the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.ToolLinkItem"/> to locate in the collection. The element to locate can be a null reference.</param>
            <returns>true if value is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolLinkItemCollection.Contains(ActiveUp.WebControls.ToolLinkItem)">
            <summary>
            Determines whether a <see cref="T:ActiveUp.WebControls.ToolLinkItem"/> is in the collection.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.ToolLinkItem"/> to locate in the collection. The element to locate can be a null reference.</param>
            <returns>true if value is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolLinkItemCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of a specific <see cref="T:ActiveUp.WebControls.ToolLinkItem"/> in the current instance.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.ToolLinkItem"/> to locate in the current instance.</param>
            <returns>The index of value if found in the current instance; otherwise, -1.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolLinkItemCollection.IndexOf(ActiveUp.WebControls.ToolLinkItem)">
            <summary>
            Determines the index of a specific <see cref="T:ActiveUp.WebControls.ToolLinkItem"/> in the current instance.
            </summary>
            <param name="item">The <see cref="T:ActiveUp.WebControls.ToolLinkItem"/> to locate in the current instance.</param>
            <returns>The index of value if found in the current instance; otherwise, -1.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolLinkItemCollection.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:ActiveUp.WebControls.ToolLinkItem"/> at the specified index within the collection.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:ActiveUp.WebControls.ToolLinkItem"/> to remove.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolLinkItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:ActiveUp.WebControls.ToolLinkItem"/> at the specified index within the collection.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:ActiveUp.WebControls.ToolLinkItem"/> to remove.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolLinkItemCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolLinkItemCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements from the current instance to the specified collection, starting at the specified index in the array.
            </summary>
            <param name="array">A one-dimensional, zero-based Array that is the destination of the elements copied from the current instance. </param>
            <param name="index">A Int32 that specifies the zero-based index in array at which copying begins.</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolMultiCodeSnippets">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolMultiCodeSnippets"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolMultiCodeSnippets.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolMultiCodeSnippets"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolMultiCodeSnippets.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolMultiCodeSnippets"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="P:ActiveUp.WebControls.ToolMultiCodeSnippets.NumberOfColumns">
            <summary>
            Gets or sets the number of columns.
            </summary>
            <value>The number of columns.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ToolMultiCodeSnippets.UseButton">
            <summary>
            Gets or sets a value indicating whether use button instead of link.
            </summary>
            <value><c>true</c> if use button instead of link; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ToolMultiCodeSnippets.CodeSnippets">
            <summary>
            Gets the code snippets.
            </summary>
            <value>The code snippets.</value>
        </member>
        <member name="M:ActiveUp.WebControls.ToolMultiCodeSnippets.RenderDesign(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders at the design time.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolMultiCodeSnippets.OnPreRender(System.EventArgs)">
            <summary>
            Notifies the tool to perform any necessary prerendering steps prior to saving view state and rendering content.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolMultiCodeSnippets.LoadViewState(System.Object)">
            <summary>
            Loads the view state.
            </summary>
            <param name="savedState">The saved view state..</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolMultiCodeSnippets.SaveViewState">
            <summary>
            Saves the view state.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.ToolMultiCodeSnippets.TrackViewState">
            <summary>
            Tracks the view state.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.ToolOrderedList">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolOrderedList"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolOrderedList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolOrderedList"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolOrderedList.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolOrderedList"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolOrderedList.RenderDesign(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders at the design time.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolOrderedList.OnPreRender(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary> 
            <param name="e">Event Args</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolOutdent">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolOutdent"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolOutdent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolOutdent"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolOutdent.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolOutdent"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolOutdent.RenderDesign(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders at the design time.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolOutdent.OnPreRender(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary> 
            <param name="e">Event Args</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolParagraph">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolParagraph"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolParagraph.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolParagraph"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolParagraph.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolParagraph"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolParagraph.OnPreRender(System.EventArgs)">
            <summary>
            Notifies the Popup control to perform any necessary prerendering steps prior to saving view state and rendering content.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="P:ActiveUp.WebControls.ToolParagraph.ParagraphStyles">
            <summary>
            Gets the paragraph styles.
            </summary>
            <value>The paragraph styles.</value>
        </member>
        <member name="T:ActiveUp.WebControls.ToolPaste">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolPaste"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolPaste.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolPaste"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolPaste.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolPaste"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolPaste.RenderDesign(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders at the design time.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolPaste.OnPreRender(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary> 
            <param name="e">Event Args</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolPrint">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolPrint"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolPrint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolPrint"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolPrint.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolPrint"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolPrint.RenderDesign(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders at the design time.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolPrint.OnPreRender(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary> 
            <param name="e">Event Args</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolReplace">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolReplace"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolReplace.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolReplace"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolReplace.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolReplace"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolReplace.RenderDesign(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders at the design time.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolReplace.OnPreRender(System.EventArgs)">
            <summary>
            Notifies the tool to perform any necessary prerendering steps prior to saving view state and rendering content.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolRule">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolRule"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolRule.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolRule"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolRule.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolRule"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolRule.RenderDesign(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders at the design time.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolRule.OnPreRender(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary> 
            <param name="e">Event Args</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolSelectAll">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolSelectAll"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolSelectAll.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolSelectAll"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolSelectAll.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolSelectAll"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolSelectAll.RenderDesign(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders at the design time.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolSelectAll.OnPreRender(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary> 
            <param name="e">Event Args</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolSeparator">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolSeparator"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolSeparator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolSeparator"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolSeparator.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolSeparator"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolSeparator.RenderDesign(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders at the design time.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolSeparator.OnPreRender(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary> 
            <param name="e">Event Args</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolSpecialChars">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolSpecialChars"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolSpecialChars.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolSpecialChars"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolSpecialChars.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolSpecialChars"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolSpecialChars.RenderDesign(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the DropDownList at the design time.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolSpecialChars.OnPreRender(System.EventArgs)">
            <summary>
            Notifies the Popup control to perform any necessary prerendering steps prior to saving view state and rendering content.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolSpecialChars.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends the Popup content to a provided HTBlTextWriter object, which writes the content to be rendered on the client.
            </summary>
            <param name="output">The HTBlTextWriter object that receives the server control content.</param>
        </member>
        <member name="P:ActiveUp.WebControls.ToolSpecialChars.Chars">
            <summary>
            Gets or sets the chars.
            </summary>
            <value>The chars.</value>
        </member>
        <member name="T:ActiveUp.WebControls.ToolSpellChecker">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolSpellChecker"/> object.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ToolSpellChecker._PARAMETER_IS_CALLBACK_">
            <summary>
            Indicates if the postback becomes from an ajax panel.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.ToolSpellChecker._PARAMETER_CLIENT_ID">
            <summary>
            Client id of the callback.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolSpellChecker.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolSpellChecker"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolSpellChecker.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolSpellChecker"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="P:ActiveUp.WebControls.ToolSpellChecker.ShowPopup">
            <summary>
            Gets or sets a value indicating whether show popup when process ended.
            </summary>
            <value><c>true</c> if show popup when process ended; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ToolSpellChecker.IconsDirectory">
            <summary>
            Gets or sets the icons directory.
            </summary>
            <value>The icons directory.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ToolSpellChecker.DictionaryFile">
            <summary>
            Gets or sets the dictionary file.
            </summary>
            <value>The dictionary file.</value>
        </member>
        <member name="P:ActiveUp.WebControls.ToolSpellChecker.IsCallback">
            <summary>
            Indicates if a callback occurs from the panel.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolSpellChecker.HttpResponse">
            <summary>
            HTTP response information from the callback.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolSpellChecker.HttpRequest">
            <summary>
            HTTP request information sent by the client.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolSpellChecker.RenderDesign(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders at the design time.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolSpellChecker.OnPreRender(System.EventArgs)">
            <summary>
            Notifies the tool to perform any necessary prerendering steps prior to saving view state and rendering content.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolSpellChecker.RenderImage(System.Web.UI.HtmlTextWriter)">
            <summary>
            Render the tool to the specified HtmlTextWriter object. Usually a Page.
            </summary>
            <param name="output"></param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolSpellChecker.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends the Popup content to a provided HtmlTextWriter object, which writes the content to be rendered on the client.
            </summary>
            <param name="output">The HtmlTextWriter object that receives the server control content.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolSpellChecker.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
            <summary>
            Enables the control to process an event raised when a form is posted to the server.
            </summary>
            <param name="eventArgument">A String that represents an optional event argument to be passed to the event handler.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolSpellChecker.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
            <summary>
            Notify the ASP.NET application that the state of the control has changed.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.ToolStrikeThrough">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolStrikeThrough"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolStrikeThrough.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolStrikeThrough"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolStrikeThrough.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolStrikeThrough"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolStrikeThrough.RenderDesign(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders at the design time.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolStrikeThrough.OnPreRender(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary> 
            <param name="e">Event Args</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolSubscript">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolSubscript"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolSubscript.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolSubscript"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolSubscript.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolSubscript"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolSubscript.RenderDesign(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders at the design time.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolSubscript.OnPreRender(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary> 
            <param name="e">Event Args</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolSuperscript">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolSuperscript"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolSuperscript.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolSuperscript"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolSuperscript.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolSuperscript"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolSuperscript.RenderDesign(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders at the design time.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolSuperscript.OnPreRender(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary> 
            <param name="e">Event Args</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolTable">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolTable"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolTable.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolTable"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolTable.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolTable"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolTable.RenderDesign(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the DropDownList at the design time.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolTable.OnPreRender(System.EventArgs)">
            <summary>
            Notifies the Popup control to perform any necessary prerendering steps prior to saving view state and rendering content.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolTable.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends the Popup content to a provided HTBlTextWriter object, which writes the content to be rendered on the client.
            </summary>
            <param name="output">The HTBlTextWriter object that receives the server control content.</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolTemplateManager">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolTemplateManager"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolTemplateManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolTemplateManager"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolTemplateManager.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolTemplateManager"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolTemplateManager.OnPreRender(System.EventArgs)">
            <summary>
            Notifies the Popup control to perform any necessary prerendering steps prior to saving view state and rendering content.
            </summary>
            <param name="e">An EventArgs object that contains the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolTemplateManager.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends the Popup content to a provided HtmlTextWriter object, which writes the content to be rendered on the client.
            </summary>
            <param name="output">The HtmlTextWriter object that receives the server control content.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolTemplateManager.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
            <summary>
            Enables the control to process an event raised when a form is posted to the server.
            </summary>
            <param name="eventArgument">A String that represents an optional event argument to be passed to the event handler.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolTemplateManager.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
            <summary>
            Notify the ASP.NET application that the state of the control has changed.
            </summary>
        </member>
        <member name="E:ActiveUp.WebControls.ToolTemplateManager.FileLoad">
            <summary>
            Defines the FileLoad event.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolTemplateManager.OnFileLoad(System.EventArgs)">
            <summary>
            Invokes delegates registered with the Load event.
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolTemplateManager.LoadFile(System.String)">
            <summary>
            Load the specified file content in the editor.
            </summary>
            <param name="location">The full path to the file.</param>
        </member>
        <member name="P:ActiveUp.WebControls.ToolTemplateManager.Encoding">
            <summary>
            Gets or sets the encoding to use to load files.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolTemplateManager.Files">
            <summary>
            Gets or sets the Files objects used by the tool.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.ToolTemplateManager.TemplateExtensions">
            <summary>
            Gets or sets the template extensions (with the '.') that is autorized.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.ToolUnderline">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolUnderline"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolUnderline.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolUnderline"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolUnderline.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolUnderline"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolUnderline.RenderDesign(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders at the design time.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolUnderline.OnPreRender(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary> 
            <param name="e">Event Args</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolUnorderedList">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolUnorderedList"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolUnorderedList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolUnorderedList"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolUnorderedList.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolUnorderedList"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolUnorderedList.RenderDesign(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders at the design time.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolUnorderedList.OnPreRender(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary> 
            <param name="e">Event Args</param>
        </member>
        <member name="T:ActiveUp.WebControls.ToolUpdate">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.ToolUpdate"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolUpdate.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolUpdate"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolUpdate.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.ToolUpdate"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolUpdate.RenderDesign(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders at the design time.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolUpdate.OnPreRender(System.EventArgs)">
            <summary>
            Do some work before rendering the control.
            </summary> 
            <param name="e">Event Args</param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolUpdate.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends the Popup content to a provided HtmlTextWriter object, which writes the content to be rendered on the client.
            </summary>
            <param name="output">The HtmlTextWriter object that receives the server control content.</param>
        </member>
        <member name="E:ActiveUp.WebControls.ToolUpdate.SaveClicked">
            <summary>
            The SaveClicked event handler. Fire when you click.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.ToolUpdate.OnSaveClicked(System.EventArgs)">
            <summary>
            A OnSaveClicked event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ActiveUp.WebControls.ToolUpdate.RaisePostBackEvent(System.String)">
            <summary>
            A RaisePostBackEvent.
            </summary>
            <param name="eventArgument">eventArgument</param>
        </member>
        <member name="T:ActiveUp.WebControls.CompleteEventHandler">
            <summary>
            Process complete event handler.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.CorrectWordEventHandler">
            <summary>
            Correct word event handler.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.DictInitEventArgs">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.DictInitEventArgs"/> object.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.DictInitEventArgs.Languge">
            <summary>
            Gets or sets the problem.
            </summary>
            <value>The problem.</value>
        </member>
        <member name="M:ActiveUp.WebControls.DictInitEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.IncorrectWordEventArgs"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.DictInitEventArgs.#ctor(ActiveUp.WebControls.DictInitLangugeEnum)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.IncorrectWordEventArgs"/> class.
            </summary>
            <param name="langEnum">The langage.</param>
        </member>
        <member name="T:ActiveUp.WebControls.DictInitEventHandler">
            <summary>
            Dictionnary initialization event handler.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.DictInitLangugeEnum">
            <summary>
            Dictionary initialization language enumeration.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.DictInitLangugeEnum.LangEnglish">
            <summary>
            English language.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.DictInitLangugeEnum.LangSpanish">
            <summary>
            Spanish language.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.DictInitLangugeEnum.LangFrench">
            <summary>
            French language.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.DictInitLangugeEnum.LangGerman">
            <summary>
            German language.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.DictInitLangugeEnum.LangDutch">
            <summary>
            Dutch language.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.DictionaryChangedEventHandler">
            <summary>
            Dictionary changed event handler.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.IncorrectWordEventArgs">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.IncorrectWordEventArgs"/> object.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.IncorrectWordEventArgs.Problem">
            <summary>
            Gets or sets the problem.
            </summary>
            <value>The problem.</value>
        </member>
        <member name="M:ActiveUp.WebControls.IncorrectWordEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.IncorrectWordEventArgs"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.IncorrectWordEventArgs.#ctor(ActiveUp.WebControls.IncorrectWordProblemEnum)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.IncorrectWordEventArgs"/> class.
            </summary>
            <param name="problemEnum">The problem.</param>
        </member>
        <member name="T:ActiveUp.WebControls.IncorrectWordEventHandler">
            <summary>
            Incorrect word event handler.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.IncorrectWordProblemEnum">
            <summary>
            Incorrect word problem enumeration.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.IncorrectWordProblemEnum.WordIsNotInDict">
            <summary>
            Word is not in dictionnary.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.ReplaceEventHandler">
            <summary>
            Replace event handler.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.StartCheckEventHandler">
            <summary>
            Start check event handler.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.IgnoreVariants">
            <summary>
            this singleton used to save ignore variants
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.IgnoreVariants.instance">
            <summary>
            The static IgnoreVariants instance
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.IgnoreVariants.IgnoreAll">
            <summary>
            Gets or sets a value indicating whether [ignore all].
            </summary>
            <value><c>true</c> if [ignore all]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.IgnoreVariants.IgnoreUppercase">
            <summary>
            this bool true when want to ignore words with uppercase
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.IgnoreVariants.IgnoreLowercase">
            <summary>
            this bool true when want to ignore words with lowercase
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.IgnoreVariants.Instance">
            <summary>
            Gets the static IgnoreVariants instance. Used to be shared between IgnoreVariants' users.
            </summary>
            <value>The singleton IgnoreVariants instance.</value>
        </member>
        <member name="M:ActiveUp.WebControls.IgnoreVariants.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.IgnoreVariants"/> class.
            Constructor is private to allow only creation of IgnoreVariants instances only once.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.RegExConstants">
            <summary>
            Constatns wirh regular expressions to ignore some words
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.RegExConstants.LowerCase">
            <summary>
            Use this regular expression to check if the word is only lower case.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.RegExConstants.UpperCase">
            <summary>
            Use this regular expression to check if the word is only upper case.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.RegExConstants.WithDigits">
            <summary>
            Use this regular expression to check if the word use digits.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.RegExConstants.MixedCase1">
            <summary>
            Use this regulart expressions to check if this word is mixed case.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.RegExConstants.MixedCase2">
            <summary>
            Use this regulart expressions to check if this word is mixed case.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.SpellChecker">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.SpellChecker"/> object.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.SpellChecker.IncorrectWordValue">
            <summary>
            Gets or sets the incorrect word.
            </summary>
            <value>The incorrect word.</value>
        </member>
        <member name="P:ActiveUp.WebControls.SpellChecker.CorrectWords">
            <summary>
            Gets or sets the correct words.
            </summary>
            <value>The correct words.</value>
        </member>
        <member name="T:ActiveUp.WebControls.SpellChecker.DictLanguges">
            <summary>
            Enum of supported languges
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.SpellChecker.DictLanguges.EnglishLang">
            <summary>
            English language.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.SpellChecker.DictLanguges.SpanishLang">
            <summary>
            Spanish language.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.SpellChecker.DictLanguges.FrenchLang">
            <summary>
            French language.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.SpellChecker.DictLanguges.GermanLang">
            <summary>
            German language.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.SpellChecker.DictLanguges.DutchLang">
            <summary>
            Dutch language.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.SpellChecker.WorkLanguge">
            <summary>
            Gets or sets the name of the log file.
            </summary>
            <value>The name of the log file.</value>		
        </member>
        <member name="P:ActiveUp.WebControls.SpellChecker.DictionaryFile">
            <summary>
            Gets or sets the dictionary path.
            </summary>
            <value>The dictionary path.</value>
        </member>
        <member name="P:ActiveUp.WebControls.SpellChecker.WordsCollection">
            <summary>
            get collection of the words in text
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.SpellChecker.CurrentText">
            <summary>
            Gets or sets the current stream reader.
            </summary>
            <value>The current stream reader.</value>
        </member>
        <member name="E:ActiveUp.WebControls.SpellChecker.IncorrectWord">
            <summary>
            Incorrect word event.
            </summary>
        </member>
        <member name="E:ActiveUp.WebControls.SpellChecker.DictInitialization">
            <summary>
            Dictionary initialization event.
            </summary>
        </member>
        <member name="E:ActiveUp.WebControls.SpellChecker.DictionaryChange">
            <summary>
            Dictionary change event.
            </summary>
        </member>
        <member name="E:ActiveUp.WebControls.SpellChecker.Complete">
            <summary>
            Complete event.
            </summary>
        </member>
        <member name="E:ActiveUp.WebControls.SpellChecker.ReplaceWordEvent">
            <summary>
            Replace word event.
            </summary>
        </member>
        <member name="E:ActiveUp.WebControls.SpellChecker.CorrectWord">
            <summary>
            Correct word event.
            </summary>
        </member>
        <member name="E:ActiveUp.WebControls.SpellChecker.StartCheck">
            <summary>
            Start check event.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.SpellChecker.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.SpellChecker.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.SpellChecker"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.SpellChecker.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.SpellChecker.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.SpellChecker.ChangeDictionary(System.String)">
            <summary>
            Method used to set path to other dictionary to use
            </summary>
            <param name="pathToNewDict"></param>
        </member>
        <member name="M:ActiveUp.WebControls.SpellChecker.ReplaceWord(ActiveUp.WebControls.Word,System.String)">
            <summary>
            Replace current badword on selected correct word
            </summary>
            <param name="wrd"></param>
            <param name="correctWord"></param>
        </member>
        <member name="M:ActiveUp.WebControls.SpellChecker.WordIsCorrect(System.String)">
            <summary>
            check if word is correct by serching it in hashtable 
            </summary>
            <param name="word"></param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.SpellChecker.CheckAllWords">
            <summary>
            Checking all words 
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.SpellChecker.GetWordsCollection">
            <summary>
            get words collection of current text
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.SpellChecker.GetAllWords">
            <summary>
            get all words from dictionary
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.SpellChecker.GetTextFromString(System.String)">
            <summary>
            Gets the text from string.
            </summary>
            <param name="textString">The text string.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.SpellChecker.GetTextFromFile(System.String)">
            <summary>
            Gets the text from file.
            </summary>
            <param name="pathToFile">The path to file.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.SpellChecker.GetTextFromFileUsingSpecifiedStreamReader(System.IO.StreamReader)">
            <summary>
            Gets the text from file using specified stream reader.
            </summary>
            <param name="tempStreamReader">The temp stream reader.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.SpellChecker.GetTextFromMemoryStream(System.IO.MemoryStream)">
            <summary>
            Gets the text from memory stream.
            </summary>
            <param name="tempStream">The temp stream.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.SpellChecker.CreatePossibleVarriants(System.String)">
            <summary>
            Creating possible varriants of the beginnig of the bad word
            </summary>
            <param name="h"></param>
        </member>
        <member name="M:ActiveUp.WebControls.SpellChecker.CheckIfIgnored(System.String)">
            <summary>
            chech if word need to be ignored
            </summary>
            <param name="currentWord"></param>
        </member>
        <member name="M:ActiveUp.WebControls.SpellChecker.RaiseStartCheck(System.EventArgs)">
            <summary>
            Raises the start check.
            </summary>
            <param name="args">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.SpellChecker.RaiseCorrectWord(System.EventArgs)">
            <summary>
            Raises the correct word.
            </summary>
            <param name="args">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.SpellChecker.RaiseReplaceWordEvent(System.EventArgs)">
            <summary>
            Raises the replace word event.
            </summary>
            <param name="args">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.SpellChecker.RaiseComplete(System.EventArgs)">
            <summary>
            Raises the complete.
            </summary>
            <param name="args">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.SpellChecker.RaiseDictChange(System.EventArgs)">
            <summary>
            Raises the dict change.
            </summary>
            <param name="args">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.SpellChecker.RaiseIncorrectWord(ActiveUp.WebControls.IncorrectWordEventArgs)">
            <summary>
            Raises the incorrect word.
            </summary>
            <param name="args">The <see cref="!:ActiveUp.WebControls.SpellChecking.IncorrectWordEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.SpellChecker.RaiseDictInit(ActiveUp.WebControls.DictInitEventArgs)">
            <summary>
            Raises the dict init.
            </summary>
            <param name="args">The <see cref="!:ActiveUp.WebControls.SpellChecking.DictInitEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:ActiveUp.WebControls.SpellChecking">
            <summary>
            SpellCheckClass used for spellcheking of the current word
            use regular expressions to optimize checking
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.SpellChecking.WordToCheck">
            <summary>
            Gets or sets the word to check.
            </summary>
            <value>The word to check.</value>
        </member>
        <member name="M:ActiveUp.WebControls.SpellChecking.CheckWord">
            <summary>
            Check word from dictionary 
            </summary>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.SpellChecking.#ctor(System.String,System.Collections.Hashtable,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.SpellChecking"/> class.
            </summary>
            <param name="word">The word.</param>
            <param name="words">The words.</param>
            <param name="vars">The vars.</param>
        </member>
        <member name="T:ActiveUp.WebControls.Word">
            <summary>
            Word class used to save words and then word with them
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Word.CurrentWord">
            <summary>
            Current word.
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Word.TrueWords">
            <summary>
            Array list of possible correct words to current
            </summary>
        </member>
        <member name="P:ActiveUp.WebControls.Word.IsTrue">
            <summary>
            Gets or sets a value indicating whether this instance is true.
            </summary>
            <value><c>true</c> if this instance is true; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Word.CurrentText">
            <summary>
            Gets or sets the current text.
            </summary>
            <value>The current text.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Word.EndOfTheWord">
            <summary>
            Gets or sets the end of the word.
            </summary>
            <value>The end of the word.</value>
        </member>
        <member name="P:ActiveUp.WebControls.Word.BeginningOfTheWord">
            <summary>
            Gets or sets the beginning of the word.
            </summary>
            <value>The beginning of the word.</value>
        </member>
        <member name="M:ActiveUp.WebControls.Word.CheckWord(System.String)">
            <summary>
            Check word is it true or if not check possible values of correct form to this word
            </summary>
            <param name="vars"></param>
        </member>
        <member name="M:ActiveUp.WebControls.Word.GetWord">
            <summary>
            Method used to get current word from whole text
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.Word.#ctor(System.Int32,System.Int32,System.String,System.Collections.Hashtable)">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.Word"/> class.
            </summary>
            <param name="beg">The beg.</param>
            <param name="end">The end.</param>
            <param name="text">The text.</param>
            <param name="AllWords">All words.</param>
        </member>
        <member name="T:ActiveUp.WebControls.DateOperation">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.DateOperation"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.DateOperation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.DateOperation"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.DateOperation.GetDayPos(System.Web.UI.WebControls.FirstDayOfWeek,System.Web.UI.WebControls.FirstDayOfWeek)">
            <summary>
            Gets the day position.
            </summary>
            <param name="firstDay">The first day.</param>
            <param name="firstDayOfWeekCalendar">The first day of week calendar.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.DateOperation.FormatedDate(System.DateTime,ActiveUp.WebControls.DateFormatLocale)">
            <summary>
            Formats the date.
            </summary>
            <param name="date">The date.</param>
            <param name="format">The format.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.DateOperation.GetWeekNumber(System.DateTime)">
            <summary>
            Gets the week number.
            </summary>
            <param name="dt">The dt.</param>
            <returns></returns>
        </member>
        <member name="T:ActiveUp.WebControls.Define">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.Define"/> object.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Define.SCRIPT_DIRECTORY">
            <summary>
            The default script directory path.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.Define.IMAGES_DIRECTORY">
            <summary>
            The default images directory path.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.WinControls.BT">
            <summary>
            Margin structure.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.WinControls.BT.LeftMargin">
            <summary>
            Left margin.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.WinControls.BT.TextMargin">
            <summary>
            Text margin.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.WinControls.ButtonXP">
            <summary>
            Represents a <see cref="T:ActiveUp.WebControls.WinControls.ButtonXP"/> object.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.WinControls.ButtonXP.GetCurrentThemeName(System.Text.StringBuilder,System.Int32,System.Text.StringBuilder,System.Int32,System.Text.StringBuilder,System.Int32)">
            <summary>
            Gets the name of the current theme.
            </summary>
            <param name="pszThemeFileName">Name of the PSZ theme file.</param>
            <param name="dwMaxNameChars">The dw maximum name chars.</param>
            <param name="pszColorBuff">The PSZ color buffer.</param>
            <param name="cchMaxColorChars">The CCH max color chars.</param>
            <param name="pszSizeBuff">The PSZ size buffer.</param>
            <param name="cchMaxSizeChars">The CCH maximum size chars.</param>
            <returns></returns>
        </member>
        <member name="M:ActiveUp.WebControls.WinControls.ButtonXP.IsAppThemed">
            <summary>
            Determines whether is the application is themed.
            </summary>
            <returns>
            	<c>true</c> if the application is themed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:ActiveUp.WebControls.WinControls.ButtonXP.States">
            <summary>
            States enumeration.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.WinControls.ButtonXP.States.Normal">
            <summary>
            Normal state.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.WinControls.ButtonXP.States.MouseOver">
            <summary>
            Mouse over state.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.WinControls.ButtonXP.States.Pushed">
            <summary>
            Pushed state.
            </summary>
        </member>
        <member name="T:ActiveUp.WebControls.WinControls.ButtonXP.Schemes">
            <summary>
            Schemes enumeration.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.WinControls.ButtonXP.Schemes.Blue">
            <summary>
            Blue scheme.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.WinControls.ButtonXP.Schemes.OliveGreen">
            <summary>
            Oliver green scheme.
            </summary>
        </member>
        <member name="F:ActiveUp.WebControls.WinControls.ButtonXP.Schemes.Silver">
            <summary>
            Silver scheme.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.WinControls.ButtonXP.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ActiveUp.WebControls.WinControls.ButtonXP"/> class.
            </summary>
        </member>
        <member name="M:ActiveUp.WebControls.WinControls.ButtonXP.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.Control"/> and optionally releases the managed
            resources.
            </summary>
            <param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</param>
        </member>
        <member name="P:ActiveUp.WebControls.WinControls.ButtonXP.DefaultScheme">
            <summary>
            Gets or sets a value indicating whether is the default scheme.
            </summary>
            <value><c>true</c> if is the default scheme; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ActiveUp.WebControls.WinControls.ButtonXP.Scheme">
            <summary>
            Gets or sets the scheme.
            </summary>
            <value>The scheme.</value>
        </member>
        <member name="P:ActiveUp.WebControls.WinControls.ButtonXP.Image">
            <summary>
            Gets or sets the image.
            </summary>
            <value>The image.</value>
        </member>
        <member name="P:ActiveUp.WebControls.WinControls.ButtonXP.SizeImgButton">
            <summary>
            Gets or sets the image size button.
            </summary>
            <value>The image size button.</value>
        </member>
        <member name="P:ActiveUp.WebControls.WinControls.ButtonXP.Text">
            <summary>
            Gets or sets the text associated with this control.
            </summary>
            <value></value>
        </member>
        <member name="M:ActiveUp.WebControls.WinControls.ButtonXP.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseMove"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.WinControls.ButtonXP.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseLeave"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.WinControls.ButtonXP.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseDown"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.WinControls.ButtonXP.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseUp"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.WinControls.ButtonXP.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.WinControls.ButtonXP.OnClick(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Click"/>
            event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.WinControls.ButtonXP.OnEnter(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Enter"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.WinControls.ButtonXP.OnLeave(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Leave"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.WinControls.ButtonXP.OnParentChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.ParentChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.WinControls.ButtonXP.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the key down event.
            </summary>
            <param name="ke">The <see cref="T:System.Windows.Forms.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.WinControls.ButtonXP.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the key up event.
            </summary>
            <param name="ke">The <see cref="T:System.Windows.Forms.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.WinControls.ButtonXP.OnResize(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Resize"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.WinControls.ButtonXP.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.EnabledChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ActiveUp.WebControls.WinControls.ButtonXP.GetTextSize(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Size)">
            <summary>
            Gets the text size.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="size">The size.</param>
            <returns></returns>
        </member>
    </members>
</doc>
