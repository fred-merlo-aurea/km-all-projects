using System;
using System.Configuration;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Text.RegularExpressions;
using ecn.common.classes;

namespace ecn.communicator.classes
{
	
	
	
    public class ImportFunctions {

        ECN_Framework.Common.SecurityCheck sc;
        string connStr="";

        public ImportFunctions(){
            sc = new ECN_Framework.Common.SecurityCheck();	
            connStr = ConfigurationManager.AppSettings["connString"];
        }

        public void LoadDemoEmail(string email_address, string first_name, string last_name, string company, string phone_number, string live_demo, string test_acct, string ip_addr) {
            // Load up the emails table to prepair for a single address entry.
            // Most of the values are self explanitory User1 gets Live Demo, User 2 gets Test Account, User 3 gets IP address
             //FIXME -- Needs the correct Demo group ID. Was hard coded before as well.
            Groups current_group = new Groups(1234);

            Emails demo_email = new Emails();
            demo_email.InsertDemoEmail(email_address,first_name,last_name,company,phone_number,live_demo,test_acct,ip_addr);
            
            //current_group.AttachHtmlSubscribe(demo_email);
			current_group.AttachEmail(demo_email, "html", "S");

        }
       

        public int LoadEmailsFromString(string instring, string FormatTypeCode, string SubscribeTypeCode, int GroupID) {

			int i=0;
			Regex cr = new Regex("\n");
            int customer_id = Convert.ToInt32(sc.CustomerID());

            Emails email_to_add = new Emails();
            email_to_add.CustomerID(customer_id);

            Groups current_group = new Groups(GroupID);
            current_group.CustomerID(customer_id);
            current_group.FormatTypeCode(FormatTypeCode);
            current_group.SubscribeTypeCode(SubscribeTypeCode);


			foreach (string ss in cr.Split(instring)){
				string emailaddress=StringFunctions.Remove(ss,StringFunctions.NonDomain());
                if (emailaddress!=""){ //make sure it's not blank
				    email_to_add.EmailAddress(emailaddress);

                    // Ensure we have this email address created and insert it into the group. AttachEmail knows about the "all groups" type.
                    email_to_add.EnsureEmail();
                    current_group.AttachEmail(email_to_add);
                    i++;
                }
                
			}
  
			return i;
		}

        public int LoadPhoneNumberFromString(string instring, string FormatTypeCode, string SubscribeTypeCode, int GroupID)
        {

            int i = 0;
            Regex cr = new Regex("\n");
            int customer_id = Convert.ToInt32(sc.CustomerID());

            Emails email_to_add = new Emails();
            email_to_add.CustomerID(customer_id);

            Groups current_group = new Groups(GroupID);
            current_group.CustomerID(customer_id);
            current_group.FormatTypeCode(FormatTypeCode);
            current_group.SubscribeTypeCode(SubscribeTypeCode);


            foreach (string ss in cr.Split(instring))
            {
                string phoneNumber = StringFunctions.Remove(ss, StringFunctions.NonDomain());
                if (phoneNumber != "")
                { //make sure it's not blank
                    email_to_add.EmailAddress(phoneNumber+"@KMautogenerated.com");
                    email_to_add.Mobile = phoneNumber;
                    // Ensure we have this email address created and insert it into the group. AttachEmail knows about the "all groups" type.
                    email_to_add.EnsureMobile();
                    current_group.AttachEmail(email_to_add);
                    i++;
                }

            }

            return i;
        }

        public int LoadSingleEmail(string EmailAddress, string CustomerID, int GroupID, string FormatTypeCode, string SubscribeTypeCode) 
        {
            Groups group = new Groups(GroupID);
            EmailAddress=StringFunctions.Remove(EmailAddress,StringFunctions.NonDomain());

            Emails my_email = new Emails();
            my_email.CustomerID( Convert.ToInt32(CustomerID));
            my_email.EmailAddress(EmailAddress);
            my_email.EnsureEmail();
            group.AttachEmail(my_email,FormatTypeCode,SubscribeTypeCode);

            return my_email.ID();
        }

	}

}
